/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"main": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./main.js","vendors~main"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./img/logo.jpg":
/*!**********************!*\
  !*** ./img/logo.jpg ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"3715feb9734635de328e3af226b2ed5b.jpg\");\n\n//# sourceURL=webpack:///./img/logo.jpg?");

/***/ }),

/***/ "./intlInputPhone.js":
/*!***************************!*\
  !*** ./intlInputPhone.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* danielkanangina/intlInputPhone\n*  VERSION  0.0.1\n*  LICENSE MIT\n*\n* */\nif (typeof jQuery === 'undefined') {\n  throw new Error('IntlInputPhoneNumber JavaScript requires jQuery');\n}\n\n(function ($) {\n  var IntlInputPhone = function IntlInputPhone(element, options) {\n    this.element = element;\n    this.preferred_country = typeof options != 'undefined' ? options.preferred_country : ['ru'];\n    this.display_error = typeof options != 'undefined' ? options.display_error : 'on';\n    this.error_message = typeof options != 'undefined' ? options.error_message : IntlInputPhone.DEFAULTS.error_message;\n  };\n\n  IntlInputPhone.VERSION = '0.0.1';\n  IntlInputPhone.DEFAULTS = {\n    countries: [{\n      \"name\": \"Россия\",\n      \"cca2\": \"RU\",\n      \"callingCode\": \"7\"\n    }],\n    error_message: {\n      \"INVALID_PH_N\": \"Invalid phone number\",\n      \"INVALID_CC\": \"Invalid country code\",\n      \"TOO_SHORT\": \"The phone number supplier is too short\",\n      \"TOO_LONG\": \"The phone number supplier is too long\",\n      \"UNKNOWN\": \"Unknow phone number\"\n    },\n    item: '<li><a href=\"javascript:void(0)\" role=\"button\" class=\"country\"><i style=\"margin-right: 10px;\" id=\"@cca2\" class=\"flag @cca2\"></i>@name<i id=\"@callingCode\" class=\"callingCode\" style=\"margin-left: 10px;\">+@callingCode</i></a><li>',\n    intlInputPhone: '<input type=\"hidden\" name=\"intlInputPhone\" class=\"intlInputPhone\" size=\"2\" value=\\'@data\\' />',\n    separator: '<li role=\"separator\" class=\"divider\"></li>',\n    template: '<div class=\"input-group\"><div class=\"input-group-btn\"><button type=\"button\" id=\"btn-country\" class=\"btn btn-default  f16 dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><span class=\"flag @cca2 btn-flag\"></span><span class=\"btn-cc\">&nbsp;&nbsp; +@callingCode &nbsp;&nbsp;</span><span class=\"caret\"></span></button> <ul class=\"dropdown-menu f16\">@country_items</ul></div><input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" class=\"form-control phoneNumber\" placeholder=\"Phone Number\" size=\"25\" /><input type=\"hidden\" name=\"defaultCountry\" id=\"defaultCountry\" size=\"2\" value=\"@cca2\" /><input type=\"hidden\" name=\"carrierCode\" id=\"carrierCode\" size=\"2\" value=\"@callingCode\" /></div>'\n  };\n\n  IntlInputPhone.prototype.init = function () {\n    this.render(IntlInputPhone.DEFAULTS.template, {\n      cca2: this.getDefaultCountry().cca2.toLowerCase(),\n      callingCode: this.getDefaultCountry().callingCode,\n      country_items: this.countryItems()\n    });\n    this.btnEvent();\n    this.inputEvent();\n    this.formEvent();\n  };\n\n  IntlInputPhone.prototype.getDefaultCountry = function () {\n    var dc,\n        $this = this;\n    $.each(IntlInputPhone.DEFAULTS.countries, function (index, value) {\n      value.cca2 == $this.preferred_country[0].toUpperCase() ? dc = value : null;\n    });\n    if (_typeof(dc) == 'object') return dc;else throw new Error('Invalid default country.');\n  };\n\n  IntlInputPhone.prototype.countryItems = function () {\n    var items = '',\n        $this = this,\n        pc = '',\n        cs = '';\n    $.each(IntlInputPhone.DEFAULTS.countries, function (index, value) {\n      $.each($this.preferred_country, function (k, v) {\n        if (v.toUpperCase() == value.cca2) {\n          var c = $this.arrayToKeysValues(value).keys,\n              d = $.map(value, function (vl, ix) {\n            if (ix == 'cca2') return vl.toLowerCase();else return vl;\n          });\n          pc += IntlInputPhone.DEFAULTS.item.format(c, d);\n        }\n      });\n      var a = $this.arrayToKeysValues(value).keys,\n          b = $.map(value, function (vl, ix) {\n        if (ix == 'cca2') return vl.toLowerCase();else return vl;\n      });\n      cs += IntlInputPhone.DEFAULTS.item.format(a, b);\n    });\n\n    if (pc.length > 0) {\n      items += pc;\n      items += IntlInputPhone.DEFAULTS.separator;\n    }\n\n    items += cs;\n    return items;\n  };\n\n  IntlInputPhone.prototype.btnEvent = function () {\n    var country = $('.country'),\n        btn_flag = $('.btn-flag'),\n        btn_cc = $('.btn-cc'),\n        input_cca2 = $('#defaultCountry'),\n        input_cc = $('#carrierCode');\n    country.click(function () {\n      var callingCode = $(this).find('.callingCode').attr('id'),\n          flag = $(this).find('.flag').attr('id');\n      btn_flag.attr('class', 'flag ' + flag);\n      btn_cc.html('&nbsp;&nbsp;+' + callingCode + '&nbsp;&nbsp;');\n      input_cca2.val(flag);\n      input_cc.val(callingCode);\n    });\n  };\n\n  IntlInputPhone.prototype.inputEvent = function () {\n    var $this = this,\n        h = '';\n    $('input.phoneNumber').on('blur', function () {\n      $this.validate($(this));\n    });\n  };\n\n  IntlInputPhone.prototype.formEvent = function () {\n    var form = this.element.closest('form'),\n        $this = this;\n    form.submit(function () {\n      if ($this.validate($('input[name=phoneNumber]')) == false) {\n        return false;\n      }\n    });\n  };\n\n  IntlInputPhone.prototype.validate = function (el) {\n    var r = phoneNumberParser(),\n        h = '';\n\n    if (_typeof(r) == 'object') {\n      this.hideError(el);\n      h = IntlInputPhone.DEFAULTS.intlInputPhone.format(['data'], [JSON.stringify(r)]);\n\n      if ($('.intlInputPhone').length > 0) {\n        $('.intlInputPhone').remove();\n        $('.input-group').append(h);\n      } else {\n        $('.input-group').append(h);\n      }\n    } else {\n      $('.intlInputPhone').remove();\n      this.showError(el, this.getErrorMessage(r));\n      return false;\n    }\n  };\n\n  IntlInputPhone.prototype.showError = function (el, message) {\n    if (typeof this.display_error == 'string' && this.display_error == 'on') {\n      el.attr('data-container', 'body');\n      el.attr('data-toggle', 'popover');\n      el.attr('data-placement', 'right');\n      el.attr('data-content', message);\n      el.popover('show');\n    } else if (_typeof(this.display_error) == 'object') {\n      this.display_error.text(message);\n    } else {\n      return;\n    }\n  };\n\n  IntlInputPhone.prototype.hideError = function (el) {\n    if (_typeof(this.display_error) == 'object') {\n      this.display_error.remove();\n    }\n\n    el.removeAttr('data-container');\n    el.removeAttr('data-toggle');\n    el.removeAttr('data-placement');\n    el.removeAttr('data-content');\n    el.popover('destroy');\n  };\n\n  IntlInputPhone.prototype.getErrorMessage = function (error_type) {\n    var msg = '',\n        $this = this;\n\n    switch (error_type) {\n      case \"INVALID_PH_N\":\n        msg = $this.error_message.INVALID_PH_N;\n        break;\n\n      case \"INVALID_COUNTRY_CODE\":\n        msg = $this.error_message.INVALID_CC;\n        break;\n\n      case \"TOO_SHORT\":\n        msg = $this.error_message.TOO_SHORT;\n        break;\n\n      case \"TOO_LONG\":\n        msg = $this.error_message.TOO_LONG;\n        break;\n\n      case \"UNKNOWN\":\n        msg = $this.error_message.UNKNOWN;\n        break;\n\n      default:\n        msg = error_type;\n    }\n\n    return msg;\n  };\n\n  IntlInputPhone.prototype.render = function (template, data) {\n    this.element.html(template.format(this.arrayToKeysValues(data).keys, this.arrayToKeysValues(data).values));\n  };\n\n  IntlInputPhone.prototype.arrayToKeysValues = function (data) {\n    if (typeof data == 'undefined') throw new Error('Can\\'convert undefined object');else return {\n      keys: Object.keys(data),\n      values: $.map(data, function (el) {\n        return el;\n      })\n    };\n  };\n\n  String.prototype.format = function (find, replace) {\n    var replaceString = this,\n        regex;\n\n    for (var i = 0; i < find.length; i++) {\n      regex = new RegExp('@' + find[i], \"g\");\n      replaceString = replaceString.replace(regex, replace[i]);\n    }\n\n    return replaceString;\n  };\n\n  function Plugin(options) {\n    var inputPhone = new IntlInputPhone(this, options);\n    inputPhone.init();\n  }\n\n  $.fn.intlInputPhone = Plugin;\n})(jQuery); // Bootstrap: dropdown.js, tooltip.js, popover.js v3.3.6\n\n\n+function (t) {\n  \"use strict\";\n\n  var e = t.fn.jquery.split(\" \")[0].split(\".\");\n  if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] > 2) throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\");\n}(jQuery), +function (t) {\n  \"use strict\";\n\n  function e(e) {\n    var o = e.attr(\"data-target\");\n    o || (o = e.attr(\"href\"), o = o && /#[A-Za-z]/.test(o) && o.replace(/.*(?=#[^\\s]*$)/, \"\"));\n    var i = o && t(o);\n    return i && i.length ? i : e.parent();\n  }\n\n  function o(o) {\n    o && 3 === o.which || (t(n).remove(), t(r).each(function () {\n      var i = t(this),\n          n = e(i),\n          r = {\n        relatedTarget: this\n      };\n      n.hasClass(\"open\") && (o && \"click\" == o.type && /input|textarea/i.test(o.target.tagName) && t.contains(n[0], o.target) || (n.trigger(o = t.Event(\"hide.bs.dropdown\", r)), o.isDefaultPrevented() || (i.attr(\"aria-expanded\", \"false\"), n.removeClass(\"open\").trigger(t.Event(\"hidden.bs.dropdown\", r)))));\n    }));\n  }\n\n  function i(e) {\n    return this.each(function () {\n      var o = t(this),\n          i = o.data(\"bs.dropdown\");\n      i || o.data(\"bs.dropdown\", i = new s(this)), \"string\" == typeof e && i[e].call(o);\n    });\n  }\n\n  var n = \".dropdown-backdrop\",\n      r = '[data-toggle=\"dropdown\"]',\n      s = function s(e) {\n    t(e).on(\"click.bs.dropdown\", this.toggle);\n  };\n\n  s.VERSION = \"3.3.6\", s.prototype.toggle = function (i) {\n    var n = t(this);\n\n    if (!n.is(\".disabled, :disabled\")) {\n      var r = e(n),\n          s = r.hasClass(\"open\");\n\n      if (o(), !s) {\n        \"ontouchstart\" in document.documentElement && !r.closest(\".navbar-nav\").length && t(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(t(this)).on(\"click\", o);\n        var a = {\n          relatedTarget: this\n        };\n        if (r.trigger(i = t.Event(\"show.bs.dropdown\", a)), i.isDefaultPrevented()) return;\n        n.trigger(\"focus\").attr(\"aria-expanded\", \"true\"), r.toggleClass(\"open\").trigger(t.Event(\"shown.bs.dropdown\", a));\n      }\n\n      return !1;\n    }\n  }, s.prototype.keydown = function (o) {\n    if (/(38|40|27|32)/.test(o.which) && !/input|textarea/i.test(o.target.tagName)) {\n      var i = t(this);\n\n      if (o.preventDefault(), o.stopPropagation(), !i.is(\".disabled, :disabled\")) {\n        var n = e(i),\n            s = n.hasClass(\"open\");\n        if (!s && 27 != o.which || s && 27 == o.which) return 27 == o.which && n.find(r).trigger(\"focus\"), i.trigger(\"click\");\n        var a = \" li:not(.disabled):visible a\",\n            p = n.find(\".dropdown-menu\" + a);\n\n        if (p.length) {\n          var l = p.index(o.target);\n          38 == o.which && l > 0 && l--, 40 == o.which && l < p.length - 1 && l++, ~l || (l = 0), p.eq(l).trigger(\"focus\");\n        }\n      }\n    }\n  };\n  var a = t.fn.dropdown;\n  t.fn.dropdown = i, t.fn.dropdown.Constructor = s, t.fn.dropdown.noConflict = function () {\n    return t.fn.dropdown = a, this;\n  }, t(document).on(\"click.bs.dropdown.data-api\", o).on(\"click.bs.dropdown.data-api\", \".dropdown form\", function (t) {\n    t.stopPropagation();\n  }).on(\"click.bs.dropdown.data-api\", r, s.prototype.toggle).on(\"keydown.bs.dropdown.data-api\", r, s.prototype.keydown).on(\"keydown.bs.dropdown.data-api\", \".dropdown-menu\", s.prototype.keydown);\n}(jQuery), +function (t) {\n  \"use strict\";\n\n  function e(e) {\n    return this.each(function () {\n      var i = t(this),\n          n = i.data(\"bs.tooltip\"),\n          r = \"object\" == _typeof(e) && e;\n      (n || !/destroy|hide/.test(e)) && (n || i.data(\"bs.tooltip\", n = new o(this, r)), \"string\" == typeof e && n[e]());\n    });\n  }\n\n  var o = function o(t, e) {\n    this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init(\"tooltip\", t, e);\n  };\n\n  o.VERSION = \"3.3.6\", o.TRANSITION_DURATION = 150, o.DEFAULTS = {\n    animation: !0,\n    placement: \"top\",\n    selector: !1,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: \"hover focus\",\n    title: \"\",\n    delay: 0,\n    html: !1,\n    container: !1,\n    viewport: {\n      selector: \"body\",\n      padding: 0\n    }\n  }, o.prototype.init = function (e, o, i) {\n    if (this.enabled = !0, this.type = e, this.$element = t(o), this.options = this.getOptions(i), this.$viewport = this.options.viewport && t(t.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = {\n      click: !1,\n      hover: !1,\n      focus: !1\n    }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error(\"`selector` option must be specified when initializing \" + this.type + \" on the window.document object!\");\n\n    for (var n = this.options.trigger.split(\" \"), r = n.length; r--;) {\n      var s = n[r];\n      if (\"click\" == s) this.$element.on(\"click.\" + this.type, this.options.selector, t.proxy(this.toggle, this));else if (\"manual\" != s) {\n        var a = \"hover\" == s ? \"mouseenter\" : \"focusin\",\n            p = \"hover\" == s ? \"mouseleave\" : \"focusout\";\n        this.$element.on(a + \".\" + this.type, this.options.selector, t.proxy(this.enter, this)), this.$element.on(p + \".\" + this.type, this.options.selector, t.proxy(this.leave, this));\n      }\n    }\n\n    this.options.selector ? this._options = t.extend({}, this.options, {\n      trigger: \"manual\",\n      selector: \"\"\n    }) : this.fixTitle();\n  }, o.prototype.getDefaults = function () {\n    return o.DEFAULTS;\n  }, o.prototype.getOptions = function (e) {\n    return e = t.extend({}, this.getDefaults(), this.$element.data(), e), e.delay && \"number\" == typeof e.delay && (e.delay = {\n      show: e.delay,\n      hide: e.delay\n    }), e;\n  }, o.prototype.getDelegateOptions = function () {\n    var e = {},\n        o = this.getDefaults();\n    return this._options && t.each(this._options, function (t, i) {\n      o[t] != i && (e[t] = i);\n    }), e;\n  }, o.prototype.enter = function (e) {\n    var o = e instanceof this.constructor ? e : t(e.currentTarget).data(\"bs.\" + this.type);\n    return o || (o = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data(\"bs.\" + this.type, o)), e instanceof t.Event && (o.inState[\"focusin\" == e.type ? \"focus\" : \"hover\"] = !0), o.tip().hasClass(\"in\") || \"in\" == o.hoverState ? void (o.hoverState = \"in\") : (clearTimeout(o.timeout), o.hoverState = \"in\", o.options.delay && o.options.delay.show ? void (o.timeout = setTimeout(function () {\n      \"in\" == o.hoverState && o.show();\n    }, o.options.delay.show)) : o.show());\n  }, o.prototype.isInStateTrue = function () {\n    for (var t in this.inState) {\n      if (this.inState[t]) return !0;\n    }\n\n    return !1;\n  }, o.prototype.leave = function (e) {\n    var o = e instanceof this.constructor ? e : t(e.currentTarget).data(\"bs.\" + this.type);\n    return o || (o = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data(\"bs.\" + this.type, o)), e instanceof t.Event && (o.inState[\"focusout\" == e.type ? \"focus\" : \"hover\"] = !1), o.isInStateTrue() ? void 0 : (clearTimeout(o.timeout), o.hoverState = \"out\", o.options.delay && o.options.delay.hide ? void (o.timeout = setTimeout(function () {\n      \"out\" == o.hoverState && o.hide();\n    }, o.options.delay.hide)) : o.hide());\n  }, o.prototype.show = function () {\n    var e = t.Event(\"show.bs.\" + this.type);\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e);\n      var i = t.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);\n      if (e.isDefaultPrevented() || !i) return;\n      var n = this,\n          r = this.tip(),\n          s = this.getUID(this.type);\n      this.setContent(), r.attr(\"id\", s), this.$element.attr(\"aria-describedby\", s), this.options.animation && r.addClass(\"fade\");\n      var a = \"function\" == typeof this.options.placement ? this.options.placement.call(this, r[0], this.$element[0]) : this.options.placement,\n          p = /\\s?auto?\\s?/i,\n          l = p.test(a);\n      l && (a = a.replace(p, \"\") || \"top\"), r.detach().css({\n        top: 0,\n        left: 0,\n        display: \"block\"\n      }).addClass(a).data(\"bs.\" + this.type, this), this.options.container ? r.appendTo(this.options.container) : r.insertAfter(this.$element), this.$element.trigger(\"inserted.bs.\" + this.type);\n      var h = this.getPosition(),\n          d = r[0].offsetWidth,\n          c = r[0].offsetHeight;\n\n      if (l) {\n        var f = a,\n            u = this.getPosition(this.$viewport);\n        a = \"bottom\" == a && h.bottom + c > u.bottom ? \"top\" : \"top\" == a && h.top - c < u.top ? \"bottom\" : \"right\" == a && h.right + d > u.width ? \"left\" : \"left\" == a && h.left - d < u.left ? \"right\" : a, r.removeClass(f).addClass(a);\n      }\n\n      var v = this.getCalculatedOffset(a, h, d, c);\n      this.applyPlacement(v, a);\n\n      var g = function g() {\n        var t = n.hoverState;\n        n.$element.trigger(\"shown.bs.\" + n.type), n.hoverState = null, \"out\" == t && n.leave(n);\n      };\n\n      t.support.transition && this.$tip.hasClass(\"fade\") ? r.one(\"bsTransitionEnd\", g).emulateTransitionEnd(o.TRANSITION_DURATION) : g();\n    }\n  }, o.prototype.applyPlacement = function (e, o) {\n    var i = this.tip(),\n        n = i[0].offsetWidth,\n        r = i[0].offsetHeight,\n        s = parseInt(i.css(\"margin-top\"), 10),\n        a = parseInt(i.css(\"margin-left\"), 10);\n    isNaN(s) && (s = 0), isNaN(a) && (a = 0), e.top += s, e.left += a, t.offset.setOffset(i[0], t.extend({\n      using: function using(t) {\n        i.css({\n          top: Math.round(t.top),\n          left: Math.round(t.left)\n        });\n      }\n    }, e), 0), i.addClass(\"in\");\n    var p = i[0].offsetWidth,\n        l = i[0].offsetHeight;\n    \"top\" == o && l != r && (e.top = e.top + r - l);\n    var h = this.getViewportAdjustedDelta(o, e, p, l);\n    h.left ? e.left += h.left : e.top += h.top;\n    var d = /top|bottom/.test(o),\n        c = d ? 2 * h.left - n + p : 2 * h.top - r + l,\n        f = d ? \"offsetWidth\" : \"offsetHeight\";\n    i.offset(e), this.replaceArrow(c, i[0][f], d);\n  }, o.prototype.replaceArrow = function (t, e, o) {\n    this.arrow().css(o ? \"left\" : \"top\", 50 * (1 - t / e) + \"%\").css(o ? \"top\" : \"left\", \"\");\n  }, o.prototype.setContent = function () {\n    var t = this.tip(),\n        e = this.getTitle();\n    t.find(\".tooltip-inner\")[this.options.html ? \"html\" : \"text\"](e), t.removeClass(\"fade in top bottom left right\");\n  }, o.prototype.hide = function (e) {\n    function i() {\n      \"in\" != n.hoverState && r.detach(), n.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\" + n.type), e && e();\n    }\n\n    var n = this,\n        r = t(this.$tip),\n        s = t.Event(\"hide.bs.\" + this.type);\n    return this.$element.trigger(s), s.isDefaultPrevented() ? void 0 : (r.removeClass(\"in\"), t.support.transition && r.hasClass(\"fade\") ? r.one(\"bsTransitionEnd\", i).emulateTransitionEnd(o.TRANSITION_DURATION) : i(), this.hoverState = null, this);\n  }, o.prototype.fixTitle = function () {\n    var t = this.$element;\n    (t.attr(\"title\") || \"string\" != typeof t.attr(\"data-original-title\")) && t.attr(\"data-original-title\", t.attr(\"title\") || \"\").attr(\"title\", \"\");\n  }, o.prototype.hasContent = function () {\n    return this.getTitle();\n  }, o.prototype.getPosition = function (e) {\n    e = e || this.$element;\n    var o = e[0],\n        i = \"BODY\" == o.tagName,\n        n = o.getBoundingClientRect();\n    null == n.width && (n = t.extend({}, n, {\n      width: n.right - n.left,\n      height: n.bottom - n.top\n    }));\n    var r = i ? {\n      top: 0,\n      left: 0\n    } : e.offset(),\n        s = {\n      scroll: i ? document.documentElement.scrollTop || document.body.scrollTop : e.scrollTop()\n    },\n        a = i ? {\n      width: t(window).width(),\n      height: t(window).height()\n    } : null;\n    return t.extend({}, n, s, a, r);\n  }, o.prototype.getCalculatedOffset = function (t, e, o, i) {\n    return \"bottom\" == t ? {\n      top: e.top + e.height,\n      left: e.left + e.width / 2 - o / 2\n    } : \"top\" == t ? {\n      top: e.top - i,\n      left: e.left + e.width / 2 - o / 2\n    } : \"left\" == t ? {\n      top: e.top + e.height / 2 - i / 2,\n      left: e.left - o\n    } : {\n      top: e.top + e.height / 2 - i / 2,\n      left: e.left + e.width\n    };\n  }, o.prototype.getViewportAdjustedDelta = function (t, e, o, i) {\n    var n = {\n      top: 0,\n      left: 0\n    };\n    if (!this.$viewport) return n;\n    var r = this.options.viewport && this.options.viewport.padding || 0,\n        s = this.getPosition(this.$viewport);\n\n    if (/right|left/.test(t)) {\n      var a = e.top - r - s.scroll,\n          p = e.top + r - s.scroll + i;\n      a < s.top ? n.top = s.top - a : p > s.top + s.height && (n.top = s.top + s.height - p);\n    } else {\n      var l = e.left - r,\n          h = e.left + r + o;\n      l < s.left ? n.left = s.left - l : h > s.right && (n.left = s.left + s.width - h);\n    }\n\n    return n;\n  }, o.prototype.getTitle = function () {\n    var t,\n        e = this.$element,\n        o = this.options;\n    return t = e.attr(\"data-original-title\") || (\"function\" == typeof o.title ? o.title.call(e[0]) : o.title);\n  }, o.prototype.getUID = function (t) {\n    do {\n      t += ~~(1e6 * Math.random());\n    } while (document.getElementById(t));\n\n    return t;\n  }, o.prototype.tip = function () {\n    if (!this.$tip && (this.$tip = t(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + \" `template` option must consist of exactly 1 top-level element!\");\n    return this.$tip;\n  }, o.prototype.arrow = function () {\n    return this.$arrow = this.$arrow || this.tip().find(\".tooltip-arrow\");\n  }, o.prototype.enable = function () {\n    this.enabled = !0;\n  }, o.prototype.disable = function () {\n    this.enabled = !1;\n  }, o.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled;\n  }, o.prototype.toggle = function (e) {\n    var o = this;\n    e && (o = t(e.currentTarget).data(\"bs.\" + this.type), o || (o = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data(\"bs.\" + this.type, o))), e ? (o.inState.click = !o.inState.click, o.isInStateTrue() ? o.enter(o) : o.leave(o)) : o.tip().hasClass(\"in\") ? o.leave(o) : o.enter(o);\n  }, o.prototype.destroy = function () {\n    var t = this;\n    clearTimeout(this.timeout), this.hide(function () {\n      t.$element.off(\".\" + t.type).removeData(\"bs.\" + t.type), t.$tip && t.$tip.detach(), t.$tip = null, t.$arrow = null, t.$viewport = null;\n    });\n  };\n  var i = t.fn.tooltip;\n  t.fn.tooltip = e, t.fn.tooltip.Constructor = o, t.fn.tooltip.noConflict = function () {\n    return t.fn.tooltip = i, this;\n  };\n}(jQuery), +function (t) {\n  \"use strict\";\n\n  function e(e) {\n    return this.each(function () {\n      var i = t(this),\n          n = i.data(\"bs.popover\"),\n          r = \"object\" == _typeof(e) && e;\n      (n || !/destroy|hide/.test(e)) && (n || i.data(\"bs.popover\", n = new o(this, r)), \"string\" == typeof e && n[e]());\n    });\n  }\n\n  var o = function o(t, e) {\n    this.init(\"popover\", t, e);\n  };\n\n  if (!t.fn.tooltip) throw new Error(\"Popover requires tooltip.js\");\n  o.VERSION = \"3.3.6\", o.DEFAULTS = t.extend({}, t.fn.tooltip.Constructor.DEFAULTS, {\n    placement: \"right\",\n    trigger: \"click\",\n    content: \"\",\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  }), o.prototype = t.extend({}, t.fn.tooltip.Constructor.prototype), o.prototype.constructor = o, o.prototype.getDefaults = function () {\n    return o.DEFAULTS;\n  }, o.prototype.setContent = function () {\n    var t = this.tip(),\n        e = this.getTitle(),\n        o = this.getContent();\n    t.find(\".popover-title\")[this.options.html ? \"html\" : \"text\"](e), t.find(\".popover-content\").children().detach().end()[this.options.html ? \"string\" == typeof o ? \"html\" : \"append\" : \"text\"](o), t.removeClass(\"fade top bottom left right in\"), t.find(\".popover-title\").html() || t.find(\".popover-title\").hide();\n  }, o.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent();\n  }, o.prototype.getContent = function () {\n    var t = this.$element,\n        e = this.options;\n    return t.attr(\"data-content\") || (\"function\" == typeof e.content ? e.content.call(t[0]) : e.content);\n  }, o.prototype.arrow = function () {\n    return this.$arrow = this.$arrow || this.tip().find(\".arrow\");\n  };\n  var i = t.fn.popover;\n  t.fn.popover = e, t.fn.popover.Constructor = o, t.fn.popover.noConflict = function () {\n    return t.fn.popover = i, this;\n  };\n}(jQuery); // Google Libphonenumber\n\n!function () {\n  function d(d) {\n    return \"string\" == typeof d;\n  }\n\n  function A(d, A) {\n    function N() {}\n\n    N.prototype = A.prototype, d.ha = A.prototype, d.prototype = new N(), d.prototype.constructor = d, d.ma = function (d, N, $) {\n      for (var e = Array(arguments.length - 2), n = 2; n < arguments.length; n++) {\n        e[n - 2] = arguments[n];\n      }\n\n      return A.prototype[N].apply(d, e);\n    };\n  }\n\n  function N(d) {\n    if (Error.captureStackTrace) Error.captureStackTrace(this, N);else {\n      var A = Error().stack;\n      A && (this.stack = A);\n    }\n    d && (this.message = String(d));\n  }\n\n  function $(d, A) {\n    for (var N = d.split(\"%s\"), $ = \"\", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < N.length;) {\n      $ += N.shift() + e.shift();\n    }\n\n    return $ + N.join(\"%s\");\n  }\n\n  function e(d, A) {\n    return A > d ? -1 : d > A ? 1 : 0;\n  }\n\n  function n(d, A) {\n    A.unshift(d), N.call(this, $.apply(null, A)), A.shift();\n  }\n\n  function t(d, A) {\n    throw new n(\"Failure\" + (d ? \": \" + d : \"\"), Array.prototype.slice.call(arguments, 1));\n  }\n\n  function r(d, A) {\n    d.sort(A || a);\n  }\n\n  function a(d, A) {\n    return d > A ? 1 : A > d ? -1 : 0;\n  }\n\n  function i(d) {\n    var A,\n        N = [],\n        $ = 0;\n\n    for (A in d) {\n      N[$++] = d[A];\n    }\n\n    return N;\n  }\n\n  function o(d, A) {\n    var N;\n\n    d: {\n      for (N in d) {\n        if (A.call(void 0, d[N], N, d)) break d;\n      }\n\n      N = void 0;\n    }\n\n    return N && d[N];\n  }\n\n  function u() {\n    var d = md;\n    return Rd ? /rv\\:([^\\);]+)(\\)|;)/.exec(d) : Id ? /Edge\\/([\\d\\.]+)/.exec(d) : xd ? /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(d) : _d ? /WebKit\\/(\\S+)/.exec(d) : void 0;\n  }\n\n  function l() {\n    var d = Sd.document;\n    return d ? d.documentMode : void 0;\n  }\n\n  function f(d) {\n    if (!Od[d]) {\n      for (var A = 0, N = bd(String(Bd)).split(\".\"), $ = bd(String(d)).split(\".\"), n = Math.max(N.length, $.length), t = 0; 0 == A && n > t; t++) {\n        var r = N[t] || \"\",\n            a = $[t] || \"\",\n            i = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\"),\n            o = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\");\n\n        do {\n          var u = i.exec(r) || [\"\", \"\", \"\"],\n              l = o.exec(a) || [\"\", \"\", \"\"];\n          if (0 == u[0].length && 0 == l[0].length) break;\n          A = e(0 == u[1].length ? 0 : parseInt(u[1], 10), 0 == l[1].length ? 0 : parseInt(l[1], 10)) || e(0 == u[2].length, 0 == l[2].length) || e(u[2], l[2]);\n        } while (0 == A);\n      }\n\n      Od[d] = A >= 0;\n    }\n  }\n\n  function c(A) {\n    var N = document;\n    return d(A) ? N.getElementById(A) : A;\n  }\n\n  function s(d, A) {\n    switch (this.a = d, this.l = A.name, this.f = !!A.ba, this.b = A.c, this.j = A.type, this.i = !1, this.b) {\n      case Ud:\n      case wd:\n      case Vd:\n      case Hd:\n      case Zd:\n      case Dd:\n      case Fd:\n        this.i = !0;\n    }\n\n    this.g = A.defaultValue;\n  }\n\n  function p(d, A) {\n    this.b = d, this.a = {};\n\n    for (var N = 0; N < A.length; N++) {\n      var $ = A[N];\n      this.a[$.a] = $;\n    }\n  }\n\n  function h(d) {\n    return d = i(d.a), r(d, function (d, A) {\n      return d.a - A.a;\n    }), d;\n  }\n\n  function g(d, A) {\n    return o(d.a, function (d) {\n      return d.l == A;\n    }) || null;\n  }\n\n  function C() {\n    this.b = {}, this.f = this.h().a, this.a = this.g = null;\n  }\n\n  function S(d, A) {\n    for (var N in d.b) {\n      var $ = Number(N);\n      d.f[$] || A.call(d, $, d.b[N]);\n    }\n  }\n\n  function b(d, A) {\n    for (var N = h(d.h()), $ = 0; $ < N.length; $++) {\n      var e = N[$],\n          n = e.a;\n\n      if (m(A, n)) {\n        d.a && delete d.a[e.a];\n        var t = 11 == e.b || 10 == e.b;\n        if (e.f) for (var e = M(A, n) || [], r = 0; r < e.length; r++) {\n          G(d, n, t ? e[r].clone() : e[r]);\n        } else e = M(A, n), t ? (t = M(d, n)) ? b(t, e) : T(d, n, e.clone()) : T(d, n, e);\n      }\n    }\n  }\n\n  function m(d, A) {\n    return null != d.b[A];\n  }\n\n  function M(d, A) {\n    var N = d.b[A];\n    if (null == N) return null;\n\n    if (d.g) {\n      if (!(A in d.a)) {\n        var $ = d.g,\n            e = d.f[A];\n        if (null != N) if (e.f) {\n          for (var n = [], t = 0; t < N.length; t++) {\n            n[t] = $.a(e, N[t]);\n          }\n\n          N = n;\n        } else N = $.a(e, N);\n        return d.a[A] = N;\n      }\n\n      return d.a[A];\n    }\n\n    return N;\n  }\n\n  function v(d, A, N) {\n    var $ = M(d, A);\n    return d.f[A].f ? $[N || 0] : $;\n  }\n\n  function y(d, A) {\n    var N;\n    if (m(d, A)) N = v(d, A, void 0);else d: {\n      if (N = d.f[A], void 0 === N.g) {\n        var $ = N.j;\n        if ($ === Boolean) N.g = !1;else if ($ === Number) N.g = 0;else {\n          if ($ !== String) {\n            N = new $();\n            break d;\n          }\n\n          N.g = N.i ? \"0\" : \"\";\n        }\n      }\n\n      N = N.g;\n    }\n    return N;\n  }\n\n  function E(d, A) {\n    return d.f[A].f ? m(d, A) ? d.b[A].length : 0 : m(d, A) ? 1 : 0;\n  }\n\n  function T(d, A, N) {\n    d.b[A] = N, d.a && (d.a[A] = N);\n  }\n\n  function G(d, A, N) {\n    d.b[A] || (d.b[A] = []), d.b[A].push(N), d.a && delete d.a[A];\n  }\n\n  function x(d, A) {\n    delete d.b[A], d.a && delete d.a[A];\n  }\n\n  function I(d, A) {\n    var N,\n        $ = [];\n\n    for (N in A) {\n      0 != N && $.push(new s(N, A[N]));\n    }\n\n    return new p(d, $);\n  }\n\n  function R() {}\n\n  function _(d) {\n    this.j = d;\n  }\n\n  function B(d, A) {\n    null != d && this.a.apply(this, arguments);\n  }\n\n  function O(d) {\n    d.b = \"\";\n  }\n\n  function L() {\n    C.call(this);\n  }\n\n  function P() {\n    C.call(this);\n  }\n\n  function K() {\n    C.call(this);\n  }\n\n  function F() {\n    C.call(this);\n  }\n\n  function D() {}\n\n  function U() {}\n\n  function w() {\n    this.a = {};\n  }\n\n  function V(d) {\n    var A = d.search(eA);\n    return A >= 0 ? (d = d.substring(A), d = d.replace(tA, \"\"), A = d.search(nA), A >= 0 && (d = d.substring(0, A))) : d = \"\", d;\n  }\n\n  function H(d) {\n    return 2 > d.length ? !1 : gd(iA, d);\n  }\n\n  function Z(d) {\n    return gd(rA, d) ? Y(d, dA) : Y(d, zd);\n  }\n\n  function W(d) {\n    var A = Z(d.toString());\n    O(d), d.a(A);\n  }\n\n  function Y(d, A) {\n    for (var N, $ = new B(), e = d.length, n = 0; e > n; ++n) {\n      N = d.charAt(n), N = A[N.toUpperCase()], null != N && $.a(N);\n    }\n\n    return $.toString();\n  }\n\n  function k(d) {\n    return null != d && isNaN(d) && d.toUpperCase() in jd;\n  }\n\n  function J(d, A, N) {\n    if (0 == v(A, 2) && m(A, 5)) {\n      var $ = y(A, 5);\n      if (0 < $.length) return $;\n    }\n\n    var $ = y(A, 1),\n        e = z(A);\n    return 0 == N ? q($, 0, e, \"\") : $ in Xd ? (d = Q(d, $, od($)), A = $d(A, d, N), e = dd(e, d, N), q($, N, e, A)) : e;\n  }\n\n  function Q(d, A, N) {\n    return \"001\" == N ? nd(d, \"\" + A) : nd(d, N);\n  }\n\n  function X(d, A, N) {\n    if (!k(N)) return J(d, A, 1);\n    var $ = y(A, 1),\n        e = z(A);\n    if (!($ in Xd)) return e;\n\n    if (1 == $) {\n      if (null != N && 0 <= vd(Xd[1], N.toUpperCase())) return $ + \" \" + J(d, A, 2);\n    } else if ($ == ud(d, N)) return J(d, A, 2);\n\n    var n = nd(d, N),\n        t = y(n, 11);\n    return N = \"\", gd(AA, t) ? N = t : m(n, 17) && (N = y(n, 17)), d = Q(d, $, od($)), e = dd(e, d, 1), A = $d(A, d, 1), 0 < N.length ? N + \" \" + $ + \" \" + e + A : q($, 1, e, A);\n  }\n\n  function j(d, A, N) {\n    var $;\n\n    if (($ = m(A, 5)) && (($ = m(A, 4)) && ($ = y(A, 1), $ = Q(d, $, od($)), $ = !(null != $ && y($, 26))), !$)) {\n      if ($ = y(A, 1), $ = Q(d, $, od($)), null == $) $ = !1;else {\n        var e = z(A);\n        $ = null != Ad(M($, 19) || [], e);\n      }\n      $ = !$;\n    }\n\n    if ($) return y(A, 5);\n    if (!m(A, 6)) return J(d, A, 2);\n\n    switch (v(A, 6)) {\n      case 1:\n        d = J(d, A, 1);\n        break;\n\n      case 5:\n        d = X(d, A, N);\n        break;\n\n      case 10:\n        d = J(d, A, 1).substring(1);\n        break;\n\n      default:\n        $ = od(y(A, 1));\n        var n;\n\n        if (N = nd(d, $), null == N ? n = null : (N = y(N, 12), n = 0 == N.length ? null : N = N.replace(\"~\", \"\")), N = J(d, A, 2), null == n || 0 == n.length) {\n          d = N;\n          break;\n        }\n\n        var t;\n\n        d: {\n          if (e = y(A, 5), e = Y(e, zd), 0 == e.lastIndexOf(n, 0)) try {\n            t = rd(d, hd(d, e.substring(n.length), $, !1));\n            break d;\n          } catch (r) {}\n          t = !1;\n        }\n\n        if (t) {\n          d = N;\n          break;\n        }\n\n        if (t = nd(d, $), $ = z(A), t = Ad(M(t, 19) || [], $), null == t) {\n          d = N;\n          break;\n        }\n\n        if ($ = y(t, 4), e = $.indexOf(\"$1\"), 0 >= e) {\n          d = N;\n          break;\n        }\n\n        if ($ = $.substring(0, e), $ = Y($, zd), 0 == $.length) {\n          d = N;\n          break;\n        }\n\n        t = t.clone(), x(t, 4), $ = [t], t = y(A, 1), N = z(A), t in Xd ? (d = Q(d, t, od(t)), e = \"\", e = Ad($, N), null == e ? e = N : ($ = e.clone(), e = y(e, 4), 0 < e.length && (n = y(d, 12), 0 < n.length ? (e = e.replace(uA, n).replace(lA, \"$1\"), T($, 4, e)) : x($, 4)), e = Nd(N, $, 2)), d = $d(A, d, 2), d = q(t, 2, e, d)) : d = N;\n    }\n\n    return A = y(A, 5), null != d && 0 < A.length && (t = Y(d, qd), N = Y(A, qd), t != N && (d = A)), d;\n  }\n\n  function z(d) {\n    var A = \"\" + v(d, 2);\n    return m(d, 4) && v(d, 4) ? Array(y(d, 8) + 1).join(\"0\") + A : A;\n  }\n\n  function q(d, A, N, $) {\n    switch (A) {\n      case 0:\n        return \"+\" + d + N + $;\n\n      case 1:\n        return \"+\" + d + \" \" + N + $;\n\n      case 3:\n        return \"tel:+\" + d + \"-\" + N + $;\n\n      default:\n        return N + $;\n    }\n  }\n\n  function dd(d, A, N, $) {\n    return A = 0 == (M(A, 20) || []).length || 2 == N ? M(A, 19) || [] : M(A, 20) || [], A = Ad(A, d), null == A ? d : Nd(d, A, N, $);\n  }\n\n  function Ad(d, A) {\n    for (var N, $ = d.length, e = 0; $ > e; ++e) {\n      N = d[e];\n      var n = E(N, 3);\n      if ((0 == n || 0 == A.search(v(N, 3, n - 1))) && (n = new RegExp(v(N, 1)), gd(n, A))) return N;\n    }\n\n    return null;\n  }\n\n  function Nd(d, A, N, $) {\n    var e = y(A, 2),\n        n = new RegExp(v(A, 1)),\n        t = y(A, 5),\n        r = \"\";\n    return 2 == N && null != $ && 0 < $.length && 0 < t.length ? (A = t.replace(fA, $), e = e.replace(oA, A), r = d.replace(n, e)) : (A = y(A, 4), r = 2 == N && null != A && 0 < A.length ? d.replace(n, e.replace(oA, A)) : d.replace(n, e)), 3 == N && (r = r.replace(RegExp(\"^[-x‐-―−ー－-／  ­​⁠　()（）［］.\\\\[\\\\]/~⁓∼～]+\"), \"\"), r = r.replace(RegExp(\"[-x‐-―−ー－-／  ­​⁠　()（）［］.\\\\[\\\\]/~⁓∼～]+\", \"g\"), \"-\")), r;\n  }\n\n  function $d(d, A, N) {\n    return m(d, 3) && 0 != v(d, 3).length ? 3 == N ? \";ext=\" + v(d, 3) : m(A, 13) ? v(A, 13) + y(d, 3) : \" ext. \" + y(d, 3) : \"\";\n  }\n\n  function ed(d, A) {\n    return td(d, v(A, 1)) ? td(d, v(A, 5)) ? 4 : td(d, v(A, 4)) ? 3 : td(d, v(A, 6)) ? 5 : td(d, v(A, 8)) ? 6 : td(d, v(A, 7)) ? 7 : td(d, v(A, 21)) ? 8 : td(d, v(A, 25)) ? 9 : td(d, v(A, 28)) ? 10 : td(d, v(A, 2)) ? v(A, 18) || td(d, v(A, 3)) ? 2 : 0 : !v(A, 18) && td(d, v(A, 3)) ? 1 : -1 : -1;\n  }\n\n  function nd(d, A) {\n    if (null == A) return null;\n    A = A.toUpperCase();\n    var N = d.a[A];\n\n    if (null == N) {\n      if (N = jd[A], null == N) return null;\n      N = new U().f(K.h(), N), d.a[A] = N;\n    }\n\n    return N;\n  }\n\n  function td(d, A) {\n    return gd(y(A, 3), d) && gd(y(A, 2), d);\n  }\n\n  function rd(d, A) {\n    var N = id(d, A);\n    return ad(d, A, N);\n  }\n\n  function ad(d, A, N) {\n    var $ = y(A, 1),\n        e = Q(d, $, N);\n    return null == e || \"001\" != N && $ != ud(d, N) ? !1 : (d = z(A), -1 != ed(d, e));\n  }\n\n  function id(d, A) {\n    if (null == A) return null;\n    var N = y(A, 1),\n        N = Xd[N];\n    if (null == N) N = null;else if (1 == N.length) N = N[0];else d: {\n      for (var $, e = z(A), n = N.length, t = 0; n > t; t++) {\n        $ = N[t];\n        var r = nd(d, $);\n\n        if (m(r, 23)) {\n          if (0 == e.search(v(r, 23))) {\n            N = $;\n            break d;\n          }\n        } else if (-1 != ed(e, r)) {\n          N = $;\n          break d;\n        }\n      }\n\n      N = null;\n    }\n    return N;\n  }\n\n  function od(d) {\n    return d = Xd[d], null == d ? \"ZZ\" : d[0];\n  }\n\n  function ud(d, A) {\n    var N = nd(d, A);\n    if (null == N) throw \"Invalid region code: \" + A;\n    return y(N, 10);\n  }\n\n  function ld(d, A) {\n    return gd(d, A) ? 0 : 0 == A.search(d) ? 3 : 2;\n  }\n\n  function fd(d, A) {\n    var N = z(A),\n        $ = y(A, 1);\n    return $ in Xd ? ($ = Q(d, $, od($)), $ = v($, 1), $ = y($, 3), ld($, N)) : 1;\n  }\n\n  function cd(d, A) {\n    var N = d.toString();\n    if (0 == N.length || \"0\" == N.charAt(0)) return 0;\n\n    for (var $, e = N.length, n = 1; 3 >= n && e >= n; ++n) {\n      if ($ = parseInt(N.substring(0, n), 10), $ in Xd) return A.a(N.substring(n)), $;\n    }\n\n    return 0;\n  }\n\n  function sd(d, A, N, $, e) {\n    if (0 == d.length) return 0;\n    d = new B(d);\n    var n;\n    null != A && (n = v(A, 11)), null == n && (n = \"NonMatch\");\n    var t = d.toString();\n    if (0 == t.length) n = 20;else if (NA.test(t)) t = t.replace(NA, \"\"), O(d), d.a(Z(t)), n = 1;else {\n      if (t = new RegExp(n), W(d), n = d.toString(), 0 == n.search(t)) {\n        var t = n.match(t)[0].length,\n            r = n.substring(t).match($A);\n        r && null != r[1] && 0 < r[1].length && \"0\" == Y(r[1], zd) ? n = !1 : (O(d), d.a(n.substring(t)), n = !0);\n      } else n = !1;\n\n      n = n ? 5 : 20;\n    }\n\n    if ($ && T(e, 6, n), 20 != n) {\n      if (2 >= d.b.length) throw \"Phone number too short after IDD\";\n      if (N = cd(d, N), 0 != N) return T(e, 1, N), N;\n      throw \"Invalid country calling code\";\n    }\n\n    if (null != A && (n = y(A, 10), t = \"\" + n, r = d.toString(), 0 == r.lastIndexOf(t, 0))) {\n      var a = new B(r.substring(t.length)),\n          r = v(A, 1),\n          t = new RegExp(y(r, 2));\n      if (pd(a, A, null), A = a.toString(), r = y(r, 3), !gd(t, d.toString()) && gd(t, A) || 3 == ld(r, d.toString())) return N.a(A), $ && T(e, 6, 10), T(e, 1, n), n;\n    }\n\n    return T(e, 1, 0), 0;\n  }\n\n  function pd(d, A, N) {\n    var $ = d.toString(),\n        e = $.length,\n        n = v(A, 15);\n\n    if (0 != e && null != n && 0 != n.length && (n = new RegExp(\"^(?:\" + n + \")\"), e = n.exec($))) {\n      var t,\n          r = RegExp;\n      t = v(A, 1), t = y(t, 2), r = new r(t), t = gd(r, $);\n      var a = e.length - 1;\n      A = v(A, 16), null == A || 0 == A.length || null == e[a] || 0 == e[a].length ? (!t || gd(r, $.substring(e[0].length))) && (null != N && a > 0 && null != e[a] && N.a(e[1]), d.b = \"\" + $.substring(e[0].length)) : ($ = $.replace(n, A), (!t || gd(r, $)) && (null != N && a > 0 && N.a(e[1]), d.b = \"\" + $));\n    }\n  }\n\n  function hd(d, A, N, $) {\n    if (null == A) throw \"The string supplied did not seem to be a phone number\";\n    if (250 < A.length) throw \"The string supplied is too long to be a phone number\";\n    var e = new B(),\n        n = A.indexOf(\";phone-context=\");\n\n    if (n > 0) {\n      var t = n + 15;\n\n      if (\"+\" == A.charAt(t)) {\n        var r = A.indexOf(\";\", t);\n        r > 0 ? e.a(A.substring(t, r)) : e.a(A.substring(t));\n      }\n\n      t = A.indexOf(\"tel:\"), e.a(A.substring(t >= 0 ? t + 4 : 0, n));\n    } else e.a(V(A));\n\n    if (n = e.toString(), t = n.indexOf(\";isub=\"), t > 0 && (O(e), e.a(n.substring(0, t))), !H(e.toString())) throw \"The string supplied did not seem to be a phone number\";\n    if (n = e.toString(), !(k(N) || null != n && 0 < n.length && NA.test(n))) throw \"Invalid country calling code\";\n    n = new F(), $ && T(n, 5, A);\n\n    d: {\n      if (A = e.toString(), t = A.search(aA), t >= 0 && H(A.substring(0, t))) for (var r = A.match(aA), a = r.length, i = 1; a > i; ++i) {\n        if (null != r[i] && 0 < r[i].length) {\n          O(e), e.a(A.substring(0, t)), A = r[i];\n          break d;\n        }\n      }\n      A = \"\";\n    }\n\n    0 < A.length && T(n, 3, A), t = nd(d, N), A = new B(), r = 0, a = e.toString();\n\n    try {\n      r = sd(a, t, A, $, n);\n    } catch (o) {\n      if (\"Invalid country calling code\" != o || !NA.test(a)) throw o;\n      if (a = a.replace(NA, \"\"), r = sd(a, t, A, $, n), 0 == r) throw o;\n    }\n\n    if (0 != r ? (e = od(r), e != N && (t = Q(d, r, e))) : (W(e), A.a(e.toString()), null != N ? (r = y(t, 10), T(n, 1, r)) : $ && x(n, 6)), 2 > A.b.length) throw \"The string supplied is too short to be a phone number\";\n    if (null != t && (d = new B(), N = new B(A.toString()), pd(N, t, d), e = N.toString(), t = v(t, 1), t = y(t, 3), 2 != ld(t, e) && (A = N, $ && T(n, 7, d.toString()))), $ = A.toString(), d = $.length, 2 > d) throw \"The string supplied is too short to be a phone number\";\n    if (d > 17) throw \"The string supplied is too long to be a phone number\";\n\n    if (1 < $.length && \"0\" == $.charAt(0)) {\n      for (T(n, 4, !0), d = 1; d < $.length - 1 && \"0\" == $.charAt(d);) {\n        d++;\n      }\n\n      1 != d && T(n, 8, d);\n    }\n\n    return T(n, 2, parseInt($, 10)), n;\n  }\n\n  function gd(d, A) {\n    var N = \"string\" == typeof d ? A.match(\"^(?:\" + d + \")$\") : A.match(d);\n    return N && N[0].length == A.length ? !0 : !1;\n  }\n\n  function Cd() {\n    var d = c(\"phoneNumber\").value,\n        A = c(\"defaultCountry\").value;\n    c(\"carrierCode\").value, new B();\n\n    try {\n      var N,\n          $ = w.a();\n      if (!k(A) && 0 < d.length && \"+\" != d.charAt(0)) throw \"Invalid country calling code\";\n      N = hd($, d, A, !0);\n      var e = 0 == fd($, N);\n\n      if (e) {\n        var n = rd($, N);\n\n        if (n) {\n          var t,\n              r,\n              a = id($, N),\n              i = Q($, y(N, 1), a);\n          if (null == i) t = -1;else {\n            var o = z(N);\n            t = ed(o, i);\n          }\n\n          switch (t) {\n            case 0:\n              r = \"FIXED_LINE\";\n              break;\n\n            case 1:\n              r = \"MOBILE\";\n              break;\n\n            case 2:\n              r = \"FIXED_LINE_OR_MOBILE\";\n              break;\n\n            case 3:\n              r = \"TOLL_FREE\";\n              break;\n\n            case 4:\n              r = \"PREMIUM_RATE\";\n              break;\n\n            case 5:\n              r = \"SHARED_COST\";\n              break;\n\n            case 6:\n              r = \"VOIP\";\n              break;\n\n            case 7:\n              r = \"PERSONAL_NUMBER\";\n              break;\n\n            case 8:\n              r = \"PAGER\";\n              break;\n\n            case 9:\n              r = \"UAN\";\n              break;\n\n            case -1:\n              r = \"UNKNOWN\";\n          }\n\n          return {\n            isValidNumber: n,\n            isValidNumberForRegion: ad($, N, A),\n            phoneNumberRegion: id($, N),\n            numberType: r,\n            format: {\n              E164: J($, N, 0),\n              orginal: j($, N, A),\n              national: J($, N, 2),\n              international: J($, N, 1),\n              \"out-country-us\": X($, N, \"US\"),\n              \"out-country-ch\": X($, N, \"CH\")\n            }\n          };\n        }\n\n        return \"INVALID_PH_N\";\n      }\n\n      switch (fd($, N)) {\n        case 1:\n          return \"INVALID_COUNTRY_CODE\";\n\n        case 2:\n          return \"TOO_SHORT\";\n\n        case 3:\n          return \"TOO_LONG\";\n\n        default:\n          return \"UNKNOWN_TYPE\";\n      }\n    } catch (u) {\n      return u;\n    }\n  }\n\n  var Sd = this;\n  A(N, Error), N.prototype.name = \"CustomError\";\n  var bd = String.prototype.trim ? function (d) {\n    return d.trim();\n  } : function (d) {\n    return d.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\");\n  };\n  A(n, N), n.prototype.name = \"AssertionError\";\n  var md,\n      Md = Array.prototype,\n      vd = Md.indexOf ? function (d, A, N) {\n    return Md.indexOf.call(d, A, N);\n  } : function (A, N, $) {\n    if ($ = null == $ ? 0 : 0 > $ ? Math.max(0, A.length + $) : $, d(A)) return d(N) && 1 == N.length ? A.indexOf(N, $) : -1;\n\n    for (; $ < A.length; $++) {\n      if ($ in A && A[$] === N) return $;\n    }\n\n    return -1;\n  };\n\n  d: {\n    var yd = Sd.navigator;\n\n    if (yd) {\n      var Ed = yd.userAgent;\n\n      if (Ed) {\n        md = Ed;\n        break d;\n      }\n    }\n\n    md = \"\";\n  }\n\n  var Td,\n      Gd = -1 != md.indexOf(\"Opera\") || -1 != md.indexOf(\"OPR\"),\n      xd = -1 != md.indexOf(\"Trident\") || -1 != md.indexOf(\"MSIE\"),\n      Id = -1 != md.indexOf(\"Edge\"),\n      Rd = !(-1 == md.indexOf(\"Gecko\") || -1 != md.toLowerCase().indexOf(\"webkit\") && -1 == md.indexOf(\"Edge\") || -1 != md.indexOf(\"Trident\") || -1 != md.indexOf(\"MSIE\") || -1 != md.indexOf(\"Edge\")),\n      _d = -1 != md.toLowerCase().indexOf(\"webkit\") && -1 == md.indexOf(\"Edge\"),\n      Bd = function () {\n    if (Gd && Sd.opera) {\n      var d,\n          A = Sd.opera.version;\n\n      try {\n        d = A();\n      } catch (N) {\n        d = A;\n      }\n\n      return d;\n    }\n\n    return d = \"\", (A = u()) && (d = A ? A[1] : \"\"), xd && (A = l(), A > parseFloat(d)) ? String(A) : d;\n  }(),\n      Od = {},\n      Ld = Sd.document,\n      Pd = Ld && xd ? l() || (\"CSS1Compat\" == Ld.compatMode ? parseInt(Bd, 10) : 5) : void 0;\n\n  if (!(Td = !Rd && !xd)) {\n    var Kd;\n    (Kd = xd) && (Kd = Pd >= 9), Td = Kd;\n  }\n\n  Td || Rd && f(\"1.9.1\"), xd && f(\"9\");\n  var Fd = (/\\uffff/.test(\"￿\") ? /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g : /[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g, 1),\n      Dd = 2,\n      Ud = 3,\n      wd = 4,\n      Vd = 6,\n      Hd = 16,\n      Zd = 18;\n  C.prototype.clone = function () {\n    var d = new this.constructor();\n    return d != this && (d.b = {}, d.a && (d.a = {}), b(d, this)), d;\n  }, R.prototype.b = function (d, A) {\n    return 11 == d.b || 10 == d.b ? this.g(A) : \"number\" != typeof A || isFinite(A) ? A : A.toString();\n  }, R.prototype.f = function (d, A) {\n    var N = new d.b();\n    return this.i(N, A), N;\n  }, R.prototype.a = function (A, N) {\n    if (11 == A.b || 10 == A.b) return N instanceof C ? N : this.f(A.j.prototype.h(), N);\n    if (14 == A.b || !A.i) return N;\n    var $ = A.j;\n\n    if ($ === String) {\n      if (\"number\" == typeof N) return String(N);\n    } else if ($ === Number && d(N) && (\"Infinity\" === N || \"-Infinity\" === N || \"NaN\" === N || /^-?[0-9]+$/.test(N))) return Number(N);\n\n    return N;\n  }, A(_, R), _.prototype.g = function (d) {\n    for (var A = h(d.h()), N = {}, $ = 0; $ < A.length; $++) {\n      var e = A[$],\n          n = 1 == this.j ? e.l : e.a;\n      if (m(d, e.a)) if (e.f) {\n        var t = [];\n\n        for (N[n] = t, n = 0; n < E(d, e.a); n++) {\n          t.push(this.b(e, v(d, e.a, n)));\n        }\n      } else N[n] = this.b(e, v(d, e.a, void 0));\n    }\n\n    return S(d, function (d, A) {\n      N[d] = A;\n    }), N;\n  }, _.prototype.a = function (d, A) {\n    return 8 == d.b && \"number\" == typeof A ? Boolean(A) : _.ha.a.call(this, d, A);\n  }, _.prototype.i = function (d, A) {\n    var N,\n        $ = d.h();\n\n    for (N in A) {\n      var e,\n          n = A[N],\n          r = !/[^0-9]/.test(N);\n      if (e = r ? $.a[parseInt(N, 10)] || null : g($, N)) {\n        if (e.f) for (r = 0; r < n.length; r++) {\n          var a = this.a(e, n[r]);\n          G(d, e.a, a);\n        } else n = this.a(e, n), T(d, e.a, n);\n      } else r ? (e = d, r = Number(N), e.b[r] = n, e.a && delete e.a[r]) : t(\"Failed to find field: \" + e);\n    }\n  }, B.prototype.b = \"\", B.prototype.a = function (d, A, N) {\n    if (this.b += d, null != A) for (var $ = 1; $ < arguments.length; $++) {\n      this.b += arguments[$];\n    }\n    return this;\n  }, B.prototype.toString = function () {\n    return this.b;\n  };\n  var Wd;\n  A(L, C);\n  var Yd;\n  A(P, C);\n  var kd;\n  A(K, C), L.prototype.h = function () {\n    return Wd || (Wd = I(L, {\n      0: {\n        name: \"NumberFormat\",\n        aa: \"i18n.phonenumbers.NumberFormat\"\n      },\n      1: {\n        name: \"pattern\",\n        required: !0,\n        c: 9,\n        type: String\n      },\n      2: {\n        name: \"format\",\n        required: !0,\n        c: 9,\n        type: String\n      },\n      3: {\n        name: \"leading_digits_pattern\",\n        ba: !0,\n        c: 9,\n        type: String\n      },\n      4: {\n        name: \"national_prefix_formatting_rule\",\n        c: 9,\n        type: String\n      },\n      6: {\n        name: \"national_prefix_optional_when_formatting\",\n        c: 8,\n        type: Boolean\n      },\n      5: {\n        name: \"domestic_carrier_code_formatting_rule\",\n        c: 9,\n        type: String\n      }\n    })), Wd;\n  }, L.ctor = L, L.ctor.h = L.prototype.h, P.prototype.h = function () {\n    return Yd || (Yd = I(P, {\n      0: {\n        name: \"PhoneNumberDesc\",\n        aa: \"i18n.phonenumbers.PhoneNumberDesc\"\n      },\n      2: {\n        name: \"national_number_pattern\",\n        c: 9,\n        type: String\n      },\n      3: {\n        name: \"possible_number_pattern\",\n        c: 9,\n        type: String\n      },\n      6: {\n        name: \"example_number\",\n        c: 9,\n        type: String\n      },\n      7: {\n        name: \"national_number_matcher_data\",\n        c: 12,\n        type: String\n      },\n      8: {\n        name: \"possible_number_matcher_data\",\n        c: 12,\n        type: String\n      }\n    })), Yd;\n  }, P.ctor = P, P.ctor.h = P.prototype.h, K.prototype.h = function () {\n    return kd || (kd = I(K, {\n      0: {\n        name: \"PhoneMetadata\",\n        aa: \"i18n.phonenumbers.PhoneMetadata\"\n      },\n      1: {\n        name: \"general_desc\",\n        c: 11,\n        type: P\n      },\n      2: {\n        name: \"fixed_line\",\n        c: 11,\n        type: P\n      },\n      3: {\n        name: \"mobile\",\n        c: 11,\n        type: P\n      },\n      4: {\n        name: \"toll_free\",\n        c: 11,\n        type: P\n      },\n      5: {\n        name: \"premium_rate\",\n        c: 11,\n        type: P\n      },\n      6: {\n        name: \"shared_cost\",\n        c: 11,\n        type: P\n      },\n      7: {\n        name: \"personal_number\",\n        c: 11,\n        type: P\n      },\n      8: {\n        name: \"voip\",\n        c: 11,\n        type: P\n      },\n      21: {\n        name: \"pager\",\n        c: 11,\n        type: P\n      },\n      25: {\n        name: \"uan\",\n        c: 11,\n        type: P\n      },\n      27: {\n        name: \"emergency\",\n        c: 11,\n        type: P\n      },\n      28: {\n        name: \"voicemail\",\n        c: 11,\n        type: P\n      },\n      24: {\n        name: \"no_international_dialling\",\n        c: 11,\n        type: P\n      },\n      9: {\n        name: \"id\",\n        required: !0,\n        c: 9,\n        type: String\n      },\n      10: {\n        name: \"country_code\",\n        c: 5,\n        type: Number\n      },\n      11: {\n        name: \"international_prefix\",\n        c: 9,\n        type: String\n      },\n      17: {\n        name: \"preferred_international_prefix\",\n        c: 9,\n        type: String\n      },\n      12: {\n        name: \"national_prefix\",\n        c: 9,\n        type: String\n      },\n      13: {\n        name: \"preferred_extn_prefix\",\n        c: 9,\n        type: String\n      },\n      15: {\n        name: \"national_prefix_for_parsing\",\n        c: 9,\n        type: String\n      },\n      16: {\n        name: \"national_prefix_transform_rule\",\n        c: 9,\n        type: String\n      },\n      18: {\n        name: \"same_mobile_and_fixed_line_pattern\",\n        c: 8,\n        defaultValue: !1,\n        type: Boolean\n      },\n      19: {\n        name: \"number_format\",\n        ba: !0,\n        c: 11,\n        type: L\n      },\n      20: {\n        name: \"intl_number_format\",\n        ba: !0,\n        c: 11,\n        type: L\n      },\n      22: {\n        name: \"main_country_for_code\",\n        c: 8,\n        defaultValue: !1,\n        type: Boolean\n      },\n      23: {\n        name: \"leading_digits\",\n        c: 9,\n        type: String\n      },\n      26: {\n        name: \"leading_zero_possible\",\n        c: 8,\n        defaultValue: !1,\n        type: Boolean\n      }\n    })), kd;\n  }, K.ctor = K, K.ctor.h = K.prototype.h;\n  var Jd;\n  A(F, C);\n  var Qd = {\n    la: 1,\n    ka: 5,\n    ja: 10,\n    ia: 20\n  };\n  F.prototype.h = function () {\n    return Jd || (Jd = I(F, {\n      0: {\n        name: \"PhoneNumber\",\n        aa: \"i18n.phonenumbers.PhoneNumber\"\n      },\n      1: {\n        name: \"country_code\",\n        required: !0,\n        c: 5,\n        type: Number\n      },\n      2: {\n        name: \"national_number\",\n        required: !0,\n        c: 4,\n        type: Number\n      },\n      3: {\n        name: \"extension\",\n        c: 9,\n        type: String\n      },\n      4: {\n        name: \"italian_leading_zero\",\n        c: 8,\n        type: Boolean\n      },\n      8: {\n        name: \"number_of_leading_zeros\",\n        c: 5,\n        defaultValue: 1,\n        type: Number\n      },\n      5: {\n        name: \"raw_input\",\n        c: 9,\n        type: String\n      },\n      6: {\n        name: \"country_code_source\",\n        c: 14,\n        defaultValue: 1,\n        type: Qd\n      },\n      7: {\n        name: \"preferred_domestic_carrier_code\",\n        c: 9,\n        type: String\n      }\n    })), Jd;\n  }, F.ctor = F, F.ctor.h = F.prototype.h, A(D, R), D.prototype.f = function (d, A) {\n    var N = new d.b();\n    return N.g = this, N.b = A, N.a = {}, N;\n  }, D.prototype.i = function () {\n    throw Error(\"Unimplemented\");\n  }, A(U, D), U.prototype.g = function (d) {\n    for (var A = h(d.h()), N = [], $ = 0; $ < A.length; $++) {\n      var e = A[$];\n\n      if (m(d, e.a)) {\n        var n = e.a;\n\n        if (e.f) {\n          N[n] = [];\n\n          for (var t = 0; t < E(d, e.a); t++) {\n            N[n][t] = this.b(e, v(d, e.a, t));\n          }\n        } else N[n] = this.b(e, v(d, e.a, void 0));\n      }\n    }\n\n    return S(d, function (d, A) {\n      N[d] = A;\n    }), N;\n  }, U.prototype.b = function (d, A) {\n    return 8 == d.b ? A ? 1 : 0 : R.prototype.b.apply(this, arguments);\n  }, U.prototype.a = function (d, A) {\n    return 8 == d.b ? !!A : R.prototype.a.apply(this, arguments);\n  }, U.prototype.f = function (d, A) {\n    return U.ha.f.call(this, d, A);\n  };\n  var Xd = {\n    1: \"US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI\".split(\" \"),\n    7: [\"RU\", \"KZ\"],\n    20: [\"EG\"],\n    27: [\"ZA\"],\n    30: [\"GR\"],\n    31: [\"NL\"],\n    32: [\"BE\"],\n    33: [\"FR\"],\n    34: [\"ES\"],\n    36: [\"HU\"],\n    39: [\"IT\", \"VA\"],\n    40: [\"RO\"],\n    41: [\"CH\"],\n    43: [\"AT\"],\n    44: [\"GB\", \"GG\", \"IM\", \"JE\"],\n    45: [\"DK\"],\n    46: [\"SE\"],\n    47: [\"NO\", \"SJ\"],\n    48: [\"PL\"],\n    49: [\"DE\"],\n    51: [\"PE\"],\n    52: [\"MX\"],\n    53: [\"CU\"],\n    54: [\"AR\"],\n    55: [\"BR\"],\n    56: [\"CL\"],\n    57: [\"CO\"],\n    58: [\"VE\"],\n    60: [\"MY\"],\n    61: [\"AU\", \"CC\", \"CX\"],\n    62: [\"ID\"],\n    63: [\"PH\"],\n    64: [\"NZ\"],\n    65: [\"SG\"],\n    66: [\"TH\"],\n    81: [\"JP\"],\n    82: [\"KR\"],\n    84: [\"VN\"],\n    86: [\"CN\"],\n    90: [\"TR\"],\n    91: [\"IN\"],\n    92: [\"PK\"],\n    93: [\"AF\"],\n    94: [\"LK\"],\n    95: [\"MM\"],\n    98: [\"IR\"],\n    211: [\"SS\"],\n    212: [\"MA\", \"EH\"],\n    213: [\"DZ\"],\n    216: [\"TN\"],\n    218: [\"LY\"],\n    220: [\"GM\"],\n    221: [\"SN\"],\n    222: [\"MR\"],\n    223: [\"ML\"],\n    224: [\"GN\"],\n    225: [\"CI\"],\n    226: [\"BF\"],\n    227: [\"NE\"],\n    228: [\"TG\"],\n    229: [\"BJ\"],\n    230: [\"MU\"],\n    231: [\"LR\"],\n    232: [\"SL\"],\n    233: [\"GH\"],\n    234: [\"NG\"],\n    235: [\"TD\"],\n    236: [\"CF\"],\n    237: [\"CM\"],\n    238: [\"CV\"],\n    239: [\"ST\"],\n    240: [\"GQ\"],\n    241: [\"GA\"],\n    242: [\"CG\"],\n    243: [\"CD\"],\n    244: [\"AO\"],\n    245: [\"GW\"],\n    246: [\"IO\"],\n    247: [\"AC\"],\n    248: [\"SC\"],\n    249: [\"SD\"],\n    250: [\"RW\"],\n    251: [\"ET\"],\n    252: [\"SO\"],\n    253: [\"DJ\"],\n    254: [\"KE\"],\n    255: [\"TZ\"],\n    256: [\"UG\"],\n    257: [\"BI\"],\n    258: [\"MZ\"],\n    260: [\"ZM\"],\n    261: [\"MG\"],\n    262: [\"RE\", \"YT\"],\n    263: [\"ZW\"],\n    264: [\"NA\"],\n    265: [\"MW\"],\n    266: [\"LS\"],\n    267: [\"BW\"],\n    268: [\"SZ\"],\n    269: [\"KM\"],\n    290: [\"SH\", \"TA\"],\n    291: [\"ER\"],\n    297: [\"AW\"],\n    298: [\"FO\"],\n    299: [\"GL\"],\n    350: [\"GI\"],\n    351: [\"PT\"],\n    352: [\"LU\"],\n    353: [\"IE\"],\n    354: [\"IS\"],\n    355: [\"AL\"],\n    356: [\"MT\"],\n    357: [\"CY\"],\n    358: [\"FI\", \"AX\"],\n    359: [\"BG\"],\n    370: [\"LT\"],\n    371: [\"LV\"],\n    372: [\"EE\"],\n    373: [\"MD\"],\n    374: [\"AM\"],\n    375: [\"BY\"],\n    376: [\"AD\"],\n    377: [\"MC\"],\n    378: [\"SM\"],\n    380: [\"UA\"],\n    381: [\"RS\"],\n    382: [\"ME\"],\n    385: [\"HR\"],\n    386: [\"SI\"],\n    387: [\"BA\"],\n    389: [\"MK\"],\n    420: [\"CZ\"],\n    421: [\"SK\"],\n    423: [\"LI\"],\n    500: [\"FK\"],\n    501: [\"BZ\"],\n    502: [\"GT\"],\n    503: [\"SV\"],\n    504: [\"HN\"],\n    505: [\"NI\"],\n    506: [\"CR\"],\n    507: [\"PA\"],\n    508: [\"PM\"],\n    509: [\"HT\"],\n    590: [\"GP\", \"BL\", \"MF\"],\n    591: [\"BO\"],\n    592: [\"GY\"],\n    593: [\"EC\"],\n    594: [\"GF\"],\n    595: [\"PY\"],\n    596: [\"MQ\"],\n    597: [\"SR\"],\n    598: [\"UY\"],\n    599: [\"CW\", \"BQ\"],\n    670: [\"TL\"],\n    672: [\"NF\"],\n    673: [\"BN\"],\n    674: [\"NR\"],\n    675: [\"PG\"],\n    676: [\"TO\"],\n    677: [\"SB\"],\n    678: [\"VU\"],\n    679: [\"FJ\"],\n    680: [\"PW\"],\n    681: [\"WF\"],\n    682: [\"CK\"],\n    683: [\"NU\"],\n    685: [\"WS\"],\n    686: [\"KI\"],\n    687: [\"NC\"],\n    688: [\"TV\"],\n    689: [\"PF\"],\n    690: [\"TK\"],\n    691: [\"FM\"],\n    692: [\"MH\"],\n    800: [\"001\"],\n    808: [\"001\"],\n    850: [\"KP\"],\n    852: [\"HK\"],\n    853: [\"MO\"],\n    855: [\"KH\"],\n    856: [\"LA\"],\n    870: [\"001\"],\n    878: [\"001\"],\n    880: [\"BD\"],\n    881: [\"001\"],\n    882: [\"001\"],\n    883: [\"001\"],\n    886: [\"TW\"],\n    888: [\"001\"],\n    960: [\"MV\"],\n    961: [\"LB\"],\n    962: [\"JO\"],\n    963: [\"SY\"],\n    964: [\"IQ\"],\n    965: [\"KW\"],\n    966: [\"SA\"],\n    967: [\"YE\"],\n    968: [\"OM\"],\n    970: [\"PS\"],\n    971: [\"AE\"],\n    972: [\"IL\"],\n    973: [\"BH\"],\n    974: [\"QA\"],\n    975: [\"BT\"],\n    976: [\"MN\"],\n    977: [\"NP\"],\n    979: [\"001\"],\n    992: [\"TJ\"],\n    993: [\"TM\"],\n    994: [\"AZ\"],\n    995: [\"GE\"],\n    996: [\"KG\"],\n    998: [\"UZ\"]\n  },\n      jd = {\n    AC: [, [,, \"[46]\\\\d{4}|[01589]\\\\d{5}\", \"\\\\d{5,6}\"], [,, \"6[2-467]\\\\d{3}\", \"\\\\d{5}\",,, \"62889\"], [,, \"4\\\\d{4}\", \"\\\\d{5}\",,, \"40123\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"AC\", 247, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"[01589]\\\\d{5}\", \"\\\\d{6}\",,, \"542011\"],,, [,, \"NA\", \"NA\"]],\n    AD: [, [,, \"(?:[346-9]|180)\\\\d{5}\", \"\\\\d{6,8}\"], [,, \"[78]\\\\d{5}\", \"\\\\d{6}\",,, \"712345\"], [,, \"[346]\\\\d{5}\", \"\\\\d{6}\",,, \"312345\"], [,, \"180[02]\\\\d{4}\", \"\\\\d{8}\",,, \"18001234\"], [,, \"9\\\\d{5}\", \"\\\\d{6}\",,, \"912345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"AD\", 376, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[346-9]\"]], [, \"(180[02])(\\\\d{4})\", \"$1 $2\", [\"1\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AE: [, [,, \"[2-79]\\\\d{7,8}|800\\\\d{2,9}\", \"\\\\d{5,12}\"], [,, \"[2-4679][2-8]\\\\d{6}\", \"\\\\d{7,8}\",,, \"22345678\"], [,, \"5[0256]\\\\d{7}\", \"\\\\d{9}\",,, \"501234567\"], [,, \"400\\\\d{6}|800\\\\d{2,9}\", \"\\\\d{5,12}\",,, \"800123456\"], [,, \"900[02]\\\\d{5}\", \"\\\\d{9}\",,, \"900234567\"], [,, \"700[05]\\\\d{5}\", \"\\\\d{9}\",,, \"700012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"AE\", 971, \"00\", \"0\",,, \"0\",,,, [[, \"([2-4679])(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-4679][2-8]\"], \"0$1\"], [, \"(5[0256])(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"([479]00)(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]0\"], \"$1\"], [, \"([68]00)(\\\\d{2,9})\", \"$1 $2\", [\"60|8\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"600[25]\\\\d{5}\", \"\\\\d{9}\",,, \"600212345\"],,, [,, \"NA\", \"NA\"]],\n    AF: [, [,, \"[2-7]\\\\d{8}\", \"\\\\d{7,9}\"], [,, \"(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\\\d{6}\", \"\\\\d{7,9}\",,, \"234567890\"], [,, \"7(?:[014-9]\\\\d{7}|2[89]\\\\d{6})\", \"\\\\d{9}\",,, \"701234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"AF\", 93, \"00\", \"0\",,, \"0\",,,, [[, \"([2-7]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AG: [, [,, \"[2589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"268(?:4(?:6[0-38]|84)|56[0-2])\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2684601234\"], [,, \"268(?:464|7(?:2[0-9]|64|7[0-689]|8[02-68]))\\\\d{4}\", \"\\\\d{10}\",,, \"2684641234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"26848[01]\\\\d{4}\", \"\\\\d{10}\",,, \"2684801234\"], \"AG\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"26840[69]\\\\d{4}\", \"\\\\d{10}\",,, \"2684061234\"],, \"268\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AI: [, [,, \"[2589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"2644(?:6[12]|9[78])\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2644612345\"], [,, \"264(?:235|476|5(?:3[6-9]|8[1-4])|7(?:29|72))\\\\d{4}\", \"\\\\d{10}\",,, \"2642351234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"AI\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"264\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AL: [, [,, \"[2-57]\\\\d{7}|6\\\\d{8}|8\\\\d{5,7}|9\\\\d{5}\", \"\\\\d{5,9}\"], [,, \"(?:2(?:[168][1-9]|[247]\\\\d|9[1-7])|3(?:1[1-3]|[2-6]\\\\d|[79][1-8]|8[1-9])|4\\\\d{2}|5(?:1[1-4]|[2-578]\\\\d|6[1-5]|9[1-7])|8(?:[19][1-5]|[2-6]\\\\d|[78][1-7]))\\\\d{5}\", \"\\\\d{5,8}\",,, \"22345678\"], [,, \"6[6-9]\\\\d{7}\", \"\\\\d{9}\",,, \"661234567\"], [,, \"800\\\\d{4}\", \"\\\\d{7}\",,, \"8001234\"], [,, \"900\\\\d{3}\", \"\\\\d{6}\",,, \"900123\"], [,, \"808\\\\d{3}\", \"\\\\d{6}\",,, \"808123\"], [,, \"700\\\\d{5}\", \"\\\\d{8}\",,, \"70012345\"], [,, \"NA\", \"NA\"], \"AL\", 355, \"00\", \"0\",,, \"0\",,,, [[, \"(4)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[0-6]\"], \"0$1\"], [, \"(6[6-9])(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4[7-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"[235][16-9]|8[016-9]|[79]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AM: [, [,, \"[1-9]\\\\d{7}\", \"\\\\d{5,8}\"], [,, \"(?:1[01]\\\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2|47\\\\d)\\\\d{5}\", \"\\\\d{5,8}\",,, \"10123456\"], [,, \"(?:4[139]|55|77|9[1-9])\\\\d{6}\", \"\\\\d{8}\",,, \"77123456\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"90[016]\\\\d{5}\", \"\\\\d{8}\",,, \"90012345\"], [,, \"80[1-4]\\\\d{5}\", \"\\\\d{8}\",,, \"80112345\"], [,, \"NA\", \"NA\"], [,, \"60[2-6]\\\\d{5}\", \"\\\\d{8}\",,, \"60271234\"], \"AM\", 374, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"4[139]|[5-7]|9[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"8|90\"], \"0 $1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AO: [, [,, \"[29]\\\\d{8}\", \"\\\\d{9}\"], [,, \"2\\\\d(?:[26-9]\\\\d|\\\\d[26-9])\\\\d{5}\", \"\\\\d{9}\",,, \"222123456\"], [,, \"9[1-49]\\\\d{7}\", \"\\\\d{9}\",,, \"923123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"AO\", 244, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AR: [, [,, \"11\\\\d{8}|[2368]\\\\d{9}|9\\\\d{10}\", \"\\\\d{6,11}\"], [,, \"11\\\\d{8}|(?:2(?:2(?:[013]\\\\d|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[067]\\\\d)|4(?:7[3-8]|9\\\\d)|6(?:[01346]\\\\d|2[24-6]|5[15-8])|80\\\\d|9(?:[0124789]\\\\d|3[1-6]|5[234]|6[2-46]))|3(?:3(?:2[79]|6\\\\d|8[2578])|4(?:[78]\\\\d|0[0124-9]|[1-35]\\\\d|4[24-7]|6[02-9]|9[123678])|5(?:[138]\\\\d|2[1245]|4[1-9]|6[2-4]|7[1-6])|6[24]\\\\d|7(?:[0469]\\\\d|1[1568]|2[013-9]|3[145]|5[14-8]|7[2-57]|8[0-24-9])|8(?:[013578]\\\\d|2[15-7]|4[13-6]|6[1-357-9]|9[124]))|670\\\\d)\\\\d{6}\", \"\\\\d{6,10}\",,, \"1123456789\"], [,, \"675\\\\d{7}|9(?:11[2-9]\\\\d{7}|(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[12358]|5[138]|6[24]|7[069]|8[013578]))[2-9]\\\\d{6}|\\\\d{4}[2-9]\\\\d{5})\", \"\\\\d{6,11}\",,, \"91123456789\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"60[04579]\\\\d{7}\", \"\\\\d{10}\",,, \"6001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"AR\", 54, \"00\", \"0\",,, \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?\", \"9$1\",,, [[, \"([68]\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"], \"$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"], \"$1\"], [, \"(9)(11)(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"911\"], \"0$1\"], [, \"(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9(?:2[234689]|3[3-8])\", \"9(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578]))\", \"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\", \"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\"], \"0$1\"], [, \"(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9[23]\"], \"0$1\"], [, \"(11)(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578])\", \"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\", \"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\",, 1], [, \"(\\\\d{3})\", \"$1\", [\"1[012]|911\"], \"$1\"]], [[, \"([68]\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(9)(11)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"911\"]], [, \"(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"9(?:2[234689]|3[3-8])\", \"9(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578]))\", \"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\", \"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\"]], [, \"(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"9[23]\"]], [, \"(11)(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578])\", \"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\", \"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\",, 1]], [,, \"NA\", \"NA\"],,, [,, \"810\\\\d{7}\", \"\\\\d{10}\",,, \"8101234567\"], [,, \"810\\\\d{7}\", \"\\\\d{10}\",,, \"8101234567\"],,, [,, \"NA\", \"NA\"]],\n    AS: [, [,, \"[5689]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"6846(?:22|33|44|55|77|88|9[19])\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"6846221234\"], [,, \"684(?:2(?:5[2468]|72)|7(?:3[13]|70))\\\\d{4}\", \"\\\\d{10}\",,, \"6847331234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"AS\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"684\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AT: [, [,, \"[1-9]\\\\d{3,12}\", \"\\\\d{3,13}\"], [,, \"1\\\\d{3,12}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-8]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|63|7[1368]|8[2457])|5(?:12|2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[1-35-8]|5[468]|62)|7(?:2[1-8]|3[25]|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\\\d{3,10}\", \"\\\\d{3,13}\",,, \"1234567890\"], [,, \"6(?:5[0-3579]|6[013-9]|[7-9]\\\\d)\\\\d{4,10}\", \"\\\\d{7,13}\",,, \"664123456\"], [,, \"800\\\\d{6,10}\", \"\\\\d{9,13}\",,, \"800123456\"], [,, \"(?:9(?:0[01]|3[019]))\\\\d{6,10}\", \"\\\\d{9,13}\",,, \"900123456\"], [,, \"8(?:10\\\\d|2(?:[01]\\\\d|8\\\\d?))\\\\d{5,9}\", \"\\\\d{8,13}\",,, \"810123456\"], [,, \"NA\", \"NA\"], [,, \"780\\\\d{6,10}\", \"\\\\d{9,13}\",,, \"780123456\"], \"AT\", 43, \"00\", \"0\",,, \"0\",,,, [[, \"(116\\\\d{3})\", \"$1\", [\"116\"], \"$1\"], [, \"(1)(\\\\d{3,12})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5[079]\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5[079]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"316|46|51|732|6(?:5[0-3579]|[6-9])|7(?:[28]0)|[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:2[1-8]|35|4[1-8]|[5-79])\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"5(?:(?:0[1-9]|17)\\\\d{2,10}|[79]\\\\d{3,11})|720\\\\d{6,10}\", \"\\\\d{5,13}\",,, \"50123\"],,, [,, \"NA\", \"NA\"]],\n    AU: [, [,, \"[1-578]\\\\d{5,9}\", \"\\\\d{6,10}\"], [,, \"[237]\\\\d{8}|8(?:[6-8]\\\\d{3}|9(?:[02-9]\\\\d{2}|1(?:[0-57-9]\\\\d|6[0135-9])))\\\\d{4}\", \"\\\\d{8,9}\",,, \"212345678\"], [,, \"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\", \"\\\\d{9}\",,, \"412345678\"], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\", \"\\\\d{7,10}\",,, \"1800123456\"], [,, \"19(?:0[0126]\\\\d|[679])\\\\d{5}\", \"\\\\d{8,10}\",,, \"1900123456\"], [,, \"13(?:00\\\\d{3}|45[0-4]|\\\\d)\\\\d{3}\", \"\\\\d{6,10}\",,, \"1300123456\"], [,, \"500\\\\d{6}\", \"\\\\d{9}\",,, \"500123456\"], [,, \"550\\\\d{6}\", \"\\\\d{9}\",,, \"550123456\"], \"AU\", 61, \"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]\", \"0\",,, \"0\",, \"0011\",, [[, \"([2378])(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[45]|14\"], \"0$1\"], [, \"(16)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [, \"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[38]0|90)\", \"1(?:[38]00|90)\"], \"$1\"], [, \"(180)(2\\\\d{3})\", \"$1 $2\", [\"180\", \"1802\"], \"$1\"], [, \"(19\\\\d)(\\\\d{3})\", \"$1 $2\", [\"19[13]\"], \"$1\"], [, \"(19\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"19[679]\"], \"$1\"], [, \"(13)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"13[1-9]\"], \"$1\"]],, [,, \"16\\\\d{3,7}\", \"\\\\d{5,9}\",,, \"1612345\"], 1,, [,, \"1(?:3(?:00\\\\d{3}|45[0-4]|\\\\d)\\\\d{3}|80(?:0\\\\d{6}|2\\\\d{3}))\", \"\\\\d{6,10}\",,, \"1300123456\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AW: [, [,, \"[25-9]\\\\d{6}\", \"\\\\d{7}\"], [,, \"5(?:2\\\\d|8[1-9])\\\\d{4}\", \"\\\\d{7}\",,, \"5212345\"], [,, \"(?:5(?:6\\\\d|9[2-478])|6(?:[039]0|22|4[01]|6[0-2])|7[34]\\\\d|9(?:6[45]|9[4-8]))\\\\d{4}\", \"\\\\d{7}\",,, \"5601234\"], [,, \"800\\\\d{4}\", \"\\\\d{7}\",,, \"8001234\"], [,, \"900\\\\d{4}\", \"\\\\d{7}\",,, \"9001234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"28\\\\d{5}|501\\\\d{4}\", \"\\\\d{7}\",,, \"5011234\"], \"AW\", 297, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    AX: [, [,, \"[135]\\\\d{5,9}|[27]\\\\d{4,9}|4\\\\d{5,10}|6\\\\d{7,8}|8\\\\d{6,9}\", \"\\\\d{5,12}\"], [,, \"18[1-8]\\\\d{3,9}\", \"\\\\d{6,12}\",,, \"1812345678\"], [,, \"4\\\\d{5,10}|50\\\\d{4,8}\", \"\\\\d{6,11}\",,, \"412345678\"], [,, \"800\\\\d{4,7}\", \"\\\\d{7,10}\",,, \"8001234567\"], [,, \"[67]00\\\\d{5,6}\", \"\\\\d{8,9}\",,, \"600123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"AX\", 358, \"00|99[049]\", \"0\",,, \"0\",,,,,, [,, \"NA\", \"NA\"],,, [,, \"[13]00\\\\d{3,7}|2(?:0(?:0\\\\d{3,7}|2[023]\\\\d{1,6}|9[89]\\\\d{1,6}))|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\", \"\\\\d{5,10}\",,, \"100123\"], [,, \"[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\", \"\\\\d{5,10}\",,, \"10112345\"],,, [,, \"NA\", \"NA\"]],\n    AZ: [, [,, \"[1-9]\\\\d{8}\", \"\\\\d{7,9}\"], [,, \"(?:1[28]\\\\d|2(?:02|1[24]|2[2-4]|33|[45]2|6[23])|365)\\\\d{6}\", \"\\\\d{7,9}\",,, \"123123456\"], [,, \"(?:4[04]|5[015]|60|7[07])\\\\d{7}\", \"\\\\d{9}\",,, \"401234567\"], [,, \"88\\\\d{7}\", \"\\\\d{9}\",,, \"881234567\"], [,, \"900200\\\\d{3}\", \"\\\\d{9}\",,, \"900200123\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"AZ\", 994, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"(?:1[28]|2(?:[45]2|[0-36])|365)\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[4-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BA: [, [,, \"[3-9]\\\\d{7,8}\", \"\\\\d{6,9}\"], [,, \"(?:[35]\\\\d|49)\\\\d{6}\", \"\\\\d{6,8}\",,, \"30123456\"], [,, \"6(?:03|44|71|[1-356])\\\\d{6}\", \"\\\\d{8,9}\",,, \"61123456\"], [,, \"8[08]\\\\d{6}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"9[0246]\\\\d{6}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"8[12]\\\\d{6}\", \"\\\\d{8}\",,, \"82123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BA\", 387, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-356]|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6[047]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"70[23]\\\\d{5}\", \"\\\\d{8}\",,, \"70223456\"],,, [,, \"NA\", \"NA\"]],\n    BB: [, [,, \"[2589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\\\d|3[2-9])|5(?:20|[34]\\\\d|54|7[1-3])|6(?:2\\\\d|38)|7(?:37|57)|9(?:1[89]|63))\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2464123456\"], [,, \"246(?:2(?:[356]\\\\d|4[0-57-9]|8[0-79])|45\\\\d|8(?:[2-5]\\\\d|83))\\\\d{4}\", \"\\\\d{10}\",,, \"2462501234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900\\\\d{7}|246976\\\\d{4}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"24631\\\\d{5}\", \"\\\\d{10}\",,, \"2463101234\"], \"BB\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"246\", [,, \"NA\", \"NA\"], [,, \"246(?:292|41[7-9]|43[01])\\\\d{4}\", \"\\\\d{10}\",,, \"2464301234\"],,, [,, \"NA\", \"NA\"]],\n    BD: [, [,, \"[2-79]\\\\d{5,9}|1\\\\d{9}|8[0-7]\\\\d{4,8}\", \"\\\\d{6,10}\"], [,, \"2(?:550\\\\d|7(?:1[0-267]|2[0-289]|3[0-29]|[46][01]|5[1-3]|7[017]|91)|8(?:0[125]|[139][1-6]|2[0157-9]|6[1-35]|7[1-5]|8[1-8]|90)|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0167]|7[15]|8[0146-8]))\\\\d{4}|3(?:12?[5-7]\\\\d{2}|0(?:2(?:[025-79]\\\\d|[348]\\\\d{1,2})|3(?:[2-4]\\\\d|[56]\\\\d?))|2(?:1\\\\d{2}|2(?:[12]\\\\d|[35]\\\\d{1,2}|4\\\\d?))|3(?:1\\\\d{2}|2(?:[2356]\\\\d|4\\\\d{1,2}))|4(?:1\\\\d{2}|2(?:2\\\\d{1,2}|[47]|5\\\\d{2}))|5(?:1\\\\d{2}|29)|[67]1\\\\d{2}|8(?:1\\\\d{2}|2(?:2\\\\d{2}|3|4\\\\d)))\\\\d{3}|4(?:0(?:2(?:[09]\\\\d|7)|33\\\\d{2})|1\\\\d{3}|2(?:1\\\\d{2}|2(?:[25]\\\\d?|[348]\\\\d|[67]\\\\d{1,2}))|3(?:1\\\\d{2}(?:\\\\d{2})?|2(?:[045]\\\\d|[236-9]\\\\d{1,2})|32\\\\d{2})|4(?:[18]\\\\d{2}|2(?:[2-46]\\\\d{2}|3)|5[25]\\\\d{2})|5(?:1\\\\d{2}|2(?:3\\\\d|5))|6(?:[18]\\\\d{2}|2(?:3(?:\\\\d{2})?|[46]\\\\d{1,2}|5\\\\d{2}|7\\\\d)|5(?:3\\\\d?|4\\\\d|[57]\\\\d{1,2}|6\\\\d{2}|8))|71\\\\d{2}|8(?:[18]\\\\d{2}|23\\\\d{2}|54\\\\d{2})|9(?:[18]\\\\d{2}|2[2-5]\\\\d{2}|53\\\\d{1,2}))\\\\d{3}|5(?:02[03489]\\\\d{2}|1\\\\d{2}|2(?:1\\\\d{2}|2(?:2(?:\\\\d{2})?|[457]\\\\d{2}))|3(?:1\\\\d{2}|2(?:[37](?:\\\\d{2})?|[569]\\\\d{2}))|4(?:1\\\\d{2}|2[46]\\\\d{2})|5(?:1\\\\d{2}|26\\\\d{1,2})|6(?:[18]\\\\d{2}|2|53\\\\d{2})|7(?:1|24)\\\\d{2}|8(?:1|26)\\\\d{2}|91\\\\d{2})\\\\d{3}|6(?:0(?:1\\\\d{2}|2(?:3\\\\d{2}|4\\\\d{1,2}))|2(?:2[2-5]\\\\d{2}|5(?:[3-5]\\\\d{2}|7)|8\\\\d{2})|3(?:1|2[3478])\\\\d{2}|4(?:1|2[34])\\\\d{2}|5(?:1|2[47])\\\\d{2}|6(?:[18]\\\\d{2}|6(?:2(?:2\\\\d|[34]\\\\d{2})|5(?:[24]\\\\d{2}|3\\\\d|5\\\\d{1,2})))|72[2-5]\\\\d{2}|8(?:1\\\\d{2}|2[2-5]\\\\d{2})|9(?:1\\\\d{2}|2[2-6]\\\\d{2}))\\\\d{3}|7(?:(?:02|[3-589]1|6[12]|72[24])\\\\d{2}|21\\\\d{3}|32)\\\\d{3}|8(?:(?:4[12]|[5-7]2|1\\\\d?)|(?:0|3[12]|[5-7]1|217)\\\\d)\\\\d{4}|9(?:[35]1|(?:[024]2|81)\\\\d|(?:1|[24]1)\\\\d{2})\\\\d{3}\", \"\\\\d{6,9}\",,, \"27111234\"], [,, \"(?:1[13-9]\\\\d|(?:3[78]|44)[02-9]|6(?:44|6[02-9]))\\\\d{7}\", \"\\\\d{10}\",,, \"1812345678\"], [,, \"80[03]\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"96(?:0[49]|1[0-4]|6[69])\\\\d{6}\", \"\\\\d{10}\",,, \"9604123456\"], \"BD\", 880, \"00[12]?\", \"0\",,, \"0\",, \"00\",, [[, \"(2)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"[3-79]1\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,6})\", \"$1-$2\", [\"1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[016])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1-$2\", [\"[3-79][2-9]|8\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BE: [, [,, \"[1-9]\\\\d{7,8}\", \"\\\\d{8,9}\"], [,, \"(?:1[0-69]|[23][2-8]|4[23]|5\\\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\\\d{6}|80[2-8]\\\\d{5}\", \"\\\\d{8}\",,, \"12345678\"], [,, \"4(?:6[0135-8]|[79]\\\\d|8[3-9])\\\\d{6}\", \"\\\\d{9}\",,, \"470123456\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"(?:70[2-467]|90[0-79])\\\\d{5}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BE\", 32, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4[6-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]|4[23]|9[2-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[156]|7[018]|8(?:0[1-9]|[1-79])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"78\\\\d{6}\", \"\\\\d{8}\",,, \"78123456\"],,, [,, \"NA\", \"NA\"]],\n    BF: [, [,, \"[267]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2(?:0(?:49|5[23]|9[016-9])|4(?:4[569]|5[4-6]|7[0179])|5(?:[34]\\\\d|50))\\\\d{4}\", \"\\\\d{8}\",,, \"20491234\"], [,, \"6(?:[0-689]\\\\d|7[0-5])\\\\d{5}|7\\\\d{7}\", \"\\\\d{8}\",,, \"70123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BF\", 226, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BG: [, [,, \"[23567]\\\\d{5,7}|[489]\\\\d{6,8}\", \"\\\\d{5,9}\"], [,, \"2(?:[0-8]\\\\d{5,6}|9\\\\d{4,6})|(?:[36]\\\\d|5[1-9]|8[1-6]|9[1-7])\\\\d{5,6}|(?:4(?:[124-7]\\\\d|3[1-6])|7(?:0[1-9]|[1-9]\\\\d))\\\\d{4,5}\", \"\\\\d{5,8}\",,, \"2123456\"], [,, \"(?:8[7-9]\\\\d|9(?:8\\\\d|99))\\\\d{6}|4(?:3[0789]|8\\\\d)\\\\d{5}\", \"\\\\d{8,9}\",,, \"48123456\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"90\\\\d{6}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"NA\", \"NA\"], [,, \"700\\\\d{5}\", \"\\\\d{5,9}\",,, \"70012345\"], [,, \"NA\", \"NA\"], \"BG\", 359, \"00\", \"0\",,, \"0\",,,, [[, \"(2)(\\\\d{5})\", \"$1 $2\", [\"29\"], \"0$1\"], [, \"(2)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[124-7]|70[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[124-7]|70[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[78]00\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"999\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"48|8[7-9]|9[08]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BH: [, [,, \"[136-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:1(?:3[1356]|6[0156]|7\\\\d)\\\\d|6(?:1[16]\\\\d|500|6(?:0\\\\d|3[12]|44|7[7-9])|9[69][69])|7(?:1(?:11|78)|7\\\\d{2}))\\\\d{4}\", \"\\\\d{8}\",,, \"17001234\"], [,, \"(?:3(?:[1-4679]\\\\d|5[013569]|8[0-47-9])\\\\d|6(?:3(?:00|33|6[16])|6(?:[69]\\\\d|3[03-9]|7[0-6])))\\\\d{4}\", \"\\\\d{8}\",,, \"36001234\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"(?:87|9[014578])\\\\d{6}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"84\\\\d{6}\", \"\\\\d{8}\",,, \"84123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BH\", 973, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BI: [, [,, \"[267]\\\\d{7}\", \"\\\\d{8}\"], [,, \"22\\\\d{6}\", \"\\\\d{8}\",,, \"22201234\"], [,, \"(?:29|6[189]|7[124-9])\\\\d{6}\", \"\\\\d{8}\",,, \"79561234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BI\", 257, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BJ: [, [,, \"[2689]\\\\d{7}|7\\\\d{3}\", \"\\\\d{4,8}\"], [,, \"2(?:02|1[037]|2[45]|3[68])\\\\d{5}\", \"\\\\d{8}\",,, \"20211234\"], [,, \"(?:6[1-8]|9[03-9])\\\\d{6}\", \"\\\\d{8}\",,, \"90011234\"], [,, \"7[3-5]\\\\d{2}\", \"\\\\d{4}\",,, \"7312\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"857[58]\\\\d{4}\", \"\\\\d{8}\",,, \"85751234\"], \"BJ\", 229, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"81\\\\d{6}\", \"\\\\d{8}\",,, \"81123456\"],,, [,, \"NA\", \"NA\"]],\n    BL: [, [,, \"[56]\\\\d{8}\", \"\\\\d{9}\"], [,, \"590(?:2[7-9]|5[12]|87)\\\\d{4}\", \"\\\\d{9}\",,, \"590271234\"], [,, \"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\", \"\\\\d{9}\",,, \"690301234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BL\", 590, \"00\", \"0\",,, \"0\",,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BM: [, [,, \"[4589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"441(?:2(?:02|23|61|[3479]\\\\d)|[46]\\\\d{2}|5(?:4\\\\d|60|89)|824)\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"4412345678\"], [,, \"441(?:[37]\\\\d|5[0-39])\\\\d{5}\", \"\\\\d{10}\",,, \"4413701234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"BM\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"441\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BN: [, [,, \"[2-578]\\\\d{6}\", \"\\\\d{7}\"], [,, \"2(?:[013-9]\\\\d|2[0-7])\\\\d{4}|[3-5]\\\\d{6}\", \"\\\\d{7}\",,, \"2345678\"], [,, \"22[89]\\\\d{4}|[78]\\\\d{6}\", \"\\\\d{7}\",,, \"7123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BN\", 673, \"00\",,,,,,,, [[, \"([2-578]\\\\d{2})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BO: [, [,, \"[23467]\\\\d{7}\", \"\\\\d{7,8}\"], [,, \"(?:2(?:2\\\\d{2}|5(?:11|[258]\\\\d|9[67])|6(?:12|2\\\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\\\d{2}|4(?:6\\\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:2\\\\d|3[234]|4[248]|5[24]|6[2-6]|7\\\\d))|4(?:4\\\\d{2}|6(?:11|[24689]\\\\d|72)))\\\\d{4}\", \"\\\\d{7,8}\",,, \"22123456\"], [,, \"[67]\\\\d{7}\", \"\\\\d{8}\",,, \"71234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BO\", 591, \"00(1\\\\d)?\", \"0\",,, \"0(1\\\\d)?\",,,, [[, \"([234])(\\\\d{7})\", \"$1 $2\", [\"[234]\"],, \"0$CC $1\"], [, \"([67]\\\\d{7})\", \"$1\", [\"[67]\"],, \"0$CC $1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BQ: [, [,, \"[347]\\\\d{6}\", \"\\\\d{7}\"], [,, \"(?:318[023]|416[023]|7(?:1[578]|50)\\\\d)\\\\d{3}\", \"\\\\d{7}\",,, \"7151234\"], [,, \"(?:318[14-68]|416[15-9]|7(?:0[01]|7[07]|[89]\\\\d)\\\\d)\\\\d{3}\", \"\\\\d{7}\",,, \"3181234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BQ\", 599, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BR: [, [,, \"[1-46-9]\\\\d{7,10}|5\\\\d{8,9}\", \"\\\\d{8,11}\"], [,, \"(?:[14689][1-9]|2[12478]|3[1-578]|5[1-5]|7[13-579])[2-5]\\\\d{7}\", \"\\\\d{8,11}\",,, \"1123456789\"], [,, \"1[1-9](?:7|9\\\\d)\\\\d{7}|(?:2[12478]|3[1-578]|[689][1-9]|7[13-579])(?:[6-8]|9\\\\d?)\\\\d{7}|(?:4[1-9]|5[1-5])[6-9]\\\\d{7}\", \"\\\\d{10,11}\",,, \"11961234567\"], [,, \"800\\\\d{6,7}\", \"\\\\d{8,11}\",,, \"800123456\"], [,, \"(?:300|[59]00\\\\d?)\\\\d{6}\", \"\\\\d{8,11}\",,, \"300123456\"], [,, \"(?:300\\\\d(?:\\\\d{2})?|40(?:0\\\\d|20))\\\\d{4}\", \"\\\\d{8,10}\",,, \"40041234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BR\", 55, \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"0\",,, \"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\",,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[2-9](?:[1-9]|0[1-9])\"], \"$1\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1-$2\", [\"9(?:[1-9]|0[1-9])\"], \"$1\"], [, \"(\\\\d{3,5})\", \"$1\", [\"1[125689]\"], \"$1\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[1689][1-9]|2[12478]|3[1-578]|7[13-579])9\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"[1-9][1-9]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"(?:300|40(?:0|20))\"]], [, \"([3589]00)(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3589]00\"], \"0$1\"]], [[, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[1689][1-9]|2[12478]|3[1-578]|7[13-579])9\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"[1-9][1-9]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"(?:300|40(?:0|20))\"]], [, \"([3589]00)(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3589]00\"], \"0$1\"]], [,, \"NA\", \"NA\"],,, [,, \"(?:300\\\\d|40(?:0\\\\d|20))\\\\d{4}\", \"\\\\d{8}\",,, \"40041234\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BS: [, [,, \"[2589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[3467]|8[0-4]|9[2-467])|461|502|6(?:0[1-3]|12|7[67]|8[78]|9[89])|7(?:02|88))\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2423456789\"], [,, \"242(?:3(?:5[79]|[79]5)|4(?:[2-4][1-9]|5[1-8]|6[2-8]|7\\\\d|81)|5(?:2[45]|3[35]|44|5[1-9]|65|77)|6[34]6|727)\\\\d{4}\", \"\\\\d{10}\",,, \"2423591234\"], [,, \"242300\\\\d{4}|8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"BS\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"242\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BT: [, [,, \"[1-8]\\\\d{6,7}\", \"\\\\d{6,8}\"], [,, \"(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\\\d{5}\", \"\\\\d{6,7}\",,, \"2345678\"], [,, \"(?:1[67]|77)\\\\d{6}\", \"\\\\d{8}\",,, \"17123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BT\", 975, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1|77\"]], [, \"([2-8])(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BW: [, [,, \"[2-79]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0235-9]|55|[69]\\\\d|7[01])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[0389]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\\\d{4}\", \"\\\\d{7}\",,, \"2401234\"], [,, \"7(?:[1-6]\\\\d|7[014-8])\\\\d{5}\", \"\\\\d{8}\",,, \"71123456\"], [,, \"NA\", \"NA\"], [,, \"90\\\\d{5}\", \"\\\\d{7}\",,, \"9012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"79[12][01]\\\\d{4}\", \"\\\\d{8}\",,, \"79101234\"], \"BW\", 267, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-6]\"]], [, \"(7\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(90)(\\\\d{5})\", \"$1 $2\", [\"9\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BY: [, [,, \"[1-4]\\\\d{8}|800\\\\d{3,7}|[89]\\\\d{9,10}\", \"\\\\d{6,11}\"], [,, \"(?:1(?:5(?:1[1-5]|[24]\\\\d|6[2-4]|9[1-7])|6(?:[235]\\\\d|4[1-7])|7\\\\d{2})|2(?:1(?:[246]\\\\d|3[0-35-9]|5[1-9])|2(?:[235]\\\\d|4[0-8])|3(?:[26]\\\\d|3[02-79]|4[024-7]|5[03-7])))\\\\d{5}\", \"\\\\d{6,11}\",,, \"152450911\"], [,, \"(?:2(?:5[5679]|9[1-9])|33\\\\d|44\\\\d)\\\\d{6}\", \"\\\\d{9}\",,, \"294911911\"], [,, \"8(?:0[13]|20\\\\d)\\\\d{7}|800\\\\d{3,7}\", \"\\\\d{6,11}\",,, \"8011234567\"], [,, \"(?:810|902)\\\\d{7}\", \"\\\\d{10}\",,, \"9021234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"249\\\\d{6}\", \"\\\\d{9}\",,, \"249123456\"], \"BY\", 375, \"810\", \"8\",,, \"8?0?\",, \"8~10\",, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"17[0-3589]|2[4-9]|[34]\", \"17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]\"], \"8 0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])\", \"1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])\"], \"8 0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3})\", \"$1 $2-$3\", [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"], \"8 0$1\"], [, \"([89]\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8[01]|9\"], \"8 $1\"], [, \"(82\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"82\"], \"8 $1\"], [, \"(800)(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [, \"(800)(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"]],, [,, \"NA\", \"NA\"],,, [,, \"8(?:[013]|[12]0)\\\\d{8}|800\\\\d{3,7}|902\\\\d{7}\", \"\\\\d{6,11}\",,, \"82012345678\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    BZ: [, [,, \"[2-8]\\\\d{6}|0\\\\d{10}\", \"\\\\d{7}(?:\\\\d{4})?\"], [,, \"[234578][02]\\\\d{5}\", \"\\\\d{7}\",,, \"2221234\"], [,, \"6[0-35-7]\\\\d{5}\", \"\\\\d{7}\",,, \"6221234\"], [,, \"0800\\\\d{7}\", \"\\\\d{11}\",,, \"08001234123\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"BZ\", 501, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [, \"(0)(800)(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"0\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    CA: [, [,, \"[2-9]\\\\d{9}|3\\\\d{6}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}|310\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2042345678\"], [,, \"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2042345678\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}|310\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"CA\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CC: [, [,, \"[1458]\\\\d{5,9}\", \"\\\\d{6,10}\"], [,, \"89162\\\\d{4}\", \"\\\\d{8,9}\",,, \"891621234\"], [,, \"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-2]\\\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\", \"\\\\d{9}\",,, \"412345678\"], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\", \"\\\\d{7,10}\",,, \"1800123456\"], [,, \"190[0126]\\\\d{6}\", \"\\\\d{10}\",,, \"1900123456\"], [,, \"13(?:00\\\\d{2})?\\\\d{4}\", \"\\\\d{6,10}\",,, \"1300123456\"], [,, \"500\\\\d{6}\", \"\\\\d{9}\",,, \"500123456\"], [,, \"550\\\\d{6}\", \"\\\\d{9}\",,, \"550123456\"], \"CC\", 61, \"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]\", \"0\",,, \"0\",, \"0011\",,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CD: [, [,, \"[2-6]\\\\d{6}|[18]\\\\d{6,8}|9\\\\d{8}\", \"\\\\d{7,9}\"], [,, \"1(?:2\\\\d{7}|\\\\d{6})|[2-6]\\\\d{6}\", \"\\\\d{7,9}\",,, \"1234567\"], [,, \"8(?:[0-2459]\\\\d{2}|8)\\\\d{5}|9[7-9]\\\\d{7}\", \"\\\\d{7,9}\",,, \"991234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CD\", 243, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"12\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[0-2459]|9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CF: [, [,, \"[278]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2[12]\\\\d{6}\", \"\\\\d{8}\",,, \"21612345\"], [,, \"7[0257]\\\\d{6}\", \"\\\\d{8}\",,, \"70012345\"], [,, \"NA\", \"NA\"], [,, \"8776\\\\d{4}\", \"\\\\d{8}\",,, \"87761234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CF\", 236, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CG: [, [,, \"[028]\\\\d{8}\", \"\\\\d{9}\"], [,, \"222[1-589]\\\\d{5}\", \"\\\\d{9}\",,, \"222123456\"], [,, \"0[14-6]\\\\d{7}\", \"\\\\d{9}\",,, \"061234567\"], [,, \"NA\", \"NA\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CG\", 242, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    CH: [, [,, \"[2-9]\\\\d{8}|860\\\\d{9}\", \"\\\\d{9}(?:\\\\d{3})?\"], [,, \"(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\\\d{7}\", \"\\\\d{9}\",,, \"212345678\"], [,, \"7[5-9]\\\\d{7}\", \"\\\\d{9}\",,, \"781234567\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"90[016]\\\\d{6}\", \"\\\\d{9}\",,, \"900123456\"], [,, \"84[0248]\\\\d{6}\", \"\\\\d{9}\",,, \"840123456\"], [,, \"878\\\\d{6}\", \"\\\\d{9}\",,, \"878123456\"], [,, \"NA\", \"NA\"], \"CH\", 41, \"00\", \"0\",,, \"0\",,,, [[, \"([2-9]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]|[89]1\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"860\"], \"0$1\"]],, [,, \"74[0248]\\\\d{6}\", \"\\\\d{9}\",,, \"740123456\"],,, [,, \"NA\", \"NA\"], [,, \"5[18]\\\\d{7}\", \"\\\\d{9}\",,, \"581234567\"],,, [,, \"860\\\\d{9}\", \"\\\\d{12}\",,, \"860123456789\"]],\n    CI: [, [,, \"[02-8]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:2(?:0[023]|1[02357]|[23][045]|4[03-5])|3(?:0[06]|1[069]|[2-4][07]|5[09]|6[08]))\\\\d{5}\", \"\\\\d{8}\",,, \"21234567\"], [,, \"(?:0[1-9]|4\\\\d|5[14-9]|6[015-79]|7[578]|87)\\\\d{6}\", \"\\\\d{8}\",,, \"01234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CI\", 225, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    CK: [, [,, \"[2-8]\\\\d{4}\", \"\\\\d{5}\"], [,, \"(?:2\\\\d|3[13-7]|4[1-5])\\\\d{3}\", \"\\\\d{5}\",,, \"21234\"], [,, \"[5-8]\\\\d{4}\", \"\\\\d{5}\",,, \"71234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CK\", 682, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CL: [, [,, \"(?:[2-9]|600|123)\\\\d{7,8}\", \"\\\\d{7,11}\"], [,, \"2(?:1962\\\\d{4}|2\\\\d{7}|32[0-2]\\\\d{5})|(?:3[2-5]|[47][1-35]|5[1-3578]|6[13-57])\\\\d{7}\", \"\\\\d{7,9}\",,, \"221234567\"], [,, \"9[4-9]\\\\d{7}\", \"\\\\d{8,9}\",,, \"961234567\"], [,, \"800\\\\d{6}|1230\\\\d{7}\", \"\\\\d{9,11}\",,, \"800123456\"], [,, \"NA\", \"NA\"], [,, \"600\\\\d{7,8}\", \"\\\\d{10,11}\",,, \"6001234567\"], [,, \"NA\", \"NA\"], [,, \"44\\\\d{7}\", \"\\\\d{9}\",,, \"441234567\"], \"CL\", 56, \"(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0\", \"0\",,, \"0|(1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))\",,,, [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[23]\"], \"($1)\", \"$CC ($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[357]|4[1-35]|6[13-57]\"], \"($1)\", \"$CC ($1)\"], [, \"(9)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(44)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"], \"0$1\"], [, \"([68]00)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"], \"$1\"], [, \"(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"], \"$1\"], [, \"(1230)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"$1\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\"], \"($1)\", \"$CC ($1)\"], [, \"(\\\\d{4,5})\", \"$1\", [\"[1-9]\"], \"$1\"]], [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[23]\"], \"($1)\", \"$CC ($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[357]|4[1-35]|6[13-57]\"], \"($1)\", \"$CC ($1)\"], [, \"(9)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(44)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"], \"0$1\"], [, \"([68]00)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"], \"$1\"], [, \"(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"], \"$1\"], [, \"(1230)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"$1\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\"], \"($1)\", \"$CC ($1)\"]], [,, \"NA\", \"NA\"],,, [,, \"600\\\\d{7,8}\", \"\\\\d{10,11}\",,, \"6001234567\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CM: [, [,, \"[2368]\\\\d{7,8}\", \"\\\\d{8,9}\"], [,, \"2(?:22|33|4[23])\\\\d{6}\", \"\\\\d{9}\",,, \"222123456\"], [,, \"6[5-9]\\\\d{7}\", \"\\\\d{9}\",,, \"671234567\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"88\\\\d{6}\", \"\\\\d{8}\",,, \"88012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CM\", 237, \"00\",,,,,,,, [[, \"([26])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]|88\"]], [, \"(800)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"80\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CN: [, [,, \"[1-7]\\\\d{6,11}|8[0-357-9]\\\\d{6,9}|9\\\\d{7,10}\", \"\\\\d{4,12}\"], [,, \"21(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{8,10})|(?:10|2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1\\\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98))(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{8})|(?:3(?:1[02-9]|35|49|5\\\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[3-9]|5[2-9]|6[4789]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\\\d|2[248]|3[04-9]|4[3-6]|5[0-4689]|6[2368]|9[02-9])|8(?:078|1[236-8]|2[5-7]|3\\\\d|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{7})|80(?:29|6[03578]|7[018]|81)\\\\d{4}\", \"\\\\d{4,12}\",,, \"1012345678\"], [,, \"1(?:[38]\\\\d|4[57]|5[0-35-9]|7[036-8])\\\\d{8}\", \"\\\\d{11}\",,, \"13123456789\"], [,, \"(?:10)?800\\\\d{7}\", \"\\\\d{10,12}\",,, \"8001234567\"], [,, \"16[08]\\\\d{5}\", \"\\\\d{8}\",,, \"16812345\"], [,, \"400\\\\d{7}|950\\\\d{7,8}|(?:10|2[0-57-9]|3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[4789]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[3678]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))96\\\\d{3,4}\", \"\\\\d{7,11}\",,, \"4001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CN\", 86, \"(1(?:[129]\\\\d{3}|79\\\\d{2}))?00\", \"0\",,, \"(1(?:[129]\\\\d{3}|79\\\\d{2}))|0\",, \"00\",, [[, \"(80\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"80[2678]\"], \"0$1\", \"$CC $1\", 1], [, \"([48]00)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[48]00\"]], [, \"(\\\\d{5,6})\", \"$1\", [\"100|95\"]], [, \"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2\\\\d)[19]\", \"(?:10|2\\\\d)(?:10|9[56])\", \"(?:10|2\\\\d)(?:100|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[3-9]\", \"[3-9]\\\\d{2}[19]\", \"[3-9]\\\\d{2}(?:10|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3,4})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]], [, \"(21)(\\\\d{4})(\\\\d{4,6})\", \"$1 $2 $3\", [\"21\"], \"0$1\", \"$CC $1\", 1], [, \"([12]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10[1-9]|2[02-9]\", \"10[1-9]|2[02-9]\", \"10(?:[1-79]|8(?:[1-9]|0[1-9]))|2[02-9]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[4789]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98)\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"807\", \"8078\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-578]\"],, \"$CC $1\"], [, \"(10800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"108\", \"1080\", \"10800\"]], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"950\"]]], [[, \"(80\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"80[2678]\"], \"0$1\", \"$CC $1\", 1], [, \"([48]00)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[48]00\"]], [, \"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2\\\\d)[19]\", \"(?:10|2\\\\d)(?:10|9[56])\", \"(?:10|2\\\\d)(?:100|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[3-9]\", \"[3-9]\\\\d{2}[19]\", \"[3-9]\\\\d{2}(?:10|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(21)(\\\\d{4})(\\\\d{4,6})\", \"$1 $2 $3\", [\"21\"], \"0$1\", \"$CC $1\", 1], [, \"([12]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10[1-9]|2[02-9]\", \"10[1-9]|2[02-9]\", \"10(?:[1-79]|8(?:[1-9]|0[1-9]))|2[02-9]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[4789]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98)\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"807\", \"8078\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-578]\"],, \"$CC $1\"], [, \"(10800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"108\", \"1080\", \"10800\"]], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"950\"]]], [,, \"NA\", \"NA\"],,, [,, \"(?:4|(?:10)?8)00\\\\d{7}|950\\\\d{7,8}\", \"\\\\d{10,12}\",,, \"4001234567\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CO: [, [,, \"(?:[13]\\\\d{0,3}|[24-8])\\\\d{7}\", \"\\\\d{7,11}\"], [,, \"[124-8][2-9]\\\\d{6}\", \"\\\\d{8}\",,, \"12345678\"], [,, \"3(?:0[0-5]|1\\\\d|2[0-2]|5[01])\\\\d{7}\", \"\\\\d{10}\",,, \"3211234567\"], [,, \"1800\\\\d{7}\", \"\\\\d{11}\",,, \"18001234567\"], [,, \"19(?:0[01]|4[78])\\\\d{7}\", \"\\\\d{11}\",,, \"19001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CO\", 57, \"00(?:4(?:[14]4|56)|[579])\", \"0\",,, \"0([3579]|4(?:44|56))?\",,,, [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1(?:8[2-9]|9[0-3]|[2-7])|[24-8]\", \"1(?:8[2-9]|9(?:09|[1-3])|[2-7])|[24-8]\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"],, \"0$CC $1\"], [, \"(1)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1(?:80|9[04])\", \"1(?:800|9(?:0[01]|4[78]))\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1(?:8[2-9]|9[0-3]|[2-7])|[24-8]\", \"1(?:8[2-9]|9(?:09|[1-3])|[2-7])|[24-8]\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"],, \"0$CC $1\"], [, \"(1)(\\\\d{3})(\\\\d{7})\", \"$1 $2 $3\", [\"1(?:80|9[04])\", \"1(?:800|9(?:0[01]|4[78]))\"]]], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CR: [, [,, \"[24-9]\\\\d{7,9}\", \"\\\\d{8,10}\"], [,, \"2[0-24-7]\\\\d{6}\", \"\\\\d{8}\",,, \"22123456\"], [,, \"5(?:0[01]|7[0-3])\\\\d{5}|(?:[67][0-3]|8[3-9])\\\\d{6}\", \"\\\\d{8}\",,, \"83123456\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"90[059]\\\\d{7}\", \"\\\\d{10}\",,, \"9001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"210[0-6]\\\\d{4}|4\\\\d{7}|5100\\\\d{4}\", \"\\\\d{8}\",,, \"40001234\"], \"CR\", 506, \"00\",,,, \"(19(?:0[012468]|1[09]|20|66|77|99))\",,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[24-7]|8[3-9]\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]0\"],, \"$CC $1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CU: [, [,, \"[2-57]\\\\d{5,7}\", \"\\\\d{4,8}\"], [,, \"2[1-4]\\\\d{5,6}|3(?:1\\\\d{6}|[23]\\\\d{4,6})|4(?:[125]\\\\d{5,6}|[36]\\\\d{6}|[78]\\\\d{4,6})|7\\\\d{6,7}\", \"\\\\d{4,8}\",,, \"71234567\"], [,, \"5\\\\d{7}\", \"\\\\d{8}\",,, \"51234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CU\", 53, \"119\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{6,7})\", \"$1 $2\", [\"7\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"[2-4]\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"5\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CV: [, [,, \"[259]\\\\d{6}\", \"\\\\d{7}\"], [,, \"2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\\\d|7[1-3]|8[1-5])\\\\d{4}\", \"\\\\d{7}\",,, \"2211234\"], [,, \"(?:9\\\\d|59)\\\\d{5}\", \"\\\\d{7}\",,, \"9911234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CV\", 238, \"0\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CW: [, [,, \"[169]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"9(?:[48]\\\\d{2}|50\\\\d|7(?:2[0-24]|[34]\\\\d|6[35-7]|77|8[7-9]))\\\\d{4}\", \"\\\\d{7,8}\",,, \"94151234\"], [,, \"9(?:5(?:[12467]\\\\d|3[01])|6(?:[15-9]\\\\d|3[01]))\\\\d{4}\", \"\\\\d{7,8}\",,, \"95181234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"60[0-2]\\\\d{4}\", \"\\\\d{7}\",,, \"6001234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"CW\", 599, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[13-7]\"]], [, \"(9)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"]]],, [,, \"955\\\\d{5}\", \"\\\\d{7,8}\",,, \"95581234\"], 1,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CX: [, [,, \"[1458]\\\\d{5,9}\", \"\\\\d{6,10}\"], [,, \"89164\\\\d{4}\", \"\\\\d{8,9}\",,, \"891641234\"], [,, \"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-2]\\\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\", \"\\\\d{9}\",,, \"412345678\"], [,, \"180(?:0\\\\d{3}|2)\\\\d{3}\", \"\\\\d{7,10}\",,, \"1800123456\"], [,, \"190[0126]\\\\d{6}\", \"\\\\d{10}\",,, \"1900123456\"], [,, \"13(?:00\\\\d{2})?\\\\d{4}\", \"\\\\d{6,10}\",,, \"1300123456\"], [,, \"500\\\\d{6}\", \"\\\\d{9}\",,, \"500123456\"], [,, \"550\\\\d{6}\", \"\\\\d{9}\",,, \"550123456\"], \"CX\", 61, \"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]\", \"0\",,, \"0\",, \"0011\",,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    CY: [, [,, \"[257-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2[2-6]\\\\d{6}\", \"\\\\d{8}\",,, \"22345678\"], [,, \"9[4-79]\\\\d{6}\", \"\\\\d{8}\",,, \"96123456\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80001234\"], [,, \"90[09]\\\\d{5}\", \"\\\\d{8}\",,, \"90012345\"], [,, \"80[1-9]\\\\d{5}\", \"\\\\d{8}\",,, \"80112345\"], [,, \"700\\\\d{5}\", \"\\\\d{8}\",,, \"70012345\"], [,, \"NA\", \"NA\"], \"CY\", 357, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"(?:50|77)\\\\d{6}\", \"\\\\d{8}\",,, \"77123456\"],,, [,, \"NA\", \"NA\"]],\n    CZ: [, [,, \"[2-8]\\\\d{8}|9\\\\d{8,11}\", \"\\\\d{9,12}\"], [,, \"2\\\\d{8}|(?:3[1257-9]|4[16-9]|5[13-9])\\\\d{7}\", \"\\\\d{9,12}\",,, \"212345678\"], [,, \"(?:60[1-8]|7(?:0[2-5]|[2379]\\\\d))\\\\d{6}\", \"\\\\d{9,12}\",,, \"601123456\"], [,, \"800\\\\d{6}\", \"\\\\d{9,12}\",,, \"800123456\"], [,, \"9(?:0[05689]|76)\\\\d{6}\", \"\\\\d{9,12}\",,, \"900123456\"], [,, \"8[134]\\\\d{7}\", \"\\\\d{9,12}\",,, \"811234567\"], [,, \"70[01]\\\\d{6}\", \"\\\\d{9,12}\",,, \"700123456\"], [,, \"9[17]0\\\\d{6}\", \"\\\\d{9,12}\",,, \"910123456\"], \"CZ\", 420, \"00\",,,,,,,, [[, \"([2-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]], [, \"(96\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"96\"]], [, \"(9\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9[36]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"9(?:5\\\\d|7[234])\\\\d{6}\", \"\\\\d{9,12}\",,, \"972123456\"],,, [,, \"9(?:3\\\\d{9}|6\\\\d{7,10})\", \"\\\\d{9,12}\",,, \"93123456789\"]],\n    DE: [, [,, \"[1-35-9]\\\\d{3,14}|4(?:[0-8]\\\\d{4,12}|9(?:[0-37]\\\\d|4(?:[1-35-8]|4\\\\d?)|5\\\\d{1,2}|6[1-8]\\\\d?)\\\\d{2,8})\", \"\\\\d{2,15}\"], [,, \"[246]\\\\d{5,13}|3(?:0\\\\d{3,13}|2\\\\d{9}|[3-9]\\\\d{4,13})|5(?:0[2-8]|[1256]\\\\d|[38][0-8]|4\\\\d{0,2}|[79][0-7])\\\\d{3,11}|7(?:0[2-8]|[1-9]\\\\d)\\\\d{3,10}|8(?:0[2-9]|[1-9]\\\\d)\\\\d{3,10}|9(?:0[6-9]\\\\d{3,10}|1\\\\d{4,12}|[2-9]\\\\d{4,11})\", \"\\\\d{2,15}\",,, \"30123456\"], [,, \"1(?:5[0-25-9]\\\\d{8}|6[023]\\\\d{7,8}|7(?:[0-57-9]\\\\d?|6\\\\d)\\\\d{7})\", \"\\\\d{10,11}\",,, \"15123456789\"], [,, \"800\\\\d{7,12}\", \"\\\\d{10,15}\",,, \"8001234567890\"], [,, \"137[7-9]\\\\d{6}|900(?:[135]\\\\d{6}|9\\\\d{7})\", \"\\\\d{10,11}\",,, \"9001234567\"], [,, \"1(?:3(?:7[1-6]\\\\d{6}|8\\\\d{4})|80\\\\d{5,11})\", \"\\\\d{7,14}\",,, \"18012345\"], [,, \"700\\\\d{8}\", \"\\\\d{11}\",,, \"70012345678\"], [,, \"NA\", \"NA\"], \"DE\", 49, \"00\", \"0\",,, \"0\",,,, [[, \"(1\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"], [, \"(15\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"15[0568]\"], \"0$1\"], [, \"(1\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"15\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,11})\", \"$1 $2\", [\"3[02]|40|[68]9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,11})\", \"$1 $2\", [\"2(?:\\\\d1|0[2389]|1[24]|28|34)|3(?:[3-9][15]|40)|[4-8][1-9]1|9(?:06|[1-9]1)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2,11})\", \"$1 $2\", [\"[24-6]|[7-9](?:\\\\d[1-9]|[1-9]\\\\d)|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])\", \"[24-6]|[7-9](?:\\\\d[1-9]|[1-9]\\\\d)|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|4[1246]|6[1-4]|7[1346]|8[13568]|9[1246])|6(?:0[356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))\"], \"0$1\"], [, \"(3\\\\d{4})(\\\\d{1,10})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"(800)(\\\\d{7,12})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"(?:18|90)0|137\", \"1(?:37|80)|900[1359]\"], \"0$1\"], [, \"(1\\\\d{2})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"], [, \"(18\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"], [, \"(18\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"], [, \"(18\\\\d)(\\\\d{8})\", \"$1 $2\", [\"18[2-579]\"], \"0$1\"], [, \"(700)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"700\"], \"0$1\"], [, \"(138)(\\\\d{4})\", \"$1 $2\", [\"138\"], \"0$1\"], [, \"(15[013-68])(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15[013-68]\"], \"0$1\"], [, \"(15[279]\\\\d)(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"], [, \"(1[67]\\\\d)(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"]],, [,, \"16(?:4\\\\d{1,10}|[89]\\\\d{1,11})\", \"\\\\d{4,14}\",,, \"16412345\"],,, [,, \"NA\", \"NA\"], [,, \"18(?:1\\\\d{5,11}|[2-9]\\\\d{8})\", \"\\\\d{8,14}\",,, \"18500123456\"],,, [,, \"1(?:5(?:(?:2\\\\d55|7\\\\d99|9\\\\d33)\\\\d{7}|(?:[034568]00|113)\\\\d{8})|6(?:013|255|399)\\\\d{7,8}|7(?:[015]13|[234]55|[69]33|[78]99)\\\\d{7,8})\", \"\\\\d{12,13}\",,, \"177991234567\"]],\n    DJ: [, [,, \"[27]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2(?:1[2-5]|7[45])\\\\d{5}\", \"\\\\d{8}\",,, \"21360003\"], [,, \"77[0-26-8]\\\\d{5}\", \"\\\\d{8}\",,, \"77831001\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"DJ\", 253, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    DK: [, [,, \"[2-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:[2-7]\\\\d|8[126-9]|9[1-36-9])\\\\d{6}\", \"\\\\d{8}\",,, \"32123456\"], [,, \"(?:[2-7]\\\\d|8[126-9]|9[1-36-9])\\\\d{6}\", \"\\\\d{8}\",,, \"20123456\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"90\\\\d{6}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"DK\", 45, \"00\",,,,,,, 1, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    DM: [, [,, \"[57-9]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4]|70[1-3])\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"7674201234\"], [,, \"767(?:2(?:[234689]5|7[5-7])|31[5-7]|61[2-7])\\\\d{4}\", \"\\\\d{10}\",,, \"7672251234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"DM\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"767\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    DO: [, [,, \"[589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"8(?:[04]9[2-9]\\\\d{6}|29(?:2(?:[0-59]\\\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\\\d|4[7-9])|[45]\\\\d{2}|6(?:[0-27-9]\\\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9]))\\\\d{4})\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"8092345678\"], [,, \"8[024]9[2-9]\\\\d{6}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"8092345678\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"DO\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"8[024]9\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    DZ: [, [,, \"(?:[1-4]|[5-9]\\\\d)\\\\d{7}\", \"\\\\d{8,9}\"], [,, \"(?:1\\\\d|2[013-79]|3[0-8]|4[0135689])\\\\d{6}|9619\\\\d{5}\", \"\\\\d{8,9}\",,, \"12345678\"], [,, \"(?:5[4-6]|7[7-9])\\\\d{7}|6(?:[569]\\\\d|7[0-6])\\\\d{6}\", \"\\\\d{9}\",,, \"551234567\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"80[3-689]1\\\\d{5}\", \"\\\\d{9}\",,, \"808123456\"], [,, \"80[12]1\\\\d{5}\", \"\\\\d{9}\",,, \"801123456\"], [,, \"NA\", \"NA\"], [,, \"98[23]\\\\d{6}\", \"\\\\d{9}\",,, \"983123456\"], \"DZ\", 213, \"00\", \"0\",,, \"0\",,,, [[, \"([1-4]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-4]\"], \"0$1\"], [, \"([5-8]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"], [, \"(9\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    EC: [, [,, \"1\\\\d{9,10}|[2-8]\\\\d{7}|9\\\\d{8}\", \"\\\\d{7,11}\"], [,, \"[2-7][2-7]\\\\d{6}\", \"\\\\d{7,8}\",,, \"22123456\"], [,, \"9(?:39|[45][89]|[67][7-9]|[89]\\\\d)\\\\d{6}\", \"\\\\d{9}\",,, \"991234567\"], [,, \"1800\\\\d{6,7}\", \"\\\\d{10,11}\",,, \"18001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"[2-7]890\\\\d{4}\", \"\\\\d{8}\",,, \"28901234\"], \"EC\", 593, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[247]|[356][2-8]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(1800)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"], \"$1\"]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[247]|[356][2-8]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(1800)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"], \"$1\"]], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    EE: [, [,, \"1\\\\d{3,4}|[3-9]\\\\d{6,7}|800\\\\d{6,7}\", \"\\\\d{4,10}\"], [,, \"(?:3[23589]|4[3-8]|6\\\\d|7[1-9]|88)\\\\d{5}\", \"\\\\d{7}\",,, \"3212345\"], [,, \"(?:5\\\\d|8[1-5])\\\\d{6}|5(?:[02]\\\\d{2}|1(?:[0-8]\\\\d|95)|5[0-478]\\\\d|64[0-4]|65[1-589])\\\\d{3}\", \"\\\\d{7,8}\",,, \"51234567\"], [,, \"800(?:0\\\\d{3}|1\\\\d|[2-9])\\\\d{3}\", \"\\\\d{7,10}\",,, \"80012345\"], [,, \"(?:40\\\\d{2}|900)\\\\d{4}\", \"\\\\d{7,8}\",,, \"9001234\"], [,, \"NA\", \"NA\"], [,, \"70[0-2]\\\\d{5}\", \"\\\\d{8}\",,, \"70012345\"], [,, \"NA\", \"NA\"], \"EE\", 372, \"00\",,,,,,,, [[, \"([3-79]\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]\"]], [, \"(70)(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"70\"]], [, \"(8000)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"800\", \"8000\"]], [, \"([458]\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"40|5|8(?:00|[1-5])\", \"40|5|8(?:00[1-9]|[1-5])\"]]],, [,, \"NA\", \"NA\"],,, [,, \"1\\\\d{3,4}|800[2-9]\\\\d{3}\", \"\\\\d{4,7}\",,, \"8002123\"], [,, \"1(?:2[01245]|3[0-6]|4[1-489]|5[0-59]|6[1-46-9]|7[0-27-9]|8[189]|9[012])\\\\d{1,2}\", \"\\\\d{4,5}\",,, \"12123\"],,, [,, \"NA\", \"NA\"]],\n    EG: [, [,, \"1\\\\d{4,9}|[2456]\\\\d{8}|3\\\\d{7}|[89]\\\\d{8,9}\", \"\\\\d{5,10}\"], [,, \"(?:1(?:3[23]\\\\d|5(?:[23]|9\\\\d))|2[2-4]\\\\d{2}|3\\\\d{2}|4(?:0[2-5]|[578][23]|64)\\\\d|5(?:0[2-7]|[57][23])\\\\d|6[24-689]3\\\\d|8(?:2[2-57]|4[26]|6[237]|8[2-4])\\\\d|9(?:2[27]|3[24]|52|6[2356]|7[2-4])\\\\d)\\\\d{5}|1[69]\\\\d{3}\", \"\\\\d{5,9}\",,, \"234567890\"], [,, \"1(?:0[0-269]|1[0-245]|2[0-278])\\\\d{7}\", \"\\\\d{10}\",,, \"1001234567\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"900\\\\d{7}\", \"\\\\d{10}\",,, \"9001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"EG\", 20, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{7,8})\", \"$1 $2\", [\"[23]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1[012]|[89]00\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1[35]|[4-6]|[89][2-9]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    EH: [, [,, \"[5689]\\\\d{8}\", \"\\\\d{9}\"], [,, \"528[89]\\\\d{5}\", \"\\\\d{9}\",,, \"528812345\"], [,, \"6(?:0[0-8]|[12-79]\\\\d|8[017])\\\\d{6}\", \"\\\\d{9}\",,, \"650123456\"], [,, \"80\\\\d{7}\", \"\\\\d{9}\",,, \"801234567\"], [,, \"89\\\\d{7}\", \"\\\\d{9}\",,, \"891234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"EH\", 212, \"00\", \"0\",,, \"0\",,,,,, [,, \"NA\", \"NA\"],, \"528[89]\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    ER: [, [,, \"[178]\\\\d{6}\", \"\\\\d{6,7}\"], [,, \"1(?:1[12568]|20|40|55|6[146])\\\\d{4}|8\\\\d{6}\", \"\\\\d{6,7}\",,, \"8370362\"], [,, \"17[1-3]\\\\d{4}|7\\\\d{6}\", \"\\\\d{7}\",,, \"7123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"ER\", 291, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    ES: [, [,, \"[5-9]\\\\d{8}\", \"\\\\d{9}\"], [,, \"8(?:[13]0|[28][0-8]|[47][1-9]|5[01346-9]|6[0457-9])\\\\d{6}|9(?:[1238][0-8]\\\\d{6}|4[1-9]\\\\d{6}|5\\\\d{7}|6(?:[0-8]\\\\d{6}|9(?:0(?:[0-57-9]\\\\d{4}|6(?:0[0-8]|1[1-9]|[2-9]\\\\d)\\\\d{2})|[1-9]\\\\d{5}))|7(?:[124-9]\\\\d{2}|3(?:[0-8]\\\\d|9[1-9]))\\\\d{4})\", \"\\\\d{9}\",,, \"810123456\"], [,, \"(?:6\\\\d{6}|7[1-4]\\\\d{5}|9(?:6906(?:09|10)|7390\\\\d{2}))\\\\d{2}\", \"\\\\d{9}\",,, \"612345678\"], [,, \"[89]00\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"80[367]\\\\d{6}\", \"\\\\d{9}\",,, \"803123456\"], [,, \"90[12]\\\\d{6}\", \"\\\\d{9}\",,, \"901123456\"], [,, \"70\\\\d{7}\", \"\\\\d{9}\",,, \"701234567\"], [,, \"NA\", \"NA\"], \"ES\", 34, \"00\",,,,,,,, [[, \"([89]00)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [, \"([5-9]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[568]|[79][0-8]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"51\\\\d{7}\", \"\\\\d{9}\",,, \"511234567\"],,, [,, \"NA\", \"NA\"]],\n    ET: [, [,, \"[1-59]\\\\d{8}\", \"\\\\d{7,9}\"], [,, \"(?:11(?:1(?:1[124]|2[2-57]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:18|2[69]|4[5-7]|5[1-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|22[0-6]|33[0134689]|44[04]|55[0-6]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:11[1-9]|22[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\\\d)))\\\\d{4}\", \"\\\\d{7,9}\",,, \"111112345\"], [,, \"9(?:[1-46]\\\\d|5[89])\\\\d{6}\", \"\\\\d{9}\",,, \"911234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"ET\", 251, \"00\", \"0\",,, \"0\",,,, [[, \"([1-59]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    FI: [, [,, \"1\\\\d{4,11}|[2-9]\\\\d{4,10}\", \"\\\\d{5,12}\"], [,, \"1(?:[3569][1-8]\\\\d{3,9}|[47]\\\\d{5,10})|2[1-8]\\\\d{3,9}|3(?:[1-8]\\\\d{3,9}|9\\\\d{4,8})|[5689][1-8]\\\\d{3,9}\", \"\\\\d{5,12}\",,, \"1312345678\"], [,, \"4\\\\d{5,10}|50\\\\d{4,8}\", \"\\\\d{6,11}\",,, \"412345678\"], [,, \"800\\\\d{4,7}\", \"\\\\d{7,10}\",,, \"8001234567\"], [,, \"[67]00\\\\d{5,6}\", \"\\\\d{8,9}\",,, \"600123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"FI\", 358, \"00|99[049]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"(?:[1-3]00|[6-8]0)\"], \"0$1\"], [, \"(116\\\\d{3})\", \"$1\", [\"116\"], \"$1\"], [, \"(\\\\d{2})(\\\\d{4,10})\", \"$1 $2\", [\"[14]|2[09]|50|7[135]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4,11})\", \"$1 $2\", [\"[25689][1-8]|3\"], \"0$1\"]],, [,, \"NA\", \"NA\"], 1,, [,, \"[13]00\\\\d{3,7}|2(?:0(?:0\\\\d{3,7}|2[023]\\\\d{1,6}|9[89]\\\\d{1,6}))|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\", \"\\\\d{5,10}\",,, \"100123\"], [,, \"[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\", \"\\\\d{5,10}\",,, \"10112345\"],,, [,, \"NA\", \"NA\"]],\n    FJ: [, [,, \"[36-9]\\\\d{6}|0\\\\d{10}\", \"\\\\d{7}(?:\\\\d{4})?\"], [,, \"(?:3[0-5]|6[25-7]|8[58])\\\\d{5}\", \"\\\\d{7}\",,, \"3212345\"], [,, \"(?:7[0-8]|8[034679]|9\\\\d)\\\\d{5}\", \"\\\\d{7}\",,, \"7012345\"], [,, \"0800\\\\d{7}\", \"\\\\d{11}\",,, \"08001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"FJ\", 679, \"0(?:0|52)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[36-9]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    FK: [, [,, \"[2-7]\\\\d{4}\", \"\\\\d{5}\"], [,, \"[2-47]\\\\d{4}\", \"\\\\d{5}\",,, \"31234\"], [,, \"[56]\\\\d{4}\", \"\\\\d{5}\",,, \"51234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"FK\", 500, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    FM: [, [,, \"[39]\\\\d{6}\", \"\\\\d{7}\"], [,, \"3[2357]0[1-9]\\\\d{3}|9[2-6]\\\\d{5}\", \"\\\\d{7}\",,, \"3201234\"], [,, \"3[2357]0[1-9]\\\\d{3}|9[2-7]\\\\d{5}\", \"\\\\d{7}\",,, \"3501234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"FM\", 691, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    FO: [, [,, \"[2-9]\\\\d{5}\", \"\\\\d{6}\"], [,, \"(?:20|[3-4]\\\\d|8[19])\\\\d{4}\", \"\\\\d{6}\",,, \"201234\"], [,, \"(?:[27][1-9]|5\\\\d)\\\\d{4}\", \"\\\\d{6}\",,, \"211234\"], [,, \"80[257-9]\\\\d{3}\", \"\\\\d{6}\",,, \"802123\"], [,, \"90(?:[1345][15-7]|2[125-7]|99)\\\\d{2}\", \"\\\\d{6}\",,, \"901123\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"(?:6[0-36]|88)\\\\d{4}\", \"\\\\d{6}\",,, \"601234\"], \"FO\", 298, \"00\",,,, \"(10(?:01|[12]0|88))\",,,, [[, \"(\\\\d{6})\", \"$1\",,, \"$CC $1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    FR: [, [,, \"[1-9]\\\\d{8}\", \"\\\\d{9}\"], [,, \"[1-5]\\\\d{8}\", \"\\\\d{9}\",,, \"123456789\"], [,, \"6\\\\d{8}|7(?:00\\\\d{6}|[3-9]\\\\d{7})\", \"\\\\d{9}\",,, \"612345678\"], [,, \"80\\\\d{7}\", \"\\\\d{9}\",,, \"801234567\"], [,, \"89[1-37-9]\\\\d{6}\", \"\\\\d{9}\",,, \"891123456\"], [,, \"8(?:1[019]|2[0156]|84|90)\\\\d{6}\", \"\\\\d{9}\",,, \"810123456\"], [,, \"NA\", \"NA\"], [,, \"9\\\\d{8}\", \"\\\\d{9}\",,, \"912345678\"], \"FR\", 33, \"00\", \"0\",,, \"0\",,,, [[, \"([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"], [, \"(1\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"11\"], \"$1\"], [, \"(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"]], [[, \"([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"], [, \"(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"]], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GA: [, [,, \"0?\\\\d{7}\", \"\\\\d{7,8}\"], [,, \"01\\\\d{6}\", \"\\\\d{8}\",,, \"01441234\"], [,, \"0?[2-7]\\\\d{6}\", \"\\\\d{7,8}\",,, \"06031234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GA\", 241, \"00\",,,,,,,, [[, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    GB: [, [,, \"\\\\d{7,10}\", \"\\\\d{4,10}\"], [,, \"2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[012])\\\\d{7}|1(?:(?:1(?:3[0-48]|[46][0-4]|5[012789]|7[0-49]|8[01349])|21[0-7]|31[0-8]|[459]1\\\\d|61[0-46-9]))\\\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-4789]|7[013-9]|9\\\\d)|3(?:0\\\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1235679]|9[24578])|4(?:0[03-9]|[28][02-5789]|[37]\\\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1235-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\\\d|7[0-35-9]|8[0-468]|9[0-5789])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\\\d|3[023678]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-5789]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-5789]|4[2-9]|5[0-579]|6[234789]|7[0124578]|8\\\\d|9[2-57]))\\\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-4789]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[015789]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\\\d)|276\\\\d|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[567]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}|176888[234678]\\\\d{2}|16977[23]\\\\d{3}\", \"\\\\d{4,10}\",,, \"1212345678\"], [,, \"7(?:[1-4]\\\\d\\\\d|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[04-9]\\\\d|1[02-9]|2[0-35-9]|3[0-689]))\\\\d{6}\", \"\\\\d{10}\",,, \"7400123456\"], [,, \"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})|500\\\\d{6}\", \"\\\\d{7}(?:\\\\d{2,3})?\",,, \"8001234567\"], [,, \"(?:87[123]|9(?:[01]\\\\d|8[2349]))\\\\d{7}\", \"\\\\d{10}\",,, \"9012345678\"], [,, \"8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"8431234567\"], [,, \"70\\\\d{8}\", \"\\\\d{10}\",,, \"7012345678\"], [,, \"56\\\\d{8}\", \"\\\\d{10}\",,, \"5612345678\"], \"GB\", 44, \"00\", \"0\", \" x\",, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2|5[56]|7(?:0|6[013-9])\", \"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:1|\\\\d1)|3|9[018]\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:387|5(?:24|39)|697|768|946)\", \"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"], \"0$1\"], [, \"(1\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(7\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"7(?:[1-5789]|62)\", \"7(?:[1-5789]|624)\"], \"0$1\"], [, \"(800)(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [, \"(845)(46)(4\\\\d)\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [, \"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8(?:4[2-5]|7[0-3])\"], \"0$1\"], [, \"(80\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\"], [, \"([58]00)(\\\\d{6})\", \"$1 $2\", [\"[58]00\"], \"0$1\"]],, [,, \"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\", \"\\\\d{10}\",,, \"7640123456\"], 1,, [,, \"NA\", \"NA\"], [,, \"(?:3[0347]|55)\\\\d{8}\", \"\\\\d{10}\",,, \"5512345678\"],,, [,, \"NA\", \"NA\"]],\n    GD: [, [,, \"[4589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|68|73|90)|63[68]|7(?:58|84)|800|938)\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"4732691234\"], [,, \"473(?:4(?:0[2-79]|1[04-9]|20|58)|5(?:2[01]|3[3-8])|901)\\\\d{4}\", \"\\\\d{10}\",,, \"4734031234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"GD\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"473\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GE: [, [,, \"[34578]\\\\d{8}\", \"\\\\d{6,9}\"], [,, \"(?:3(?:[256]\\\\d|4[124-9]|7[0-4])|4(?:1\\\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\\\d{6}\", \"\\\\d{6,9}\",,, \"322123456\"], [,, \"5(?:14|5[01578]|68|7[0147-9]|9[0-35-9])\\\\d{6}\", \"\\\\d{9}\",,, \"555123456\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"706\\\\d{6}\", \"\\\\d{9}\",,, \"706123456\"], \"GE\", 995, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"706\\\\d{6}\", \"\\\\d{9}\",,, \"706123456\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GF: [, [,, \"[56]\\\\d{8}\", \"\\\\d{9}\"], [,, \"594(?:10|2[012457-9]|3[0-57-9]|4[3-9]|5[7-9]|6[0-3]|9[014])\\\\d{4}\", \"\\\\d{9}\",,, \"594101234\"], [,, \"694(?:[04][0-7]|1[0-5]|3[018]|[29]\\\\d)\\\\d{4}\", \"\\\\d{9}\",,, \"694201234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GF\", 594, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GG: [, [,, \"[135789]\\\\d{6,9}\", \"\\\\d{6,10}\"], [,, \"1481\\\\d{6}\", \"\\\\d{6,10}\",,, \"1481456789\"], [,, \"7(?:781|839|911)\\\\d{6}\", \"\\\\d{10}\",,, \"7781123456\"], [,, \"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})|500\\\\d{6}\", \"\\\\d{7}(?:\\\\d{2,3})?\",,, \"8001234567\"], [,, \"(?:87[123]|9(?:[01]\\\\d|8[0-3]))\\\\d{7}\", \"\\\\d{10}\",,, \"9012345678\"], [,, \"8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"8431234567\"], [,, \"70\\\\d{8}\", \"\\\\d{10}\",,, \"7012345678\"], [,, \"56\\\\d{8}\", \"\\\\d{10}\",,, \"5612345678\"], \"GG\", 44, \"00\", \"0\", \" x\",, \"0\",,,,,, [,, \"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\", \"\\\\d{10}\",,, \"7640123456\"],,, [,, \"NA\", \"NA\"], [,, \"(?:3[0347]|55)\\\\d{8}\", \"\\\\d{10}\",,, \"5512345678\"],,, [,, \"NA\", \"NA\"]],\n    GH: [, [,, \"[235]\\\\d{8}|8\\\\d{7}\", \"\\\\d{7,9}\"], [,, \"3(?:0[237]\\\\d|[167](?:2[0-6]|7\\\\d)|2(?:2[0-5]|7\\\\d)|3(?:2[0-3]|7\\\\d)|4(?:2[013-9]|3[01]|7\\\\d)|5(?:2[0-7]|7\\\\d)|8(?:2[0-2]|7\\\\d)|9(?:20|7\\\\d))\\\\d{5}\", \"\\\\d{7,9}\",,, \"302345678\"], [,, \"(?:2[034678]\\\\d|5(?:[047]\\\\d|5[3-6]|6[01]))\\\\d{6}\", \"\\\\d{9}\",,, \"231234567\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GH\", 233, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GI: [, [,, \"[2568]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2(?:00\\\\d|1(?:6[24-7]|9\\\\d)|2(?:00|2[2457]))\\\\d{4}\", \"\\\\d{8}\",,, \"20012345\"], [,, \"(?:5[46-8]|62)\\\\d{6}\", \"\\\\d{8}\",,, \"57123456\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"8[1-689]\\\\d{6}\", \"\\\\d{8}\",,, \"88123456\"], [,, \"87\\\\d{6}\", \"\\\\d{8}\",,, \"87123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GI\", 350, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GL: [, [,, \"[1-689]\\\\d{5}\", \"\\\\d{6}\"], [,, \"(?:19|3[1-6]|6[14689]|8[14-79]|9\\\\d)\\\\d{4}\", \"\\\\d{6}\",,, \"321000\"], [,, \"[245][2-9]\\\\d{4}\", \"\\\\d{6}\",,, \"221234\"], [,, \"80\\\\d{4}\", \"\\\\d{6}\",,, \"801234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"3[89]\\\\d{4}\", \"\\\\d{6}\",,, \"381234\"], \"GL\", 299, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GM: [, [,, \"[2-9]\\\\d{6}\", \"\\\\d{7}\"], [,, \"(?:4(?:[23]\\\\d{2}|4(?:1[024679]|[6-9]\\\\d))|5(?:54[0-7]|6(?:[67]\\\\d)|7(?:1[04]|2[035]|3[58]|48))|8\\\\d{3})\\\\d{3}\", \"\\\\d{7}\",,, \"5661234\"], [,, \"[23679]\\\\d{6}\", \"\\\\d{7}\",,, \"3012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GM\", 220, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GN: [, [,, \"[367]\\\\d{7,8}\", \"\\\\d{8,9}\"], [,, \"30(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])\\\\d{4}\", \"\\\\d{8}\",,, \"30241234\"], [,, \"6[02356]\\\\d{7}\", \"\\\\d{9}\",,, \"601123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"722\\\\d{6}\", \"\\\\d{9}\",,, \"722123456\"], \"GN\", 224, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"3\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GP: [, [,, \"[56]\\\\d{8}\", \"\\\\d{9}\"], [,, \"590(?:0[13468]|1[012]|2[0-68]|3[28]|4[0-8]|5[579]|6[0189]|70|8[0-689]|9\\\\d)\\\\d{4}\", \"\\\\d{9}\",,, \"590201234\"], [,, \"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\", \"\\\\d{9}\",,, \"690301234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GP\", 590, \"00\", \"0\",,, \"0\",,,, [[, \"([56]90)(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\",, \"0$1\"]],, [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GQ: [, [,, \"[23589]\\\\d{8}\", \"\\\\d{9}\"], [,, \"3(?:3(?:3\\\\d[7-9]|[0-24-9]\\\\d[46])|5\\\\d{2}[7-9])\\\\d{4}\", \"\\\\d{9}\",,, \"333091234\"], [,, \"(?:222|55[15])\\\\d{6}\", \"\\\\d{9}\",,, \"222123456\"], [,, \"80\\\\d[1-9]\\\\d{5}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"90\\\\d[1-9]\\\\d{5}\", \"\\\\d{9}\",,, \"900123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GQ\", 240, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GR: [, [,, \"[26-9]\\\\d{9}\", \"\\\\d{10}\"], [,, \"2(?:1\\\\d{2}|2(?:2[1-46-9]|3[1-8]|4[1-7]|5[1-4]|6[1-8]|7[1-5]|[89][1-9])|3(?:1\\\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\\\d|3[1245]|4[1-7]|5[13-9]|[269][1-6]|7[14]|8[1-5])|7(?:1\\\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\\\d|2[1-5]|[34][1-4]|9[1-57]))\\\\d{6}\", \"\\\\d{10}\",,, \"2123456789\"], [,, \"69\\\\d{8}\", \"\\\\d{10}\",,, \"6912345678\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"90[19]\\\\d{7}\", \"\\\\d{10}\",,, \"9091234567\"], [,, \"8(?:0[16]|12|25)\\\\d{7}\", \"\\\\d{10}\",,, \"8011234567\"], [,, \"70\\\\d{8}\", \"\\\\d{10}\",,, \"7012345678\"], [,, \"NA\", \"NA\"], \"GR\", 30, \"00\",,,,,,,, [[, \"([27]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[2-9]1|[689]\"]], [, \"(2\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"2[2-9][02-9]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GT: [, [,, \"[2-7]\\\\d{7}|1[89]\\\\d{9}\", \"\\\\d{8}(?:\\\\d{3})?\"], [,, \"[267][2-9]\\\\d{6}\", \"\\\\d{8}\",,, \"22456789\"], [,, \"[345]\\\\d{7}\", \"\\\\d{8}\",,, \"51234567\"], [,, \"18[01]\\\\d{8}\", \"\\\\d{11}\",,, \"18001112222\"], [,, \"19\\\\d{9}\", \"\\\\d{11}\",,, \"19001112222\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GT\", 502, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GU: [, [,, \"[5689]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:56|7[1-9]|8[236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[5-9])|7(?:[079]7|2[0167]|3[45]|8[789])|8(?:[2-5789]8|6[48])|9(?:2[29]|6[79]|7[179]|8[789]|9[78]))\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"6713001234\"], [,, \"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:56|7[1-9]|8[236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[5-9])|7(?:[079]7|2[0167]|3[45]|8[789])|8(?:[2-5789]8|6[48])|9(?:2[29]|6[79]|7[179]|8[789]|9[78]))\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"6713001234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"GU\", 1, \"011\", \"1\",,, \"1\",,, 1,,, [,, \"NA\", \"NA\"],, \"671\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GW: [, [,, \"(?:4(?:0\\\\d{5}|4\\\\d{7})|9\\\\d{8})\", \"\\\\d{7,9}\"], [,, \"443(?:2[0125]|3[1245]|4[12]|5[1-4]|70|9[1-467])\\\\d{4}\", \"\\\\d{7,9}\",,, \"443201234\"], [,, \"9(?:55\\\\d|6(?:6\\\\d|9[012])|77\\\\d)\\\\d{5}\", \"\\\\d{7,9}\",,, \"955012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"40\\\\d{5}\", \"\\\\d{7,9}\",,, \"4012345\"], \"GW\", 245, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"44|9[567]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    GY: [, [,, \"[2-4679]\\\\d{6}\", \"\\\\d{7}\"], [,, \"(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\\\d|7[0-24-79])|3(?:2[25-9]|3\\\\d)|4(?:4[0-24]|5[56])|77[1-57])\\\\d{4}\", \"\\\\d{7}\",,, \"2201234\"], [,, \"6\\\\d{6}\", \"\\\\d{7}\",,, \"6091234\"], [,, \"(?:289|862)\\\\d{4}\", \"\\\\d{7}\",,, \"2891234\"], [,, \"9008\\\\d{3}\", \"\\\\d{7}\",,, \"9008123\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"GY\", 592, \"001\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    HK: [, [,, \"[235-7]\\\\d{7}|8\\\\d{7,8}|9\\\\d{4,10}\", \"\\\\d{5,11}\"], [,, \"(?:[23]\\\\d|58)\\\\d{6}\", \"\\\\d{8}\",,, \"21234567\"], [,, \"(?:5[1-79]\\\\d|6\\\\d{2}|8[4-79]\\\\d|9(?:0[1-9]|[1-8]\\\\d))\\\\d{5}\", \"\\\\d{8}\",,, \"51234567\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"900(?:[0-24-9]\\\\d{7}|3\\\\d{1,4})\", \"\\\\d{5,11}\",,, \"90012345678\"], [,, \"NA\", \"NA\"], [,, \"8[1-3]\\\\d{6}\", \"\\\\d{8}\",,, \"81123456\"], [,, \"NA\", \"NA\"], \"HK\", 852, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[235-7]|[89](?:0[1-9]|[1-9])\"]], [, \"(800)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"800\"]], [, \"(900)(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"900\"]], [, \"(900)(\\\\d{2,5})\", \"$1 $2\", [\"900\"]]],, [,, \"7\\\\d{7}\", \"\\\\d{8}\",,, \"71234567\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    HN: [, [,, \"[237-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2(?:2(?:0[019]|1[1-36]|[23]\\\\d|4[056]|5[57]|7[01389]|8[0146-9]|9[012])|4(?:2[3-59]|3[13-689]|4[0-68]|5[1-35])|5(?:4[3-5]|5\\\\d|6[56]|74)|6(?:[056]\\\\d|3[04]|4[0-378]|[78][0-8]|9[01])|7(?:6[46-9]|7[02-9]|8[34])|8(?:79|8[0-35789]|9[1-57-9]))\\\\d{4}\", \"\\\\d{8}\",,, \"22123456\"], [,, \"[37-9]\\\\d{7}\", \"\\\\d{8}\",,, \"91234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"HN\", 504, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    HR: [, [,, \"[1-7]\\\\d{5,8}|[89]\\\\d{6,11}\", \"\\\\d{6,12}\"], [,, \"1\\\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\\\d{6,7}\", \"\\\\d{6,9}\",,, \"12345678\"], [,, \"9(?:[1-9]\\\\d{6,10}|01\\\\d{6,9})\", \"\\\\d{8,12}\",,, \"912345678\"], [,, \"80[01]\\\\d{4,7}\", \"\\\\d{7,10}\",,, \"8001234567\"], [,, \"6(?:[01459]\\\\d{4,7})\", \"\\\\d{6,9}\",,, \"611234\"], [,, \"NA\", \"NA\"], [,, \"7[45]\\\\d{4,7}\", \"\\\\d{6,9}\",,, \"741234567\"], [,, \"NA\", \"NA\"], \"HR\", 385, \"00\", \"0\",,, \"0\",,,, [[, \"(1)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(6[09])(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"6[09]\"], \"0$1\"], [, \"([67]2)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[67]2\"], \"0$1\"], [, \"([2-5]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-5]\"], \"0$1\"], [, \"(9\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(9\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(9\\\\d)(\\\\d{3,4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[0145]|7\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{3})\", \"$1 $2 $3\", [\"6[0145]|7\"], \"0$1\"], [, \"(80[01])(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [, \"(80[01])(\\\\d{3,4})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"[76]2\\\\d{6,7}\", \"\\\\d{8,9}\",,, \"62123456\"],,, [,, \"NA\", \"NA\"]],\n    HT: [, [,, \"[2-489]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2(?:[248]\\\\d|5[1-5]|94)\\\\d{5}\", \"\\\\d{8}\",,, \"22453300\"], [,, \"(?:3[1-9]\\\\d|4\\\\d{2}|9(?:8[0-35]|9[5-9]))\\\\d{5}\", \"\\\\d{8}\",,, \"34101234\"], [,, \"8\\\\d{7}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"98[89]\\\\d{5}\", \"\\\\d{8}\",,, \"98901234\"], \"HT\", 509, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    HU: [, [,, \"[1-9]\\\\d{7,8}\", \"\\\\d{6,9}\"], [,, \"(?:1\\\\d|2(?:1\\\\d|[2-9])|3(?:[2-7]|8\\\\d)|4[24-9]|5[2-79]|6[23689]|7(?:1\\\\d|[2-9])|8[2-57-9]|9[2-69])\\\\d{6}\", \"\\\\d{6,9}\",,, \"12345678\"], [,, \"(?:[257]0|3[01])\\\\d{7}\", \"\\\\d{9}\",,, \"201234567\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"9[01]\\\\d{6}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"40\\\\d{6}\", \"\\\\d{8}\",,, \"40123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"HU\", 36, \"00\", \"06\",,, \"06\",,,, [[, \"(1)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"($1)\"]],, [,, \"NA\", \"NA\"],,, [,, \"[48]0\\\\d{6}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    ID: [, [,, \"(?:[1-79]\\\\d{6,10}|8\\\\d{7,11})\", \"\\\\d{5,12}\"], [,, \"2(?:1(?:14\\\\d{3}|[0-8]\\\\d{6,7}|500\\\\d{3}|9\\\\d{6})|2\\\\d{6,8}|4\\\\d{7,8})|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:19?|[25]\\\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\\\d{5,8}\", \"\\\\d{5,11}\",,, \"612345678\"], [,, \"(?:2(?:1(?:3[145]|4[01]|5[1-469]|60|8[0359]|9\\\\d)|2(?:88|9[1256])|3[1-4]9|4(?:36|91)|5(?:1[349]|[2-4]9)|6[0-7]9|7(?:[1-36]9|4[39])|8[1-5]9|9[1-48]9)|3(?:19[1-3]|2[12]9|3[13]9|4(?:1[69]|39)|5[14]9|6(?:1[69]|2[89])|709)|4[13]19|5(?:1(?:19|8[39])|4[129]9|6[12]9)|6(?:19[12]|2(?:[23]9|77))|7(?:1[13]9|2[15]9|419|5(?:1[89]|29)|6[15]9|7[178]9))\\\\d{5,6}|8[1-35-9]\\\\d{7,10}\", \"\\\\d{9,12}\",,, \"812345678\"], [,, \"177\\\\d{6,8}|800\\\\d{5,7}\", \"\\\\d{8,11}\",,, \"8001234567\"], [,, \"809\\\\d{7}\", \"\\\\d{10}\",,, \"8091234567\"], [,, \"804\\\\d{7}\", \"\\\\d{10}\",,, \"8041234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"ID\", 62, \"0(?:0[1789]|10(?:00|1[67]))\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{5,8})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[4579]|2[035-9]|[36][02-9]\"], \"(0$1)\"], [, \"(8\\\\d{2})(\\\\d{3,4})(\\\\d{3,5})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [, \"(1)(500)(\\\\d{3})\", \"$1 $2 $3\", [\"15\"], \"$1\"], [, \"(177)(\\\\d{6,8})\", \"$1 $2\", [\"17\"], \"0$1\"], [, \"(800)(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(804)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [, \"(80\\\\d)(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80[79]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"8071\\\\d{6}\", \"\\\\d{10}\",,, \"8071123456\"], [,, \"1500\\\\d{3}|8071\\\\d{6}\", \"\\\\d{7,10}\",,, \"8071123456\"],,, [,, \"NA\", \"NA\"]],\n    IE: [, [,, \"[124-9]\\\\d{6,9}\", \"\\\\d{5,10}\"], [,, \"1\\\\d{7,8}|2(?:1\\\\d{6,7}|3\\\\d{7}|[24-9]\\\\d{5})|4(?:0[24]\\\\d{5}|[1-469]\\\\d{7}|5\\\\d{6}|7\\\\d{5}|8[0-46-9]\\\\d{7})|5(?:0[45]\\\\d{5}|1\\\\d{6}|[23679]\\\\d{7}|8\\\\d{5})|6(?:1\\\\d{6}|[237-9]\\\\d{5}|[4-6]\\\\d{7})|7[14]\\\\d{7}|9(?:1\\\\d{6}|[04]\\\\d{7}|[35-9]\\\\d{5})\", \"\\\\d{5,10}\",,, \"2212345\"], [,, \"8(?:22\\\\d{6}|[35-9]\\\\d{7})\", \"\\\\d{9}\",,, \"850123456\"], [,, \"1800\\\\d{6}\", \"\\\\d{10}\",,, \"1800123456\"], [,, \"15(?:1[2-8]|[2-8]0|9[089])\\\\d{6}\", \"\\\\d{10}\",,, \"1520123456\"], [,, \"18[59]0\\\\d{6}\", \"\\\\d{10}\",,, \"1850123456\"], [,, \"700\\\\d{6}\", \"\\\\d{9}\",,, \"700123456\"], [,, \"76\\\\d{7}\", \"\\\\d{9}\",,, \"761234567\"], \"IE\", 353, \"00\", \"0\",,, \"0\",,,, [[, \"(1)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"40[24]|50[45]\"], \"(0$1)\"], [, \"(48)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"48\"], \"(0$1)\"], [, \"(818)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"81\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[24-69]|7[14]\"], \"(0$1)\"], [, \"([78]\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"76|8[35-9]\"], \"0$1\"], [, \"(700)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:8[059]|5)\", \"1(?:8[059]0|5)\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"18[59]0\\\\d{6}\", \"\\\\d{10}\",,, \"1850123456\"], [,, \"818\\\\d{6}\", \"\\\\d{9}\",,, \"818123456\"],,, [,, \"8[35-9]\\\\d{8}\", \"\\\\d{10}\",,, \"8501234567\"]],\n    IL: [, [,, \"[17]\\\\d{6,9}|[2-589]\\\\d{3}(?:\\\\d{3,6})?|6\\\\d{3}\", \"\\\\d{4,10}\"], [,, \"[2-489]\\\\d{7}\", \"\\\\d{7,8}\",,, \"21234567\"], [,, \"5(?:[02-47-9]\\\\d{2}|5(?:01|2[23]|3[2-4]|4[45]|5[5689]|6[67]|7[0178]|8[6-9]|9[5-9])|6[2-9]\\\\d)\\\\d{5}\", \"\\\\d{9}\",,, \"501234567\"], [,, \"1(?:80[019]\\\\d{3}|255)\\\\d{3}\", \"\\\\d{7,10}\",,, \"1800123456\"], [,, \"1(?:212|(?:9(?:0[01]|19)|200)\\\\d{2})\\\\d{4}\", \"\\\\d{8,10}\",,, \"1919123456\"], [,, \"1700\\\\d{6}\", \"\\\\d{10}\",,, \"1700123456\"], [,, \"NA\", \"NA\"], [,, \"7(?:18\\\\d|2[23]\\\\d|3[237]\\\\d|47\\\\d|6(?:5\\\\d|8[0168])|7\\\\d{2}|8(?:2\\\\d|33|55|77|81)|9[29]\\\\d)\\\\d{5}\", \"\\\\d{9}\",,, \"771234567\"], \"IL\", 972, \"0(?:0|1[2-9])\", \"0\",,, \"0\",,,, [[, \"([2-489])(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [, \"([57]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [, \"(1)([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"], \"$1\"], [, \"(1255)(\\\\d{3})\", \"$1-$2\", [\"125\"], \"$1\"], [, \"(1200)(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"120\"], \"$1\"], [, \"(1212)(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\"], \"$1\"], [, \"(1599)(\\\\d{6})\", \"$1-$2\", [\"15\"], \"$1\"], [, \"(\\\\d{4})\", \"*$1\", [\"[2-689]\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"1700\\\\d{6}|[2-689]\\\\d{3}\", \"\\\\d{4,10}\",,, \"1700123456\"], [,, \"[2-689]\\\\d{3}|1599\\\\d{6}\", \"\\\\d{4}(?:\\\\d{6})?\",,, \"1599123456\"],,, [,, \"NA\", \"NA\"]],\n    IM: [, [,, \"[135789]\\\\d{6,9}\", \"\\\\d{6,10}\"], [,, \"1624\\\\d{6}\", \"\\\\d{6,10}\",,, \"1624456789\"], [,, \"7[569]24\\\\d{6}\", \"\\\\d{10}\",,, \"7924123456\"], [,, \"808162\\\\d{4}\", \"\\\\d{10}\",,, \"8081624567\"], [,, \"(?:872299|90[0167]624)\\\\d{4}\", \"\\\\d{10}\",,, \"9016247890\"], [,, \"8(?:4(?:40[49]06|5624\\\\d)|70624\\\\d)\\\\d{3}\", \"\\\\d{10}\",,, \"8456247890\"], [,, \"70\\\\d{8}\", \"\\\\d{10}\",,, \"7012345678\"], [,, \"56\\\\d{8}\", \"\\\\d{10}\",,, \"5612345678\"], \"IM\", 44, \"00\", \"0\", \" x\",, \"0\",,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"3(?:08162\\\\d|3\\\\d{5}|4(?:40[49]06|5624\\\\d)|7(?:0624\\\\d|2299\\\\d))\\\\d{3}|55\\\\d{8}\", \"\\\\d{10}\",,, \"5512345678\"],,, [,, \"NA\", \"NA\"]],\n    IN: [, [,, \"1\\\\d{7,12}|[2-9]\\\\d{9,10}\", \"\\\\d{6,13}\"], [,, \"(?:11|2[02]|33|4[04]|79)[2-7]\\\\d{7}|80[2-467]\\\\d{7}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|[36][25]|22|4[28]|5[12]|[78]1|9[15])|6(?:12|[2345]1|57|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\\\d{6}|(?:(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[13-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1-5]|4[25-8]|5[125689]|6[235-7]|7[157-9]|8[2-467])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|[57][2-689]|6[24-578]|8[1-6])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\\\d|7(?:(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|9\\\\d)\\\\d|8(?:2[0-6]|[013-8]\\\\d)))[2-7]\\\\d{5}\", \"\\\\d{6,10}\",,, \"1123456789\"], [,, \"(?:7(?:0\\\\d{3}|2(?:[0235679]\\\\d|[14][017-9]|8[0-59]|9[389])\\\\d|3(?:[05-8]\\\\d{2}|1(?:[089]\\\\d|7[5-8])|2(?:[5-8]\\\\d|[01][089])|3[17-9]\\\\d|4[789]\\\\d|9[01689]\\\\d)|4(?:0[1-9]\\\\d|1(?:[015-9]\\\\d|4[08])|[29][89]\\\\d|39\\\\d|8[389]\\\\d)|5(?:[034678]\\\\d|2[03-9]|5[017-9]|9[7-9])\\\\d|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589]|[6-9]\\\\d)\\\\d|7(?:0[2-9]|[1-79]\\\\d|8[1-9])\\\\d|8[0-79]\\\\d{2}|99[4-9]\\\\d)|8(?:0(?:[01589]\\\\d|6[67])|1(?:[02-57-9]\\\\d|1[0135-9])|2(?:[236-9]\\\\d|5[1-9])|3(?:[0357-9]\\\\d|4[1-9])|[45]\\\\d{2}|6[02457-9]\\\\d|7(?:07|[1-69]\\\\d)|8(?:[0-26-9]\\\\d|44|5[2-9])|9(?:[035-9]\\\\d|2[2-9]|4[0-8]))\\\\d|9\\\\d{4})\\\\d{5}\", \"\\\\d{10}\",,, \"9123456789\"], [,, \"1(?:600\\\\d{6}|80(?:0\\\\d{4,9}|3\\\\d{9}))\", \"\\\\d{8,13}\",,, \"1800123456\"], [,, \"186[12]\\\\d{9}\", \"\\\\d{13}\",,, \"1861123456789\"], [,, \"1860\\\\d{7}\", \"\\\\d{11}\",,, \"18603451234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"IN\", 91, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"7(?:[02357]|4[0-389]|6[0-35-9]|8[0-79]|99)|8(?:0[015689]|1[0-57-9]|2[2356-9]|3[0-57-9]|[45]|6[02457-9]|7[01-69]|8[0-24-9]|9[02-9])|9\", \"7(?:0|2(?:[0235679]|[14][017-9]|8[0-59]|9[389])|3(?:[05-8]|1[07-9]|2[015-8]|3[17-9]|4[789]|9[01689])|4(?:0[1-9]|1[014-9]|[29][89]|39|8[389])|5(?:[034678]|2[03-9]|5[017-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589]|[6-9])|7(?:0[2-9]|[1-79]|8[1-9])|8[0-79]|99[4-9])|8(?:0(?:[01589]|6[67])|1(?:[02-57-9]|1[0135-9])|2(?:[236-9]|5[1-9])|3(?:[0357-9]|4[1-9])|[45]|6[02457-9]|7(?:07|[1-69])|8(?:[0-26-9]|44|5[2-9])|9(?:[035-9]|2[2-9]|4[0-8]))|9\", \"7(?:0|2(?:[0235679]|[14][017-9]|8[0-59]|9[389])|3(?:[05-8]|1(?:[089]|7[5-9])|2(?:[5-8]|[01][089])|3[17-9]|4[789]|9[01689])|4(?:0[1-9]|1(?:[015-9]|4[08])|[29][89]|39|8[389])|5(?:[034678]|2[03-9]|5[017-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589]|[6-9])|7(?:0[2-9]|[1-79]|8[1-9])|8[0-79]|99[4-9])|8(?:0(?:[01589]|6[67])|1(?:[02-57-9]|1[0135-9])|2(?:[236-9]|5[1-9])|3(?:[0357-9]|4[1-9])|[45]|6[02457-9]|7(?:07|[1-69])|8(?:[0-26-9]|44|5[2-9])|9(?:[035-9]|2[2-9]|4[0-8]))|9\"], \"0$1\",, 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79|80[2-46]\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[569][14]|7[1257]|8[1346]|[68][1-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|[36][25]|22|4[28]|5[12]|[78]1|9[15])|6(?:12|[2345]1|57|6[13]|7[14]|80)\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)\", \"7(?:12|2[14]|3[134]|4[47]|5(?:1|5[2-6])|[67]1|88)\"], \"0$1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)\"], \"0$1\",, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[23579]|[468][1-9])|[2-8]\"], \"0$1\",, 1], [, \"(1600)(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"160\", \"1600\"], \"$1\",, 1], [, \"(1800)(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"], \"$1\",, 1], [, \"(18[06]0)(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"18[06]\", \"18[06]0\"], \"$1\",, 1], [, \"(140)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"], \"$1\",, 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18[06]\", \"18(?:0[03]|6[12])\"], \"$1\",, 1]],, [,, \"NA\", \"NA\"],,, [,, \"1(?:600\\\\d{6}|8(?:0(?:0\\\\d{4,9}|3\\\\d{9})|6(?:0\\\\d{7}|[12]\\\\d{9})))\", \"\\\\d{8,13}\",,, \"1800123456\"], [,, \"140\\\\d{7}\", \"\\\\d{10}\",,, \"1409305260\"],,, [,, \"NA\", \"NA\"]],\n    IO: [, [,, \"3\\\\d{6}\", \"\\\\d{7}\"], [,, \"37\\\\d{5}\", \"\\\\d{7}\",,, \"3709100\"], [,, \"38\\\\d{5}\", \"\\\\d{7}\",,, \"3801234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"IO\", 246, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    IQ: [, [,, \"[1-7]\\\\d{7,9}\", \"\\\\d{6,10}\"], [,, \"1\\\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\\\d{6,7}\", \"\\\\d{6,9}\",,, \"12345678\"], [,, \"7[3-9]\\\\d{8}\", \"\\\\d{10}\",,, \"7912345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"IQ\", 964, \"00\", \"0\",,, \"0\",,,, [[, \"(1)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"([2-6]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [, \"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    IR: [, [,, \"[1-8]\\\\d{9}|9(?:[0-4]\\\\d{8}|9\\\\d{2,8})\", \"\\\\d{4,10}\"], [,, \"(?:1[137]|2[13-68]|3[1458]|4[145]|5[146-8]|6[146]|7[1467]|8[13467])\\\\d{8}\", \"\\\\d{10}\",,, \"2123456789\"], [,, \"9(?:0[1-3]|[13]\\\\d|2[0-2]|90)\\\\d{7}\", \"\\\\d{10}\",,, \"9123456789\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"(?:[2-6]0\\\\d|993)\\\\d{7}\", \"\\\\d{10}\",,, \"9932123456\"], \"IR\", 98, \"00\", \"0\",,, \"0\",,,, [[, \"(21)(\\\\d{3,5})\", \"$1 $2\", [\"21\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"9\"], \"0$1\"]],, [,, \"943\\\\d{7}\", \"\\\\d{10}\",,, \"9432123456\"],,, [,, \"NA\", \"NA\"], [,, \"9990\\\\d{0,6}\", \"\\\\d{4,10}\",,, \"9990123456\"],,, [,, \"NA\", \"NA\"]],\n    IS: [, [,, \"[4-9]\\\\d{6}|38\\\\d{7}\", \"\\\\d{7,9}\"], [,, \"(?:4(?:1[0-24-6]|2[0-7]|[37][0-8]|4[0-245]|5[0-68]|6\\\\d|8[0-36-8])|5(?:05|[156]\\\\d|2[02578]|3[013-79]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|87[23])\\\\d{4}\", \"\\\\d{7}\",,, \"4101234\"], [,, \"38[589]\\\\d{6}|(?:6(?:1[1-8]|2[056]|3[089]|4[0167]|5[0159]|[67][0-69]|9\\\\d)|7(?:5[057]|6[0-2]|[78]\\\\d)|8(?:2[0-59]|3[0-4]|[469]\\\\d|5[1-9]))\\\\d{4}\", \"\\\\d{7,9}\",,, \"6111234\"], [,, \"800\\\\d{4}\", \"\\\\d{7}\",,, \"8001234\"], [,, \"90\\\\d{5}\", \"\\\\d{7}\",,, \"9011234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"49\\\\d{5}\", \"\\\\d{7}\",,, \"4921234\"], \"IS\", 354, \"1(?:0(?:01|10|20)|100)|00\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [, \"(3\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"809\\\\d{4}\", \"\\\\d{7}\",,, \"8091234\"],,, [,, \"(?:6(?:2[1-478]|49|8\\\\d)|8(?:7[0189]|80)|95[48])\\\\d{4}\", \"\\\\d{7}\",,, \"6211234\"]],\n    IT: [, [,, \"[01589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9})\", \"\\\\d{6,11}\"], [,, \"0(?:[26]\\\\d{4,9}|(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7})\", \"\\\\d{6,11}\",,, \"0212345678\"], [,, \"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\", \"\\\\d{9,11}\",,, \"3123456789\"], [,, \"80(?:0\\\\d{6}|3\\\\d{3})\", \"\\\\d{6,9}\",,, \"800123456\"], [,, \"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\", \"\\\\d{6,10}\",,, \"899123456\"], [,, \"84(?:[08]\\\\d{6}|[17]\\\\d{3})\", \"\\\\d{6,9}\",,, \"848123456\"], [,, \"1(?:78\\\\d|99)\\\\d{6}\", \"\\\\d{9,10}\",,, \"1781234567\"], [,, \"55\\\\d{8}\", \"\\\\d{10}\",,, \"5512345678\"], \"IT\", 39, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|55\"]], [, \"(0[26])(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [, \"(0[26])(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [, \"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]\"]], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"]], [, \"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][2-46-8]\"]], [, \"(0\\\\d{3})(\\\\d{2,6})\", \"$1 $2\", [\"0[13-57-9][2-46-8]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[13]|8(?:00|4[08]|9[59])\", \"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\", \"894[5-9]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3\"]]],, [,, \"NA\", \"NA\"], 1,, [,, \"848\\\\d{6}\", \"\\\\d{9}\",,, \"848123456\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    JE: [, [,, \"[135789]\\\\d{6,9}\", \"\\\\d{6,10}\"], [,, \"1534\\\\d{6}\", \"\\\\d{6,10}\",,, \"1534456789\"], [,, \"7(?:509|7(?:00|97)|829|937)\\\\d{6}\", \"\\\\d{10}\",,, \"7797123456\"], [,, \"80(?:07(?:35|81)|8901)\\\\d{4}\", \"\\\\d{10}\",,, \"8007354567\"], [,, \"(?:871206|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\", \"\\\\d{10}\",,, \"9018105678\"], [,, \"8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|70002)\\\\d{4}\", \"\\\\d{10}\",,, \"8447034567\"], [,, \"701511\\\\d{4}\", \"\\\\d{10}\",,, \"7015115678\"], [,, \"56\\\\d{8}\", \"\\\\d{10}\",,, \"5612345678\"], \"JE\", 44, \"00\", \"0\", \" x\",, \"0\",,,,,, [,, \"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\", \"\\\\d{10}\",,, \"7640123456\"],,, [,, \"NA\", \"NA\"], [,, \"3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\\\d{4}|55\\\\d{8}\", \"\\\\d{10}\",,, \"5512345678\"],,, [,, \"NA\", \"NA\"]],\n    JM: [, [,, \"[589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"876(?:5(?:0[12]|1[0-468]|2[35]|63)|6(?:0[1-3579]|1[027-9]|[23]\\\\d|40|5[06]|6[2-589]|7[05]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\\\d|9[2-468]))\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"8765123456\"], [,, \"876(?:2[16-9]\\\\d|[348]\\\\d{2}|5(?:0[3-9]|27|6[0-24-9]|[3-578]\\\\d)|7(?:0[07]|7\\\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579]))\\\\d{4}\", \"\\\\d{10}\",,, \"8762101234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"JM\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"876\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    JO: [, [,, \"[235-9]\\\\d{7,8}\", \"\\\\d{8,9}\"], [,, \"(?:2(?:6(?:2[0-35-9]|3[0-57-8]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\\\d|4[0-3]|[57][023]|6[03])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2[50]0|3(?:00|33)|4(?:0[0125]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[17-8]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[02-39]))|87(?:[02]0|7[08]|90))\\\\d{4}\", \"\\\\d{8}\",,, \"62001234\"], [,, \"7(?:55|7[025-9]|8[015-9]|9[0-25-9])\\\\d{6}\", \"\\\\d{9}\",,, \"790123456\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"900\\\\d{5}\", \"\\\\d{8}\",,, \"90012345\"], [,, \"85\\\\d{6}\", \"\\\\d{8}\",,, \"85012345\"], [,, \"70\\\\d{7}\", \"\\\\d{9}\",,, \"700123456\"], [,, \"NA\", \"NA\"], \"JO\", 962, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [, \"(7)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7[457-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"70|8[0158]|9\"], \"0$1\"]],, [,, \"74(?:66|77)\\\\d{5}\", \"\\\\d{9}\",,, \"746612345\"],,, [,, \"NA\", \"NA\"], [,, \"8(?:10|8\\\\d)\\\\d{5}\", \"\\\\d{8}\",,, \"88101234\"],,, [,, \"NA\", \"NA\"]],\n    JP: [, [,, \"[1-9]\\\\d{8,9}|00(?:[36]\\\\d{7,14}|7\\\\d{5,7}|8\\\\d{7})\", \"\\\\d{8,17}\"], [,, \"(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|2[2-9]\\\\d|[36][1-9]\\\\d|4(?:6[02-8]|[2-578]\\\\d|9[2-59])|5(?:6[1-9]|7[2-8]|[2-589]\\\\d)|7(?:3[4-9]|4[02-9]|[25-9]\\\\d)|8(?:3[2-9]|4[5-9]|5[1-9]|8[03-9]|[2679]\\\\d)|9(?:[679][1-9]|[2-58]\\\\d))\\\\d{6}\", \"\\\\d{9}\",,, \"312345678\"], [,, \"[7-9]0[1-9]\\\\d{7}\", \"\\\\d{10}\",,, \"9012345678\"], [,, \"120\\\\d{6}|800\\\\d{7}|00(?:37\\\\d{6,13}|66\\\\d{6,13}|777(?:[01]\\\\d{2}|5\\\\d{3}|8\\\\d{4})|882[1245]\\\\d{4})\", \"\\\\d{8,17}\",,, \"120123456\"], [,, \"990\\\\d{6}\", \"\\\\d{9}\",,, \"990123456\"], [,, \"NA\", \"NA\"], [,, \"60\\\\d{7}\", \"\\\\d{9}\",,, \"601234567\"], [,, \"50[1-9]\\\\d{7}\", \"\\\\d{10}\",,, \"5012345678\"], \"JP\", 81, \"010\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"0077\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3,4})\", \"$1-$2-$3\", [\"0077\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"0088\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2-$3\", [\"00(?:37|66)\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"00(?:37|66)\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{5})(\\\\d{5,6})\", \"$1-$2-$3\", [\"00(?:37|66)\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{6})(\\\\d{6,7})\", \"$1-$2-$3\", [\"00(?:37|66)\"], \"$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[2579]0|80[1-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|5(?:76|97)|499|746|8(?:3[89]|63|47|51)|9(?:49|80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:76|97)9|499[2468]|7468|8(?:3(?:8[78]|96)|636|477|51[24])|9(?:496|802|9(?:1[23]|69))\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:769|979[2-69])|499[2468]|7468|8(?:3(?:8[78]|96[2457-9])|636[2-57-9]|477|51[24])|9(?:496|802|9(?:1[23]|69))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])\", \"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:7[2-6]|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|[4-7]))\", \"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6[56]))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\", \"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6(?:5[25]|60)))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5(?:[2-589]|39)|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93)\", \"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93[34])\", \"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93(?:31|4))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"2(?:9[14-79]|74|[34]7|[56]9)|82|993\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"3|4(?:2[09]|7[01])|6[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2479][1-9]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[2579]0|80[1-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|5(?:76|97)|499|746|8(?:3[89]|63|47|51)|9(?:49|80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:76|97)9|499[2468]|7468|8(?:3(?:8[78]|96)|636|477|51[24])|9(?:496|802|9(?:1[23]|69))\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:769|979[2-69])|499[2468]|7468|8(?:3(?:8[78]|96[2457-9])|636[2-57-9]|477|51[24])|9(?:496|802|9(?:1[23]|69))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])\", \"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:7[2-6]|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|[4-7]))\", \"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6[56]))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\", \"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6(?:5[25]|60)))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5(?:[2-589]|39)|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93)\", \"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93[34])\", \"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93(?:31|4))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"2(?:9[14-79]|74|[34]7|[56]9)|82|993\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"3|4(?:2[09]|7[01])|6[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2479][1-9]\"], \"0$1\"]], [,, \"20\\\\d{8}\", \"\\\\d{10}\",,, \"2012345678\"],,, [,, \"00(?:37\\\\d{6,13}|66\\\\d{6,13}|777(?:[01]\\\\d{2}|5\\\\d{3}|8\\\\d{4})|882[1245]\\\\d{4})\", \"\\\\d{8,17}\",,, \"00777012\"], [,, \"570\\\\d{6}\", \"\\\\d{9}\",,, \"570123456\"], 1,, [,, \"NA\", \"NA\"]],\n    KE: [, [,, \"20\\\\d{6,7}|[4-9]\\\\d{6,9}\", \"\\\\d{7,10}\"], [,, \"20\\\\d{6,7}|4(?:[0136]\\\\d{7}|[245]\\\\d{5,7})|5(?:[08]\\\\d{7}|[1-79]\\\\d{5,7})|6(?:[01457-9]\\\\d{5,7}|[26]\\\\d{7})\", \"\\\\d{7,9}\",,, \"202012345\"], [,, \"7(?:[0-36]\\\\d|5[0-6]|[79][0-7]|8[0-25-9])\\\\d{6}\", \"\\\\d{9}\",,, \"712123456\"], [,, \"800[24-8]\\\\d{5,6}\", \"\\\\d{9,10}\",,, \"800223456\"], [,, \"900[02-9]\\\\d{5}\", \"\\\\d{9}\",,, \"900223456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"KE\", 254, \"000\", \"0\",,, \"005|0\",,,, [[, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"[24-6]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KG: [, [,, \"[235-8]\\\\d{8,9}\", \"\\\\d{5,10}\"], [,, \"(?:3(?:1(?:[256]\\\\d|3[1-9]|47)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\\\d)|5(?:22|3[4-7]|59|6\\\\d)|6(?:22|5[35-7]|6\\\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\\\d)|9(?:22|4[1-8]|6\\\\d))|6(?:09|12|2[2-4])\\\\d)\\\\d{5}\", \"\\\\d{5,10}\",,, \"312123456\"], [,, \"(?:20[0-35]|5[124-7]\\\\d|7[07]\\\\d)\\\\d{6}\", \"\\\\d{9}\",,, \"700123456\"], [,, \"800\\\\d{6,7}\", \"\\\\d{9,10}\",,, \"800123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"KG\", 996, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]|31[25]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[36]|[2-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KH: [, [,, \"[1-9]\\\\d{7,9}\", \"\\\\d{6,10}\"], [,, \"(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:[237-9]|4[56]|5\\\\d|6\\\\d?)\\\\d{5}|23(?:4[234]|8\\\\d{2})\\\\d{4}\", \"\\\\d{6,9}\",,, \"23756789\"], [,, \"(?:1(?:[013-79]\\\\d|[28]\\\\d{1,2})|2[3-6]48|3(?:[18]\\\\d{2}|[2-6]48)|4[2-4]48|5[2-5]48|6(?:[016-9]\\\\d|[2-5]48)|7(?:[07-9]\\\\d|[16]\\\\d{2}|[2-5]48)|8(?:[013-79]\\\\d|8\\\\d{2})|9(?:6\\\\d{2}|7\\\\d{1,2}|[0-589]\\\\d))\\\\d{5}\", \"\\\\d{8,9}\",,, \"91234567\"], [,, \"1800(?:1\\\\d|2[019])\\\\d{4}\", \"\\\\d{10}\",,, \"1800123456\"], [,, \"1900(?:1\\\\d|2[09])\\\\d{4}\", \"\\\\d{10}\",,, \"1900123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"KH\", 855, \"00[14-9]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\\\\d[1-9]|[2-9]\"], \"0$1\"], [, \"(1[89]00)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[89]0\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KI: [, [,, \"[2458]\\\\d{4}|3\\\\d{4,7}|7\\\\d{7}\", \"\\\\d{5,8}\"], [,, \"(?:[24]\\\\d|3[1-9]|50|8[0-5])\\\\d{3}\", \"\\\\d{5}\",,, \"31234\"], [,, \"7\\\\d{7}\", \"\\\\d{8}\",,, \"72012345\"], [,, \"NA\", \"NA\"], [,, \"3001\\\\d{4}\", \"\\\\d{5,8}\",,, \"30010000\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"KI\", 686, \"00\",,,, \"0\",,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KM: [, [,, \"[379]\\\\d{6}\", \"\\\\d{7}\"], [,, \"7(?:6[0-37-9]|7[0-57-9])\\\\d{4}\", \"\\\\d{7}\",,, \"7712345\"], [,, \"3[234]\\\\d{5}\", \"\\\\d{7}\",,, \"3212345\"], [,, \"NA\", \"NA\"], [,, \"(?:39[01]|9[01]0)\\\\d{4}\", \"\\\\d{7}\",,, \"9001234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"KM\", 269, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KN: [, [,, \"[589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"869(?:2(?:29|36)|302|4(?:6[015-9]|70))\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"8692361234\"], [,, \"869(?:5(?:5[6-8]|6[5-7])|66\\\\d|76[02-6])\\\\d{4}\", \"\\\\d{10}\",,, \"8697652917\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"KN\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"869\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KP: [, [,, \"1\\\\d{9}|[28]\\\\d{7}\", \"\\\\d{6,8}|\\\\d{10}\"], [,, \"2\\\\d{7}|85\\\\d{6}\", \"\\\\d{6,8}\",,, \"21234567\"], [,, \"19[123]\\\\d{7}\", \"\\\\d{10}\",,, \"1921234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"KP\", 850, \"00|99\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"2(?:[0-24-9]\\\\d{2}|3(?:[0-79]\\\\d|8[02-9]))\\\\d{4}\", \"\\\\d{8}\",,, \"23821234\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KR: [, [,, \"[1-7]\\\\d{3,9}|8\\\\d{8}\", \"\\\\d{4,10}\"], [,, \"(?:2|3[1-3]|[46][1-4]|5[1-5])(?:1\\\\d{2,3}|[1-9]\\\\d{6,7})\", \"\\\\d{4,10}\",,, \"22123456\"], [,, \"1[0-26-9]\\\\d{7,8}\", \"\\\\d{9,10}\",,, \"1000000000\"], [,, \"80\\\\d{7}\", \"\\\\d{9}\",,, \"801234567\"], [,, \"60[2-9]\\\\d{6}\", \"\\\\d{9}\",,, \"602345678\"], [,, \"NA\", \"NA\"], [,, \"50\\\\d{8}\", \"\\\\d{10}\",,, \"5012345678\"], [,, \"70\\\\d{8}\", \"\\\\d{10}\",,, \"7012345678\"], \"KR\", 82, \"00(?:[124-68]|[37]\\\\d{2})\", \"0\",,, \"0(8[1-46-8]|85\\\\d{2})?\",,,, [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:0|1[19]|[69]9|5[458])|[57]0\", \"1(?:0|1[19]|[69]9|5(?:44|59|8))|[57]0\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:[01]|5[1-4]|6[2-8]|[7-9])|[68]0|[3-6][1-9][1-9]\", \"1(?:[01]|5(?:[1-3]|4[56])|6[2-8]|[7-9])|[68]0|[3-6][1-9][1-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"131\", \"1312\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"131\", \"131[13-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"13[2-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"30\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2[1-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d)(\\\\d{3,4})\", \"$1-$2\", [\"21[0-46-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"[3-6][1-9]1\", \"[3-6][1-9]1(?:[0-46-9])\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1(?:5[46-9]|6[04678]|8[0579])\", \"1(?:5(?:44|66|77|88|99)|6(?:00|44|6[16]|70|88)|8(?:00|55|77|99))\"], \"$1\", \"0$CC-$1\"]],, [,, \"15\\\\d{7,8}\", \"\\\\d{9,10}\",,, \"1523456789\"],,, [,, \"NA\", \"NA\"], [,, \"1(?:5(?:44|66|77|88|99)|6(?:00|44|6[16]|70|88)|8(?:00|55|77|99))\\\\d{4}\", \"\\\\d{8}\",,, \"15441234\"],,, [,, \"NA\", \"NA\"]],\n    KW: [, [,, \"[12569]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"(?:18\\\\d|2(?:[23]\\\\d{2}|4(?:[1-35-9]\\\\d|44)|5(?:0[034]|[2-46]\\\\d|5[1-3]|7[1-7])))\\\\d{4}\", \"\\\\d{7,8}\",,, \"22345678\"], [,, \"(?:5(?:[05]\\\\d{2}|1[0-7]\\\\d|2(?:22|5[25]))|6(?:0[034679]\\\\d|5[015-9]\\\\d|6\\\\d{2}|7[067]\\\\d|9[0369]\\\\d)|9(?:0[09]\\\\d|22\\\\d|4[01479]\\\\d|55\\\\d|6[0679]\\\\d|[79]\\\\d{2}|8[057-9]\\\\d))\\\\d{4}\", \"\\\\d{8}\",,, \"50012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"KW\", 965, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[16]|2(?:[0-35-9]|4[0-35-9])|9[024-9]|52[25]\"]], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"244|5[015]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KY: [, [,, \"[3589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"345(?:2(?:22|44)|444|6(?:23|38|40)|7(?:4[35-79]|6[6-9]|77)|8(?:00|1[45]|25|[48]8)|9(?:14|4[035-9]))\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"3452221234\"], [,, \"345(?:32[1-9]|5(?:1[67]|2[5-7]|4[6-8]|76)|9(?:1[67]|2[2-9]|3[689]))\\\\d{4}\", \"\\\\d{10}\",,, \"3453231234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}|345976\\\\d{4}\", \"\\\\d{10}\",,, \"9002345678\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"KY\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"345849\\\\d{4}\", \"\\\\d{10}\",,, \"3458491234\"],, \"345\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    KZ: [, [,, \"(?:33\\\\d|7\\\\d{2}|80[09])\\\\d{7}\", \"\\\\d{10}\"], [,, \"33622\\\\d{5}|7(?:1(?:0(?:[23]\\\\d|4[023]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[1-79]|4[0-35-9]|59)|4(?:2\\\\d|3[013-79]|4[0-8]|5[1-79])|5(?:2\\\\d|3[1-8]|4[1-7]|59)|6(?:[234]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[234]\\\\d|5[139])|4(?:2\\\\d|3[1235-9]|59)|5(?:[23]\\\\d|4[01246-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[237]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59)))\\\\d{5}\", \"\\\\d{10}\",,, \"7123456789\"], [,, \"7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\\\d{7}\", \"\\\\d{10}\",,, \"7710009998\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"809\\\\d{7}\", \"\\\\d{10}\",,, \"8091234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"751\\\\d{7}\", \"\\\\d{10}\",,, \"7511234567\"], \"KZ\", 7, \"810\", \"8\",,, \"8\",, \"8~10\",,,, [,, \"NA\", \"NA\"],,, [,, \"751\\\\d{7}\", \"\\\\d{10}\",,, \"7511234567\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LA: [, [,, \"[2-8]\\\\d{7,9}\", \"\\\\d{6,10}\"], [,, \"(?:2[13]|3(?:0\\\\d|[14])|[5-7][14]|41|8[1468])\\\\d{6}\", \"\\\\d{6,9}\",,, \"21212862\"], [,, \"20(?:2[2389]|5[4-689]|7[6-8]|9[15-9])\\\\d{6}\", \"\\\\d{10}\",,, \"2023123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"LA\", 856, \"00\", \"0\",,, \"0\",,,, [[, \"(20)(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"], \"0$1\"], [, \"([2-8]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [, \"(30)(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"30\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LB: [, [,, \"[13-9]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"(?:[14-6]\\\\d{2}|7(?:[2-57]\\\\d|62|8[0-7]|9[04-9])|8[02-9]\\\\d|9\\\\d{2})\\\\d{4}\", \"\\\\d{7}\",,, \"1123456\"], [,, \"(?:3\\\\d|7(?:[01]\\\\d|6[013-9]|8[89]|9[1-3])|81\\\\d)\\\\d{5}\", \"\\\\d{7,8}\",,, \"71123456\"], [,, \"NA\", \"NA\"], [,, \"9[01]\\\\d{6}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"LB\", 961, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[13-6]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]|9\"], \"0$1\"], [, \"([7-9]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89][01]|7(?:[01]|6[013-9]|8[89]|9[1-3])\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LC: [, [,, \"[5789]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"758(?:4(?:30|5[0-9]|6[2-9]|8[0-2])|57[0-2]|638)\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"7584305678\"], [,, \"758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2[0-8]))\\\\d{4}\", \"\\\\d{10}\",,, \"7582845678\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"LC\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"758\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LI: [, [,, \"6\\\\d{8}|[23789]\\\\d{6}\", \"\\\\d{7,9}\"], [,, \"(?:2(?:01|1[27]|3\\\\d|6[02-578]|96)|3(?:7[0135-7]|8[048]|9[0269]))\\\\d{4}\", \"\\\\d{7}\",,, \"2345678\"], [,, \"6(?:51[01]|6(?:0[0-6]|2[016-9]|39))\\\\d{5}|7(?:[37-9]\\\\d|42|56)\\\\d{4}\", \"\\\\d{7,9}\",,, \"660234567\"], [,, \"80(?:02[28]|9\\\\d{2})\\\\d{2}\", \"\\\\d{7}\",,, \"8002222\"], [,, \"90(?:02[258]|1(?:23|3[14])|66[136])\\\\d{2}\", \"\\\\d{7}\",,, \"9002222\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"LI\", 423, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[23789]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[56]\"]], [, \"(69)(7\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"697\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"870(?:28|87)\\\\d{2}\", \"\\\\d{7}\",,, \"8702812\"],,, [,, \"697(?:42|56|[7-9]\\\\d)\\\\d{4}\", \"\\\\d{9}\",,, \"697861234\"]],\n    LK: [, [,, \"[1-9]\\\\d{8}\", \"\\\\d{7,9}\"], [,, \"(?:[189]1|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\\\d{6}\", \"\\\\d{7,9}\",,, \"112345678\"], [,, \"7[0125-8]\\\\d{7}\", \"\\\\d{9}\",,, \"712345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"LK\", 94, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{1})(\\\\d{6})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LR: [, [,, \"2\\\\d{7,8}|[37-9]\\\\d{8}|4\\\\d{6}|5\\\\d{6,8}\", \"\\\\d{7,9}\"], [,, \"2\\\\d{7}\", \"\\\\d{8}\",,, \"21234567\"], [,, \"(?:330\\\\d|4[67]|5\\\\d|77\\\\d{2}|88\\\\d{2}|994\\\\d)\\\\d{5}|(?:20\\\\d{3}|33(?:0\\\\d{2}|2(?:02|5\\\\d))|555\\\\d{2}|77[0567]\\\\d{2}|88[068]\\\\d{2}|994\\\\d{2})\\\\d{4}\", \"\\\\d{7,9}\",,, \"770123456\"], [,, \"NA\", \"NA\"], [,, \"90[03]\\\\d{6}\", \"\\\\d{9}\",,, \"900123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"332(?:0[02]|5\\\\d)\\\\d{4}\", \"\\\\d{9}\",,, \"332001234\"], \"LR\", 231, \"00\", \"0\",,, \"0\",,,, [[, \"(2\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2579]\"], \"0$1\"], [, \"([4-6])(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[4-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[38]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LS: [, [,, \"[2568]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2\\\\d{7}\", \"\\\\d{8}\",,, \"22123456\"], [,, \"[56]\\\\d{7}\", \"\\\\d{8}\",,, \"50123456\"], [,, \"800[256]\\\\d{4}\", \"\\\\d{8}\",,, \"80021234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"LS\", 266, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LT: [, [,, \"[3-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:3[1478]|4[124-6]|52)\\\\d{6}\", \"\\\\d{8}\",,, \"31234567\"], [,, \"6\\\\d{7}\", \"\\\\d{8}\",,, \"61234567\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"9(?:0[0239]|10)\\\\d{5}\", \"\\\\d{8}\",,, \"90012345\"], [,, \"808\\\\d{5}\", \"\\\\d{8}\",,, \"80812345\"], [,, \"700\\\\d{5}\", \"\\\\d{8}\",,, \"70012345\"], [,, \"NA\", \"NA\"], \"LT\", 370, \"00\", \"8\",,, \"[08]\",,,, [[, \"([34]\\\\d)(\\\\d{6})\", \"$1 $2\", [\"37|4(?:1|5[45]|6[2-4])\"], \"(8-$1)\",, 1], [, \"([3-6]\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"3[148]|4(?:[24]|6[09])|528|6\"], \"(8-$1)\",, 1], [, \"([7-9]\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"8 $1\",, 1], [, \"(5)(2\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-79]\"], \"(8-$1)\",, 1]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"70[67]\\\\d{5}\", \"\\\\d{8}\",,, \"70712345\"],,, [,, \"NA\", \"NA\"]],\n    LU: [, [,, \"[24-9]\\\\d{3,10}|3(?:[0-46-9]\\\\d{2,9}|5[013-9]\\\\d{1,8})\", \"\\\\d{4,11}\"], [,, \"(?:2[2-9]\\\\d{2,9}|(?:[3457]\\\\d{2}|8(?:0[2-9]|[13-9]\\\\d)|9(?:0[89]|[2-579]\\\\d))\\\\d{1,8})\", \"\\\\d{4,11}\",,, \"27123456\"], [,, \"6[2679][18]\\\\d{6}\", \"\\\\d{9}\",,, \"628123456\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"90[015]\\\\d{5}\", \"\\\\d{8}\",,, \"90012345\"], [,, \"801\\\\d{5}\", \"\\\\d{8}\",,, \"80112345\"], [,, \"70\\\\d{6}\", \"\\\\d{8}\",,, \"70123456\"], [,, \"20(?:1\\\\d{5}|[2-689]\\\\d{1,7})\", \"\\\\d{4,10}\",,, \"20201234\"], \"LU\", 352, \"00\",,,, \"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\\\d)\",,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-5]|7[1-9]|[89](?:[1-9]|0[2-9])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2-5]|7[1-9]|[89](?:[1-9]|0[2-9])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"],, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,4})\", \"$1 $2 $3 $4\", [\"2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:[1-9]|0[2-9])|9(?:[1-9]|0[2-46-9])\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"70|80[01]|90[015]\"],, \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"],, \"$CC $1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LV: [, [,, \"[2689]\\\\d{7}\", \"\\\\d{8}\"], [,, \"6[3-8]\\\\d{6}\", \"\\\\d{8}\",,, \"63123456\"], [,, \"2\\\\d{7}\", \"\\\\d{8}\",,, \"21234567\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"90\\\\d{6}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"81\\\\d{6}\", \"\\\\d{8}\",,, \"81123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"LV\", 371, \"00\",,,,,,,, [[, \"([2689]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    LY: [, [,, \"[25679]\\\\d{8}\", \"\\\\d{7,9}\"], [,, \"(?:2[1345]|5[1347]|6[123479]|71)\\\\d{7}\", \"\\\\d{7,9}\",,, \"212345678\"], [,, \"9[1-6]\\\\d{7}\", \"\\\\d{9}\",,, \"912345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"LY\", 218, \"00\", \"0\",,, \"0\",,,, [[, \"([25679]\\\\d)(\\\\d{7})\", \"$1-$2\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MA: [, [,, \"[5689]\\\\d{8}\", \"\\\\d{9}\"], [,, \"5(?:2(?:(?:[015-7]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\\\d|9(?:0\\\\d|[89]0))|3(?:(?:[0-4]\\\\d|[57][2-9]|6[235-8]|9[3-9])\\\\d|8(?:0\\\\d|[89]0)))\\\\d{4}\", \"\\\\d{9}\",,, \"520123456\"], [,, \"6(?:0[0-8]|[12-79]\\\\d|8[017])\\\\d{6}\", \"\\\\d{9}\",,, \"650123456\"], [,, \"80\\\\d{7}\", \"\\\\d{9}\",,, \"801234567\"], [,, \"89\\\\d{7}\", \"\\\\d{9}\",,, \"891234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MA\", 212, \"00\", \"0\",,, \"0\",,,, [[, \"([56]\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"5(?:2[015-7]|3[0-4])|6\"], \"0$1\"], [, \"([58]\\\\d{3})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-489]|3[5-9])|892\", \"5(?:2(?:[2-48]|90)|3(?:[5-79]|80))|892\"], \"0$1\"], [, \"(5\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"5(?:29|38)\", \"5(?:29|38)[89]\"], \"0$1\"], [, \"(8[09])(\\\\d{7})\", \"$1-$2\", [\"8(?:0|9[013-9])\"], \"0$1\"]],, [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MC: [, [,, \"[4689]\\\\d{7,8}\", \"\\\\d{8,9}\"], [,, \"870\\\\d{5}|9[2-47-9]\\\\d{6}\", \"\\\\d{8}\",,, \"99123456\"], [,, \"6\\\\d{8}|4(?:4\\\\d|5[1-9])\\\\d{5}\", \"\\\\d{8,9}\",,, \"612345678\"], [,, \"90\\\\d{6}\", \"\\\\d{8}\",,, \"90123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MC\", 377, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [, \"(6)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"8\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"8\\\\d{7}\", \"\\\\d{8}\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MD: [, [,, \"[235-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:2(?:1[0569]|2\\\\d|3[015-7]|4[1-46-9]|5[0-24689]|6[2-589]|7[1-37]|9[1347-9])|5(?:33|5[257]))\\\\d{5}\", \"\\\\d{8}\",,, \"22212345\"], [,, \"(?:562\\\\d|6(?:[089]\\\\d{2}|[12][01]\\\\d|7(?:[1-6]\\\\d|7[0-4]))|7(?:6[07]|7[457-9]|[89]\\\\d)\\\\d)\\\\d{4}\", \"\\\\d{8}\",,, \"62112345\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"90[056]\\\\d{5}\", \"\\\\d{8}\",,, \"90012345\"], [,, \"808\\\\d{5}\", \"\\\\d{8}\",,, \"80812345\"], [,, \"NA\", \"NA\"], [,, \"3[08]\\\\d{6}\", \"\\\\d{8}\",,, \"30123456\"], \"MD\", 373, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"22|3\"], \"0$1\"], [, \"([25-7]\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13-79]|[5-7]\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"8(?:03|14)\\\\d{5}\", \"\\\\d{8}\",,, \"80312345\"],,, [,, \"NA\", \"NA\"]],\n    ME: [, [,, \"[2-9]\\\\d{7,8}\", \"\\\\d{6,9}\"], [,, \"(?:20[2-8]|3(?:0[2-7]|[12][35-7]|3[4-7])|4(?:0[2367]|1[267])|5(?:0[467]|1[267]|2[367]))\\\\d{5}\", \"\\\\d{6,8}\",,, \"30234567\"], [,, \"6(?:00\\\\d|32\\\\d|[89]\\\\d{2}|61\\\\d|7(?:[0-8]\\\\d|9(?:[3-9]|[0-2]\\\\d)))\\\\d{4}\", \"\\\\d{8,9}\",,, \"67622901\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80080002\"], [,, \"(?:9(?:4[1568]|5[178]))\\\\d{5}\", \"\\\\d{8}\",,, \"94515151\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"78[1-9]\\\\d{5}\", \"\\\\d{8}\",,, \"78108780\"], \"ME\", 382, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]|6[036-9]\", \"[2-57-9]|6(?:[03689]|7(?:[0-8]|9[3-9]))\"], \"0$1\"], [, \"(67)(9)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"679\", \"679[0-2]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"77\\\\d{6}\", \"\\\\d{8}\",,, \"77273012\"],,, [,, \"NA\", \"NA\"]],\n    MF: [, [,, \"[56]\\\\d{8}\", \"\\\\d{9}\"], [,, \"590(?:[02][79]|13|5[0-268]|[78]7)\\\\d{4}\", \"\\\\d{9}\",,, \"590271234\"], [,, \"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\", \"\\\\d{9}\",,, \"690301234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MF\", 590, \"00\", \"0\",,, \"0\",,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MG: [, [,, \"[23]\\\\d{8}\", \"\\\\d{7,9}\"], [,, \"20(?:2\\\\d{2}|4[47]\\\\d|5[3467]\\\\d|6[279]\\\\d|7(?:2[29]|[35]\\\\d)|8[268]\\\\d|9[245]\\\\d)\\\\d{4}\", \"\\\\d{7,9}\",,, \"202123456\"], [,, \"3[2-49]\\\\d{7}\", \"\\\\d{9}\",,, \"321234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"22\\\\d{7}\", \"\\\\d{9}\",,, \"221234567\"], \"MG\", 261, \"00\", \"0\",,, \"0\",,,, [[, \"([23]\\\\d)(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MH: [, [,, \"[2-6]\\\\d{6}\", \"\\\\d{7}\"], [,, \"(?:247|528|625)\\\\d{4}\", \"\\\\d{7}\",,, \"2471234\"], [,, \"(?:235|329|45[56]|545)\\\\d{4}\", \"\\\\d{7}\",,, \"2351234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"635\\\\d{4}\", \"\\\\d{7}\",,, \"6351234\"], \"MH\", 692, \"011\", \"1\",,, \"1\",,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MK: [, [,, \"[2-578]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:2(?:[23]\\\\d|5[124578]|6[01])|3(?:1[3-6]|[23][2-6]|4[2356])|4(?:[23][2-6]|4[3-6]|5[256]|6[25-8]|7[24-6]|8[4-6]))\\\\d{5}\", \"\\\\d{6,8}\",,, \"22212345\"], [,, \"7(?:[0-25-8]\\\\d{2}|32\\\\d|421)\\\\d{4}\", \"\\\\d{8}\",,, \"72345678\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"5[02-9]\\\\d{6}\", \"\\\\d{8}\",,, \"50012345\"], [,, \"8(?:0[1-9]|[1-9]\\\\d)\\\\d{5}\", \"\\\\d{8}\",,, \"80123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MK\", 389, \"00\", \"0\",,, \"0\",,,, [[, \"(2)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"([347]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [, \"([58]\\\\d{2})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    ML: [, [,, \"[246-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:2(?:0(?:2\\\\d|7[0-8])|1(?:2[5-7]|[3-689]\\\\d))|44[1239]\\\\d)\\\\d{4}\", \"\\\\d{8}\",,, \"20212345\"], [,, \"(?:2(?:079|17\\\\d)|[679]\\\\d{3}|8[239]\\\\d{2})\\\\d{4}\", \"\\\\d{8}\",,, \"65012345\"], [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"ML\", 223, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[246-9]\"]], [, \"(\\\\d{4})\", \"$1\", [\"67|74\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[246-9]\"]]], [,, \"NA\", \"NA\"],,, [,, \"80\\\\d{6}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MM: [, [,, \"[14578]\\\\d{5,7}|[26]\\\\d{5,8}|9(?:2\\\\d{0,2}|[58]|3\\\\d|4\\\\d{1,2}|6\\\\d?|[79]\\\\d{0,2})\\\\d{6}\", \"\\\\d{5,10}\"], [,, \"1(?:2\\\\d{1,2}|[3-5]\\\\d|6\\\\d?|[89][0-6]\\\\d)\\\\d{4}|2(?:2(?:000\\\\d{3}|\\\\d{4})|3\\\\d{4}|4(?:0\\\\d{5}|\\\\d{4})|5(?:1\\\\d{3,6}|[02-9]\\\\d{3,5})|[6-9]\\\\d{4})|4(?:2[245-8]|[346][2-6]|5[3-5])\\\\d{4}|5(?:2(?:20?|[3-8])|3[2-68]|4(?:21?|[4-8])|5[23]|6[2-4]|7[2-8]|8[24-7]|9[2-7])\\\\d{4}|6(?:0[23]|1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7(?:[2367]|4\\\\d|5\\\\d?|8[145]\\\\d)|8[245]|9[24])\\\\d{4}|7(?:[04][24-8]|[15][2-7]|22|3[2-4])\\\\d{4}|8(?:1(?:2\\\\d{1,2}|[3-689]\\\\d)|2(?:2\\\\d|3(?:\\\\d|20)|[4-8]\\\\d)|3[24]\\\\d|4[24-7]\\\\d|5[245]\\\\d|6[23]\\\\d)\\\\d{3}\", \"\\\\d{5,9}\",,, \"1234567\"], [,, \"17[01]\\\\d{4}|9(?:2(?:[0-4]|5\\\\d{2}|6[0-5]\\\\d)|3[0-36]\\\\d|4(?:0[0-4]\\\\d|[1379]\\\\d|2\\\\d{2}|4[0-589]\\\\d|5\\\\d{2}|88)|5[0-6]|61?\\\\d|7(?:3\\\\d|[789]\\\\d{2})|8\\\\d|9(?:1\\\\d|[67]\\\\d{2}|[089]))\\\\d{5}\", \"\\\\d{7,10}\",,, \"92123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"1333\\\\d{4}\", \"\\\\d{8}\",,, \"13331234\"], \"MM\", 95, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1|2[245]\"], \"0$1\"], [, \"(2)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"251\"], \"0$1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"67|81\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-8]\"], \"0$1\"], [, \"(9)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [, \"(9)([34]\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9(?:3[0-36]|4[0-57-9])\"], \"0$1\"], [, \"(9)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"92[56]\"], \"0$1\"], [, \"(9)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"93\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MN: [, [,, \"[12]\\\\d{7,9}|[57-9]\\\\d{7}\", \"\\\\d{6,10}\"], [,, \"[12](?:1\\\\d|2(?:[1-3]\\\\d?|7\\\\d)|3[2-8]\\\\d{1,2}|4[2-68]\\\\d{1,2}|5[1-4689]\\\\d{1,2})\\\\d{5}|5[0568]\\\\d{6}\", \"\\\\d{6,10}\",,, \"50123456\"], [,, \"(?:8(?:[05689]\\\\d|3[01])|9[013-9]\\\\d)\\\\d{5}\", \"\\\\d{8}\",,, \"88123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"7[05-8]\\\\d{6}\", \"\\\\d{8}\",,, \"75123456\"], \"MN\", 976, \"001\", \"0\",,, \"0\",,,, [[, \"([12]\\\\d)(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [, \"([12]2\\\\d)(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [, \"([12]\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[12](?:27|[3-5])\", \"[12](?:27|[3-5]\\\\d)2\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"], \"$1\"], [, \"([12]\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"[12](?:27|[3-5])\", \"[12](?:27|[3-5]\\\\d)[4-9]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MO: [, [,, \"[268]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:28[2-57-9]|8[2-57-9]\\\\d)\\\\d{5}\", \"\\\\d{8}\",,, \"28212345\"], [,, \"6(?:[2356]\\\\d|8[158])\\\\d{5}\", \"\\\\d{8}\",,, \"66123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MO\", 853, \"00\",,,,,,,, [[, \"([268]\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MP: [, [,, \"[5689]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"670(?:2(?:3[3-7]|56|8[5-8])|32[1238]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[589]|8[3-9]8|989)\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"6702345678\"], [,, \"670(?:2(?:3[3-7]|56|8[5-8])|32[1238]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[589]|8[3-9]8|989)\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"6702345678\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"MP\", 1, \"011\", \"1\",,, \"1\",,, 1,,, [,, \"NA\", \"NA\"],, \"670\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MQ: [, [,, \"[56]\\\\d{8}\", \"\\\\d{9}\"], [,, \"596(?:0[2-5]|[12]0|3[05-9]|4[024-8]|[5-7]\\\\d|89|9[4-8])\\\\d{4}\", \"\\\\d{9}\",,, \"596301234\"], [,, \"696(?:[0-479]\\\\d|5[01]|8[0-689])\\\\d{4}\", \"\\\\d{9}\",,, \"696201234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MQ\", 596, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MR: [, [,, \"[2-48]\\\\d{7}\", \"\\\\d{8}\"], [,, \"25[08]\\\\d{5}|35\\\\d{6}|45[1-7]\\\\d{5}\", \"\\\\d{8}\",,, \"35123456\"], [,, \"[234][0-46-9]\\\\d{6}\", \"\\\\d{8}\",,, \"22123456\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MR\", 222, \"00\",,,,,,,, [[, \"([2-48]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MS: [, [,, \"[5689]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"664491\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"6644912345\"], [,, \"66449[2-6]\\\\d{4}\", \"\\\\d{10}\",,, \"6644923456\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"MS\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"664\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MT: [, [,, \"[2357-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2(?:0(?:1[0-6]|3[1-4]|[69]\\\\d)|[1-357]\\\\d{2})\\\\d{4}\", \"\\\\d{8}\",,, \"21001234\"], [,, \"(?:7(?:210|[79]\\\\d{2})|9(?:2(?:1[01]|31)|696|8(?:1[1-3]|89|97)|9\\\\d{2}))\\\\d{4}\", \"\\\\d{8}\",,, \"96961234\"], [,, \"800[3467]\\\\d{4}\", \"\\\\d{8}\",,, \"80071234\"], [,, \"5(?:0(?:0(?:37|43)|6\\\\d{2}|70\\\\d|9[0168])|[12]\\\\d0[1-5])\\\\d{3}\", \"\\\\d{8}\",,, \"50037123\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"3550\\\\d{4}\", \"\\\\d{8}\",,, \"35501234\"], \"MT\", 356, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]],, [,, \"7117\\\\d{4}\", \"\\\\d{8}\",,, \"71171234\"],,, [,, \"NA\", \"NA\"], [,, \"501\\\\d{5}\", \"\\\\d{8}\",,, \"50112345\"],,, [,, \"NA\", \"NA\"]],\n    MU: [, [,, \"[2-9]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"(?:2(?:[03478]\\\\d|1[0-7]|6[1-69])|4(?:[013568]\\\\d|2[4-7])|5(?:44\\\\d|471)|6\\\\d{2}|8(?:14|3[129]))\\\\d{4}\", \"\\\\d{7,8}\",,, \"2012345\"], [,, \"5(?:2[59]\\\\d|4(?:2[1-389]|4\\\\d|7[1-9]|9\\\\d)|7\\\\d{2}|8(?:[0-2568]\\\\d|7[15-8])|9[0-8]\\\\d)\\\\d{4}\", \"\\\\d{8}\",,, \"52512345\"], [,, \"80[012]\\\\d{4}\", \"\\\\d{7}\",,, \"8001234\"], [,, \"30\\\\d{5}\", \"\\\\d{7}\",,, \"3012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"3(?:20|9\\\\d)\\\\d{4}\", \"\\\\d{7}\",,, \"3201234\"], \"MU\", 230, \"0(?:0|[2-7]0|33)\",,,,,, \"020\",, [[, \"([2-46-9]\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"[2-46-9]\"]], [, \"(5\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"5\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MV: [, [,, \"[3467]\\\\d{6}|9(?:00\\\\d{7}|\\\\d{6})\", \"\\\\d{7,10}\"], [,, \"(?:3(?:0[01]|3[0-59])|6(?:[567][02468]|8[024689]|90))\\\\d{4}\", \"\\\\d{7}\",,, \"6701234\"], [,, \"(?:46[46]|7[3-9]\\\\d|9[15-9]\\\\d)\\\\d{4}\", \"\\\\d{7}\",,, \"7712345\"], [,, \"NA\", \"NA\"], [,, \"900\\\\d{7}\", \"\\\\d{10}\",,, \"9001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MV\", 960, \"0(?:0|19)\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[3467]|9(?:[1-9]|0[1-9])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"900\"]]],, [,, \"781\\\\d{4}\", \"\\\\d{7}\",,, \"7812345\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MW: [, [,, \"(?:1(?:\\\\d{2})?|[2789]\\\\d{2})\\\\d{6}\", \"\\\\d{7,9}\"], [,, \"(?:1[2-9]|21\\\\d{2})\\\\d{5}\", \"\\\\d{7,9}\",,, \"1234567\"], [,, \"(?:111|77\\\\d|88\\\\d|99\\\\d)\\\\d{6}\", \"\\\\d{9}\",,, \"991234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MW\", 265, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1789]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MX: [, [,, \"[1-9]\\\\d{9,10}\", \"\\\\d{7,11}\"], [,, \"(?:33|55|81)\\\\d{8}|(?:2(?:0[01]|2[2-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-6][1-9]|[37][1-8]|8[1-35-9]|9[2-689])|5(?:88|9[1-79])|6(?:1[2-68]|[234][1-9]|5[1-3689]|6[12457-9]|7[1-7]|8[67]|9[4-8])|7(?:[13467][1-9]|2[1-8]|5[13-9]|8[1-69]|9[17])|8(?:2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\\\d{7}\", \"\\\\d{7,10}\",,, \"2221234567\"], [,, \"1(?:(?:33|55|81)\\\\d{8}|(?:2(?:2[2-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-6][1-9]|[37][1-8]|8[1-35-9]|9[2-689])|5(?:88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[12457-9]|7[1-7]|8[67]|9[4-8])|7(?:[13467][1-9]|2[1-8]|5[13-9]|8[1-69]|9[17])|8(?:2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\\\d{7})\", \"\\\\d{11}\",,, \"12221234567\"], [,, \"8(?:00|88)\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"900\\\\d{7}\", \"\\\\d{10}\",,, \"9001234567\"], [,, \"300\\\\d{7}\", \"\\\\d{10}\",,, \"3001234567\"], [,, \"500\\\\d{7}\", \"\\\\d{10}\",,, \"5001234567\"], [,, \"NA\", \"NA\"], \"MX\", 52, \"0[09]\", \"01\",,, \"0[12]|04[45](\\\\d{10})\", \"1$1\",,, [[, \"([358]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|55|81\"], \"01 $1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]\"], \"01 $1\",, 1], [, \"(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})\", \"044 $2 $3 $4\", [\"1(?:33|55|81)\"], \"$1\",, 1], [, \"(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"044 $2 $3 $4\", [\"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])\"], \"$1\",, 1]], [[, \"([358]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|55|81\"], \"01 $1\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]\"], \"01 $1\",, 1], [, \"(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1(?:33|55|81)\"]], [, \"(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])\"]]], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    MY: [, [,, \"[13-9]\\\\d{7,9}\", \"\\\\d{6,10}\"], [,, \"(?:3[2-9]\\\\d|[4-9][2-9])\\\\d{6}\", \"\\\\d{6,9}\",,, \"323456789\"], [,, \"1(?:1[1-5]\\\\d{2}|[02-4679][2-9]\\\\d|59\\\\d{2}|8(?:1[23]|[2-9]\\\\d))\\\\d{5}\", \"\\\\d{9,10}\",,, \"123456789\"], [,, \"1[378]00\\\\d{6}\", \"\\\\d{10}\",,, \"1300123456\"], [,, \"1600\\\\d{6}\", \"\\\\d{10}\",,, \"1600123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"154\\\\d{7}\", \"\\\\d{10}\",,, \"1541234567\"], \"MY\", 60, \"00\", \"0\",,, \"0\",,,, [[, \"([4-79])(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [, \"(3)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"3\"], \"0$1\"], [, \"([18]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1[02-46-9][1-9]|8\"], \"0$1\"], [, \"(1)([36-8]00)(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1[36-8]0\"]], [, \"(11)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"11\"], \"0$1\"], [, \"(15[49])(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    MZ: [, [,, \"[28]\\\\d{7,8}\", \"\\\\d{8,9}\"], [,, \"2(?:[1346]\\\\d|5[0-2]|[78][12]|93)\\\\d{5}\", \"\\\\d{8}\",,, \"21123456\"], [,, \"8[23467]\\\\d{7}\", \"\\\\d{9}\",,, \"821234567\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"MZ\", 258, \"00\",,,,,,,, [[, \"([28]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-7]\"]], [, \"(80\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"80\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    NA: [, [,, \"[68]\\\\d{7,8}\", \"\\\\d{8,9}\"], [,, \"6(?:1(?:17|2(?:[0189]\\\\d|[2-6]|7\\\\d?)|3(?:[01378]|2\\\\d)|4(?:[024]|10?|3[15]?)|69|7[014])|2(?:17|5(?:[0-36-8]|4\\\\d?)|69|70)|3(?:17|2(?:[0237]\\\\d?|[14-689])|34|6[289]|7[01]|81)|4(?:17|2(?:[012]|7?)|4(?:[06]|1\\\\d?)|5(?:[01357]|[25]\\\\d?)|69|7[01])|5(?:17|2(?:[0459]|[23678]\\\\d?)|69|7[01])|6(?:17|2(?:5|6\\\\d?)|38|42|69|7[01])|7(?:17|2(?:[569]|[234]\\\\d?)|3(?:0\\\\d?|[13])|69|7[01]))\\\\d{4}\", \"\\\\d{8,9}\",,, \"61221234\"], [,, \"(?:60|8[125])\\\\d{7}\", \"\\\\d{9}\",,, \"811234567\"], [,, \"NA\", \"NA\"], [,, \"8701\\\\d{5}\", \"\\\\d{9}\",,, \"870123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"8(?:3\\\\d{2}|86)\\\\d{5}\", \"\\\\d{8,9}\",,, \"88612345\"], \"NA\", 264, \"00\", \"0\",,, \"0\",,,, [[, \"(8\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8[1235]\"], \"0$1\"], [, \"(6\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [, \"(88)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(870)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"870\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    NC: [, [,, \"[2-57-9]\\\\d{5}\", \"\\\\d{6}\"], [,, \"(?:2[03-9]|3[0-5]|4[1-7]|88)\\\\d{4}\", \"\\\\d{6}\",,, \"201234\"], [,, \"(?:5[0-4]|[79]\\\\d|8[0-79])\\\\d{4}\", \"\\\\d{6}\",,, \"751234\"], [,, \"NA\", \"NA\"], [,, \"36\\\\d{4}\", \"\\\\d{6}\",,, \"366711\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"NC\", 687, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[2-46-9]|5[0-4]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    NE: [, [,, \"[0289]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2(?:0(?:20|3[1-7]|4[134]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\\\d{4}\", \"\\\\d{8}\",,, \"20201234\"], [,, \"(?:8[089]|9\\\\d)\\\\d{6}\", \"\\\\d{8}\",,, \"93123456\"], [,, \"08\\\\d{6}\", \"\\\\d{8}\",,, \"08123456\"], [,, \"09\\\\d{6}\", \"\\\\d{8}\",,, \"09123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"NE\", 227, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[289]|09\"]], [, \"(08)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    NF: [, [,, \"[13]\\\\d{5}\", \"\\\\d{5,6}\"], [,, \"(?:1(?:06|17|28|39)|3[012]\\\\d)\\\\d{3}\", \"\\\\d{5,6}\",,, \"106609\"], [,, \"3[58]\\\\d{4}\", \"\\\\d{5,6}\",,, \"381234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"NF\", 672, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"3\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    NG: [, [,, \"[1-6]\\\\d{5,8}|9\\\\d{5,9}|[78]\\\\d{5,13}\", \"\\\\d{5,14}\"], [,, \"[12]\\\\d{6,7}|9(?:0[3-9]|[1-9]\\\\d)\\\\d{5}|(?:3\\\\d|4[023568]|5[02368]|6[02-469]|7[4-69]|8[2-9])\\\\d{6}|(?:4[47]|5[14579]|6[1578]|7[0-357])\\\\d{5,6}|(?:78|41)\\\\d{5}\", \"\\\\d{5,9}\",,, \"12345678\"], [,, \"(?:1(?:7[34]\\\\d|8(?:04|[124579]\\\\d|8[0-3])|95\\\\d)|287[0-7]|3(?:18[1-8]|88[0-7]|9(?:8[5-9]|6[1-5]))|4(?:28[0-2]|6(?:7[1-9]|8[02-47])|88[0-2])|5(?:2(?:7[7-9]|8\\\\d)|38[1-79]|48[0-7]|68[4-7])|6(?:2(?:7[7-9]|8\\\\d)|4(?:3[7-9]|[68][129]|7[04-69]|9[1-8])|58[0-2]|98[7-9])|7(?:38[0-7]|69[1-8]|78[2-4])|8(?:28[3-9]|38[0-2]|4(?:2[12]|3[147-9]|5[346]|7[4-9]|8[014-689]|90)|58[1-8]|78[2-9]|88[5-7])|98[07]\\\\d)\\\\d{4}|(?:70[1-689]\\\\d|8(?:0(?:1[01]|[2-9]\\\\d)|1(?:[0-8]\\\\d|9[01]))|90[23589]\\\\d)\\\\d{6}\", \"\\\\d{8,10}\",,, \"8021234567\"], [,, \"800\\\\d{7,11}\", \"\\\\d{10,14}\",,, \"80017591759\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"NG\", 234, \"009\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"70|8[01]|90[23589]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|9(?:0[3-9]|[1-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-6]|7(?:[1-79]|0[1-9])|8[2-9]\"], \"0$1\"], [, \"([78]00)(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"[78]00\"], \"0$1\"], [, \"([78]00)(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]00\"], \"0$1\"], [, \"(78)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"78\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"700\\\\d{7,11}\", \"\\\\d{10,14}\",,, \"7001234567\"],,, [,, \"NA\", \"NA\"]],\n    NI: [, [,, \"[12578]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2\\\\d{7}\", \"\\\\d{8}\",,, \"21234567\"], [,, \"5(?:5[0-7]\\\\d{5}|[78]\\\\d{6})|7[5-8]\\\\d{6}|8\\\\d{7}\", \"\\\\d{8}\",,, \"81234567\"], [,, \"1800\\\\d{4}\", \"\\\\d{8}\",,, \"18001234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"NI\", 505, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    NL: [, [,, \"1\\\\d{4,8}|[2-7]\\\\d{8}|[89]\\\\d{6,9}\", \"\\\\d{5,10}\"], [,, \"(?:1[0135-8]|2[02-69]|3[0-68]|4[0135-9]|[57]\\\\d|8[478])\\\\d{7}\", \"\\\\d{9}\",,, \"101234567\"], [,, \"6[1-58]\\\\d{7}\", \"\\\\d{9}\",,, \"612345678\"], [,, \"800\\\\d{4,7}\", \"\\\\d{7,10}\",,, \"8001234\"], [,, \"90[069]\\\\d{4,7}\", \"\\\\d{7,10}\",,, \"9061234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"85\\\\d{7}\", \"\\\\d{9}\",,, \"851234567\"], \"NL\", 31, \"00\", \"0\",,, \"0\",,,, [[, \"([1-578]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]\"], \"0$1\"], [, \"([1-5]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [, \"(6)(\\\\d{8})\", \"$1 $2\", [\"6[0-57-9]\"], \"0$1\"], [, \"(66)(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [, \"(14)(\\\\d{3,4})\", \"$1 $2\", [\"14\"], \"$1\"], [, \"([89]0\\\\d)(\\\\d{4,7})\", \"$1 $2\", [\"80|9\"], \"0$1\"]],, [,, \"66\\\\d{7}\", \"\\\\d{9}\",,, \"662345678\"],,, [,, \"14\\\\d{3,4}\", \"\\\\d{5,6}\"], [,, \"140(?:1(?:[035]|[16-8]\\\\d)|2(?:[0346]|[259]\\\\d)|3(?:[03568]|[124]\\\\d)|4(?:[0356]|[17-9]\\\\d)|5(?:[0358]|[124679]\\\\d)|7\\\\d|8[458])\", \"\\\\d{5,6}\",,, \"14020\"],,, [,, \"NA\", \"NA\"]],\n    NO: [, [,, \"0\\\\d{4}|[2-9]\\\\d{7}\", \"\\\\d{5}(?:\\\\d{3})?\"], [,, \"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\", \"\\\\d{8}\",,, \"21234567\"], [,, \"(?:4[015-8]|5[89]|87|9\\\\d)\\\\d{6}\", \"\\\\d{8}\",,, \"40612345\"], [,, \"80[01]\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"82[09]\\\\d{5}\", \"\\\\d{8}\",,, \"82012345\"], [,, \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\", \"\\\\d{8}\",,, \"81021234\"], [,, \"880\\\\d{5}\", \"\\\\d{8}\",,, \"88012345\"], [,, \"85[0-5]\\\\d{5}\", \"\\\\d{8}\",,, \"85012345\"], \"NO\", 47, \"00\",,,,,,,, [[, \"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[489]\"]], [, \"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-7]\"]]],, [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"], [,, \"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\", \"\\\\d{5}(?:\\\\d{3})?\",,, \"01234\"], 1,, [,, \"81[23]\\\\d{5}\", \"\\\\d{8}\",,, \"81212345\"]],\n    NP: [, [,, \"[1-8]\\\\d{7}|9(?:[1-69]\\\\d{6,8}|7[2-6]\\\\d{5,7}|8\\\\d{8})\", \"\\\\d{6,10}\"], [,, \"(?:1[0-6]\\\\d|2[13-79][2-6]|3[135-8][2-6]|4[146-9][2-6]|5[135-7][2-6]|6[13-9][2-6]|7[15-9][2-6]|8[1-46-9][2-6]|9[1-79][2-6])\\\\d{5}\", \"\\\\d{6,8}\",,, \"14567890\"], [,, \"9(?:6[013]|7[245]|8[0-24-6])\\\\d{7}\", \"\\\\d{10}\",,, \"9841234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"NP\", 977, \"00\", \"0\",,, \"0\",,,, [[, \"(1)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-69]|7[15-9])\"], \"0$1\"], [, \"(9\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"9(?:6[013]|7[245]|8)\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    NR: [, [,, \"[458]\\\\d{6}\", \"\\\\d{7}\"], [,, \"(?:444|888)\\\\d{4}\", \"\\\\d{7}\",,, \"4441234\"], [,, \"55[5-9]\\\\d{4}\", \"\\\\d{7}\",,, \"5551234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"NR\", 674, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    NU: [, [,, \"[1-5]\\\\d{3}\", \"\\\\d{4}\"], [,, \"[34]\\\\d{3}\", \"\\\\d{4}\",,, \"4002\"], [,, \"[125]\\\\d{3}\", \"\\\\d{4}\",,, \"1234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"NU\", 683, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    NZ: [, [,, \"6[235-9]\\\\d{6}|[2-57-9]\\\\d{7,10}\", \"\\\\d{7,11}\"], [,, \"(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\\\d{6}|24099\\\\d{3}\", \"\\\\d{7,8}\",,, \"32345678\"], [,, \"2(?:[028]\\\\d{7,8}|1(?:[03]\\\\d{5,7}|[12457]\\\\d{5,6}|[689]\\\\d{5})|[79]\\\\d{7})\", \"\\\\d{8,10}\",,, \"211234567\"], [,, \"508\\\\d{6,7}|80\\\\d{6,8}\", \"\\\\d{8,10}\",,, \"800123456\"], [,, \"90\\\\d{7,9}\", \"\\\\d{9,11}\",,, \"900123456\"], [,, \"NA\", \"NA\"], [,, \"70\\\\d{7}\", \"\\\\d{9}\",,, \"701234567\"], [,, \"NA\", \"NA\"], \"NZ\", 64, \"0(?:0|161)\", \"0\",,, \"0\",, \"00\",, [[, \"([34679])(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[346]|7[2-57-9]|9[1-9]\"], \"0$1\"], [, \"(24099)(\\\\d{3})\", \"$1 $2\", [\"240\", \"2409\", \"24099\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \"$1 $2 $3\", [\"2(?:1[1-9]|[69]|7[0-35-9])|70|86\"], \"0$1\"], [, \"(2\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[028]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|5|[89]0\"], \"0$1\"]],, [,, \"[28]6\\\\d{6,7}\", \"\\\\d{8,9}\",,, \"26123456\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    OM: [, [,, \"(?:5|[279]\\\\d)\\\\d{6}|800\\\\d{5,6}\", \"\\\\d{7,9}\"], [,, \"2[2-6]\\\\d{6}\", \"\\\\d{8}\",,, \"23123456\"], [,, \"7[19]\\\\d{6}|9(?:0[1-9]|[1-9]\\\\d)\\\\d{5}\", \"\\\\d{8}\",,, \"92123456\"], [,, \"8007\\\\d{4,5}|500\\\\d{4}\", \"\\\\d{7,9}\",,, \"80071234\"], [,, \"900\\\\d{5}\", \"\\\\d{8}\",,, \"90012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"OM\", 968, \"00\",,,,,,,, [[, \"(2\\\\d)(\\\\d{6})\", \"$1 $2\", [\"2\"]], [, \"([79]\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[79]\"]], [, \"([58]00)(\\\\d{4,6})\", \"$1 $2\", [\"[58]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PA: [, [,, \"[1-9]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"(?:1(?:0[0-8]|1[49]|2[37]|3[0137]|4[147]|5[05]|6[58]|7[0167]|8[58]|9[139])|2(?:[0235679]\\\\d|1[0-7]|4[04-9]|8[028])|3(?:[09]\\\\d|1[014-7]|2[0-3]|3[03]|4[03-57]|55|6[068]|7[06-8]|8[06-9])|4(?:3[013-69]|4\\\\d|7[0-589])|5(?:[01]\\\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-267]|3[06]|[469]0|5[06-9]|7[0-24-79]|8[7-9])|8(?:09|[34]\\\\d|5[0134]|8[02])|9(?:0[6-9]|1[016-8]|2[036-8]|3[3679]|40|5[0489]|6[06-9]|7[046-9]|8[36-8]|9[1-9]))\\\\d{4}\", \"\\\\d{7}\",,, \"2001234\"], [,, \"(?:1[16]1|21[89]|8(?:1[01]|7[23]))\\\\d{4}|6(?:[024-9]\\\\d|1[0-5]|3[0-24-9])\\\\d{5}\", \"\\\\d{7,8}\",,, \"60012345\"], [,, \"80[09]\\\\d{4}\", \"\\\\d{7}\",,, \"8001234\"], [,, \"(?:779|8(?:55|60|7[78])|9(?:00|81))\\\\d{4}\", \"\\\\d{7}\",,, \"8601234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"PA\", 507, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"6\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PE: [, [,, \"[14-9]\\\\d{7,8}\", \"\\\\d{6,9}\"], [,, \"(?:1\\\\d|4[1-4]|5[1-46]|6[1-7]|7[2-46]|8[2-4])\\\\d{6}\", \"\\\\d{6,8}\",,, \"11234567\"], [,, \"9\\\\d{8}\", \"\\\\d{9}\",,, \"912345678\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"805\\\\d{5}\", \"\\\\d{8}\",,, \"80512345\"], [,, \"801\\\\d{5}\", \"\\\\d{8}\",,, \"80112345\"], [,, \"80[24]\\\\d{5}\", \"\\\\d{8}\",,, \"80212345\"], [,, \"NA\", \"NA\"], \"PE\", 51, \"19(?:1[124]|77|90)00\", \"0\", \" Anexo \",, \"0\",,,, [[, \"(1)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [, \"([4-8]\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[4-7]|8[2-4]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"(0$1)\"], [, \"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PF: [, [,, \"4\\\\d{5,7}|8\\\\d{7}\", \"\\\\d{6}(?:\\\\d{2})?\"], [,, \"4(?:[09][45689]\\\\d|4)\\\\d{4}\", \"\\\\d{6}(?:\\\\d{2})?\",,, \"40412345\"], [,, \"8[79]\\\\d{6}\", \"\\\\d{8}\",,, \"87123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"PF\", 689, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4[09]|8[79]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]]],, [,, \"NA\", \"NA\"],,, [,, \"44\\\\d{4}\", \"\\\\d{6}\",,, \"441234\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PG: [, [,, \"[1-9]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"(?:3[0-2]\\\\d|4[25]\\\\d|5[34]\\\\d|64[1-9]|77(?:[0-24]\\\\d|30)|85[02-46-9]|9[78]\\\\d)\\\\d{4}\", \"\\\\d{7}\",,, \"3123456\"], [,, \"(?:20150|68\\\\d{2}|7(?:[0-689]\\\\d|75)\\\\d{2})\\\\d{3}\", \"\\\\d{7,8}\",,, \"6812345\"], [,, \"180\\\\d{4}\", \"\\\\d{7}\",,, \"1801234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"275\\\\d{4}\", \"\\\\d{7}\",,, \"2751234\"], \"PG\", 675, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[13-689]|27\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"20|7\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PH: [, [,, \"2\\\\d{5,7}|[3-9]\\\\d{7,9}|1800\\\\d{7,9}\", \"\\\\d{5,13}\"], [,, \"2\\\\d{5}(?:\\\\d{2})?|(?:3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578]|8[2-8])\\\\d{7}|88(?:22\\\\d{6}|42\\\\d{4})\", \"\\\\d{5,10}\",,, \"21234567\"], [,, \"(?:81[37]|9(?:0[5-9]|1[024-9]|2[0-35-9]|3[02-9]|4[236-9]|50|7[34-79]|89|9[4-9]))\\\\d{7}\", \"\\\\d{10}\",,, \"9051234567\"], [,, \"1800\\\\d{7,9}\", \"\\\\d{11,13}\",,, \"180012345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"PH\", 63, \"00\", \"0\",,, \"0\",,,, [[, \"(2)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [, \"(2)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"], \"(0$1)\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [, \"([3-8]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-8]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"81|9\"], \"0$1\"], [, \"(1800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(1800)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PK: [, [,, \"1\\\\d{8}|[2-8]\\\\d{5,11}|9(?:[013-9]\\\\d{4,9}|2\\\\d(?:111\\\\d{6}|\\\\d{3,7}))\", \"\\\\d{6,12}\"], [,, \"(?:21|42)[2-9]\\\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\\\d{6}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\\\d{5,6}|58[126]\\\\d{7}\", \"\\\\d{6,10}\",,, \"2123456789\"], [,, \"3(?:0\\\\d|1[0-6]|2[0-5]|3[0-7]|4[0-8]|55|64)\\\\d{7}\", \"\\\\d{10}\",,, \"3012345678\"], [,, \"800\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"900\\\\d{5}\", \"\\\\d{8}\",,, \"90012345\"], [,, \"NA\", \"NA\"], [,, \"122\\\\d{6}\", \"\\\\d{9}\",,, \"122044444\"], [,, \"NA\", \"NA\"], \"PK\", 92, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(111)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1\", \"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11\", \"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111\"], \"(0$1)\"], [, \"(\\\\d{3})(111)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[349]|45|54|60|72|8[2-5]|9[2-9]\", \"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d1\", \"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d11\", \"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d111\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{6,7})\", \"$1 $2\", [\"2[349]|45|54|60|72|8[2-5]|9[2-9]\", \"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d[2-9]\"], \"(0$1)\"], [, \"(3\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"([15]\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"58[12]|1\"], \"(0$1)\"], [, \"(586\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"586\"], \"(0$1)\"], [, \"([89]00)(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"[89]00\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:[1-8]|0[468])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\\\d{6}\", \"\\\\d{11,12}\",,, \"21111825888\"],,, [,, \"NA\", \"NA\"]],\n    PL: [, [,, \"[12]\\\\d{6,8}|[3-57-9]\\\\d{8}|6\\\\d{5,8}\", \"\\\\d{6,9}\"], [,, \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])\\\\d{7}|[12]2\\\\d{5}\", \"\\\\d{6,9}\",,, \"123456789\"], [,, \"(?:5[0137]|6[069]|7[2389]|88)\\\\d{7}\", \"\\\\d{9}\",,, \"512345678\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"70\\\\d{7}\", \"\\\\d{9}\",,, \"701234567\"], [,, \"801\\\\d{6}\", \"\\\\d{9}\",,, \"801234567\"], [,, \"NA\", \"NA\"], [,, \"39\\\\d{7}\", \"\\\\d{9}\",,, \"391234567\"], \"PL\", 48, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"]], [, \"(\\\\d{2})(\\\\d{1})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]2\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"26|39|5[0137]|6[0469]|7[02389]|8[08]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]], [, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"64\"]]],, [,, \"64\\\\d{4,7}\", \"\\\\d{6,9}\",,, \"641234567\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PM: [, [,, \"[45]\\\\d{5}\", \"\\\\d{6}\"], [,, \"41\\\\d{4}\", \"\\\\d{6}\",,, \"411234\"], [,, \"55\\\\d{4}\", \"\\\\d{6}\",,, \"551234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"PM\", 508, \"00\", \"0\",,, \"0\",,,, [[, \"([45]\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PR: [, [,, \"[5789]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"(?:787|939)[2-9]\\\\d{6}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"7872345678\"], [,, \"(?:787|939)[2-9]\\\\d{6}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"7872345678\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002345678\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"PR\", 1, \"011\", \"1\",,, \"1\",,, 1,,, [,, \"NA\", \"NA\"],, \"787|939\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PS: [, [,, \"[24589]\\\\d{7,8}|1(?:[78]\\\\d{8}|[49]\\\\d{2,3})\", \"\\\\d{4,10}\"], [,, \"(?:22[234789]|42[45]|82[01458]|92[369])\\\\d{5}\", \"\\\\d{7,8}\",,, \"22234567\"], [,, \"5[69]\\\\d{7}\", \"\\\\d{9}\",,, \"599123456\"], [,, \"1800\\\\d{6}\", \"\\\\d{10}\",,, \"1800123456\"], [,, \"1(?:4|9\\\\d)\\\\d{2}\", \"\\\\d{4,5}\",,, \"19123\"], [,, \"1700\\\\d{6}\", \"\\\\d{10}\",,, \"1700123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"PS\", 970, \"00\", \"0\",,, \"0\",,,, [[, \"([2489])(2\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]\"], \"0$1\"], [, \"(5[69]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(1[78]00)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[78]\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PT: [, [,, \"[2-46-9]\\\\d{8}\", \"\\\\d{9}\"], [,, \"2(?:[12]\\\\d|[35][1-689]|4[1-59]|6[1-35689]|7[1-9]|8[1-69]|9[1256])\\\\d{6}\", \"\\\\d{9}\",,, \"212345678\"], [,, \"9(?:[1236]\\\\d{2}|480)\\\\d{5}\", \"\\\\d{9}\",,, \"912345678\"], [,, \"80[02]\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"6(?:0[178]|4[68])\\\\d{6}|76(?:0[1-57]|1[2-47]|2[237])\\\\d{5}\", \"\\\\d{9}\",,, \"760123456\"], [,, \"80(?:8\\\\d|9[1579])\\\\d{5}\", \"\\\\d{9}\",,, \"808123456\"], [,, \"884[0-4689]\\\\d{5}\", \"\\\\d{9}\",,, \"884123456\"], [,, \"30\\\\d{7}\", \"\\\\d{9}\",,, \"301234567\"], \"PT\", 351, \"00\",,,,,,,, [[, \"(2\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [, \"([2-46-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[3-9]|[346-9]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"7(?:0(?:7\\\\d|8[17]))\\\\d{5}\", \"\\\\d{9}\",,, \"707123456\"],,, [,, \"600\\\\d{6}\", \"\\\\d{9}\",,, \"600110000\"]],\n    PW: [, [,, \"[2-8]\\\\d{6}\", \"\\\\d{7}\"], [,, \"2552255|(?:277|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76))\\\\d{4}\", \"\\\\d{7}\",,, \"2771234\"], [,, \"(?:6[234689]0|77[45789])\\\\d{4}\", \"\\\\d{7}\",,, \"6201234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"PW\", 680, \"01[12]\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    PY: [, [,, \"5[0-5]\\\\d{4,7}|[2-46-9]\\\\d{5,8}\", \"\\\\d{5,9}\"], [,, \"(?:[26]1|3[289]|4[124678]|7[123]|8[1236])\\\\d{5,7}|(?:2(?:2[4568]|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51)|4(?:18|2[45]|3[12]|5[13]|64|71|9[1-47])|5(?:[1-4]\\\\d|5[0234])|6(?:3[1-3]|44|7[1-4678])|7(?:17|4[0-4]|6[1-578]|75|8[0-8])|858)\\\\d{5,6}\", \"\\\\d{5,9}\",,, \"212345678\"], [,, \"9(?:6[12]|[78][1-6]|9[1-5])\\\\d{6}\", \"\\\\d{9}\",,, \"961456789\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"8700[0-4]\\\\d{4}\", \"\\\\d{9}\",,, \"870012345\"], \"PY\", 595, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"(?:[26]1|3[289]|4[124678]|7[123]|8[1236])\"], \"($1)\"], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8700\"]], [, \"(\\\\d{3})(\\\\d{4,6})\", \"$1 $2\", [\"[2-8][1-9]\"], \"($1)\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"[2-9]0\\\\d{4,7}\", \"\\\\d{6,9}\",,, \"201234567\"],,, [,, \"NA\", \"NA\"]],\n    QA: [, [,, \"[2-8]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"4[04]\\\\d{6}\", \"\\\\d{7,8}\",,, \"44123456\"], [,, \"[3567]\\\\d{7}\", \"\\\\d{7,8}\",,, \"33123456\"], [,, \"800\\\\d{4}\", \"\\\\d{7,8}\",,, \"8001234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"QA\", 974, \"00\",,,,,,,, [[, \"([28]\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"[28]\"]], [, \"([3-7]\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[3-7]\"]]],, [,, \"2(?:[12]\\\\d|61)\\\\d{4}\", \"\\\\d{7}\",,, \"2123456\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    RE: [, [,, \"[268]\\\\d{8}\", \"\\\\d{9}\"], [,, \"262\\\\d{6}\", \"\\\\d{9}\",,, \"262161234\"], [,, \"6(?:9[23]|47)\\\\d{6}\", \"\\\\d{9}\",,, \"692123456\"], [,, \"80\\\\d{7}\", \"\\\\d{9}\",,, \"801234567\"], [,, \"89[1-37-9]\\\\d{6}\", \"\\\\d{9}\",,, \"891123456\"], [,, \"8(?:1[019]|2[0156]|84|90)\\\\d{6}\", \"\\\\d{9}\",,, \"810123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"RE\", 262, \"00\", \"0\",,, \"0\",,,, [[, \"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\",, \"0$1\"]],, [,, \"NA\", \"NA\"], 1, \"262|6[49]|8\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    RO: [, [,, \"2\\\\d{5,8}|[37-9]\\\\d{8}\", \"\\\\d{6,9}\"], [,, \"2(?:1(?:\\\\d{7}|9\\\\d{3})|[3-6](?:\\\\d{7}|\\\\d9\\\\d{2}))|3[13-6]\\\\d{7}\", \"\\\\d{6,9}\",,, \"211234567\"], [,, \"7(?:[0-8]\\\\d{2}|99\\\\d)\\\\d{5}\", \"\\\\d{9}\",,, \"712345678\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"90[036]\\\\d{6}\", \"\\\\d{9}\",,, \"900123456\"], [,, \"801\\\\d{6}\", \"\\\\d{9}\",,, \"801123456\"], [,, \"802\\\\d{6}\", \"\\\\d{9}\",,, \"802123456\"], [,, \"NA\", \"NA\"], \"RO\", 40, \"00\", \"0\", \" int \",, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], [, \"(21)(\\\\d{4})\", \"$1 $2\", [\"21\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[23][3-7]|[7-9]\"], \"0$1\"], [, \"(2\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"37\\\\d{7}\", \"\\\\d{9}\",,, \"372123456\"],,, [,, \"NA\", \"NA\"]],\n    RS: [, [,, \"[126-9]\\\\d{4,11}|3(?:[0-79]\\\\d{3,10}|8[2-9]\\\\d{2,9})\", \"\\\\d{5,12}\"], [,, \"(?:1(?:[02-9][2-9]|1[1-9])\\\\d|2(?:[0-24-7][2-9]\\\\d|[389](?:0[2-9]|[2-9]\\\\d))|3(?:[0-8][2-9]\\\\d|9(?:[2-9]\\\\d|0[2-9])))\\\\d{3,8}\", \"\\\\d{5,12}\",,, \"10234567\"], [,, \"6(?:[0-689]|7\\\\d)\\\\d{6,7}\", \"\\\\d{8,10}\",,, \"601234567\"], [,, \"800\\\\d{3,9}\", \"\\\\d{6,12}\",,, \"80012345\"], [,, \"(?:90[0169]|78\\\\d)\\\\d{3,7}\", \"\\\\d{6,12}\",,, \"90012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"RS\", 381, \"00\", \"0\",,, \"0\",,,, [[, \"([23]\\\\d{2})(\\\\d{4,9})\", \"$1 $2\", [\"(?:2[389]|39)0\"], \"0$1\"], [, \"([1-3]\\\\d)(\\\\d{5,10})\", \"$1 $2\", [\"1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])\"], \"0$1\"], [, \"(6\\\\d)(\\\\d{6,8})\", \"$1 $2\", [\"6\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{3,9})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(7[26])(\\\\d{4,9})\", \"$1 $2\", [\"7[26]\"], \"0$1\"], [, \"(7[08]\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"7[08]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"7[06]\\\\d{4,10}\", \"\\\\d{6,12}\",,, \"700123456\"],,, [,, \"NA\", \"NA\"]],\n    RU: [, [,, \"[3489]\\\\d{9}\", \"\\\\d{10}\"], [,, \"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\", \"\\\\d{10}\",,, \"3011234567\"], [,, \"9\\\\d{9}\", \"\\\\d{10}\",,, \"9123456789\"], [,, \"80[04]\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"80[39]\\\\d{7}\", \"\\\\d{10}\",,, \"8091234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"RU\", 7, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"[1-79]\"], \"$1\",, 1], [, \"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[34689]\"], \"8 ($1)\",, 1], [, \"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\",, 1]], [[, \"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[34689]\"], \"8 ($1)\",, 1], [, \"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\",, 1]], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    RW: [, [,, \"[027-9]\\\\d{7,8}\", \"\\\\d{8,9}\"], [,, \"2[258]\\\\d{7}|06\\\\d{6}\", \"\\\\d{8,9}\",,, \"250123456\"], [,, \"7[238]\\\\d{7}\", \"\\\\d{9}\",,, \"720123456\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"900\\\\d{6}\", \"\\\\d{9}\",,, \"900123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"RW\", 250, \"00\", \"0\",,, \"0\",,,, [[, \"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"$1\"], [, \"([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [, \"(0\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    SA: [, [,, \"1\\\\d{7,8}|(?:[2-467]|92)\\\\d{7}|5\\\\d{8}|8\\\\d{9}\", \"\\\\d{7,10}\"], [,, \"11\\\\d{7}|1?(?:2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\\\d{6}\", \"\\\\d{7,9}\",,, \"112345678\"], [,, \"(?:5(?:[013-689]\\\\d|7[0-26-8])|811\\\\d)\\\\d{6}\", \"\\\\d{9,10}\",,, \"512345678\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"NA\", \"NA\"], [,, \"92[05]\\\\d{6}\", \"\\\\d{9}\",,, \"920012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"SA\", 966, \"00\", \"0\",,, \"0\",,,, [[, \"([1-467])(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-467]\"], \"0$1\"], [, \"(1\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1[1-467]\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(92\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"92\"], \"$1\"], [, \"(800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"$1\"], [, \"(811)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"81\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SB: [, [,, \"[1-9]\\\\d{4,6}\", \"\\\\d{5,7}\"], [,, \"(?:1[4-79]|[23]\\\\d|4[0-2]|5[03]|6[0-37])\\\\d{3}\", \"\\\\d{5}\",,, \"40123\"], [,, \"48\\\\d{3}|7(?:30|[46-8]\\\\d|5[025-9]|9[0-5])\\\\d{4}|8[4-9]\\\\d{5}|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8])\\\\d{4}\", \"\\\\d{5,7}\",,, \"7421234\"], [,, \"1[38]\\\\d{3}\", \"\\\\d{5}\",,, \"18123\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"5[12]\\\\d{3}\", \"\\\\d{5}\",,, \"51123\"], \"SB\", 677, \"0[01]\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[7-9]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SC: [, [,, \"[2468]\\\\d{5,6}\", \"\\\\d{6,7}\"], [,, \"4[2-46]\\\\d{5}\", \"\\\\d{7}\",,, \"4217123\"], [,, \"2[5-8]\\\\d{5}\", \"\\\\d{7}\",,, \"2510123\"], [,, \"8000\\\\d{2}\", \"\\\\d{6}\",,, \"800000\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"64\\\\d{5}\", \"\\\\d{7}\",,, \"6412345\"], \"SC\", 248, \"0[0-2]\",,,,,, \"00\",, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"8\"]], [, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SD: [, [,, \"[19]\\\\d{8}\", \"\\\\d{9}\"], [,, \"1(?:[125]\\\\d|8[3567])\\\\d{6}\", \"\\\\d{9}\",,, \"121231234\"], [,, \"9[0-3569]\\\\d{7}\", \"\\\\d{9}\",,, \"911231234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"SD\", 249, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SE: [, [,, \"[1-35-9]\\\\d{5,11}|4\\\\d{6,8}\", \"\\\\d{6,12}\"], [,, \"1(?:0[1-8]\\\\d{6}|[136]\\\\d{5,7}|(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\\\d)\\\\d{5,6})|2(?:[136]\\\\d{5,7}|(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])\\\\d{5,6})|3(?:[356]\\\\d{5,7}|(?:0[0-4]|1\\\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])\\\\d{5,6})|4(?:[0246]\\\\d{5,7}|(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])\\\\d{5,6})|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\\\d|6[03-5]|7[013]|8[0-79]|9[01])\\\\d{5,6}|6(?:[03]\\\\d{5,7}|(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])\\\\d{5,6})|8\\\\d{6,8}|9(?:0[1-9]\\\\d{4,6}|(?:1[0-68]|2\\\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8])\\\\d{5,6})\", \"\\\\d{7,9}\",,, \"8123456\"], [,, \"7[02369]\\\\d{7}\", \"\\\\d{9}\",,, \"701234567\"], [,, \"20\\\\d{4,7}\", \"\\\\d{6,9}\",,, \"20123456\"], [,, \"649\\\\d{6}|9(?:00|39|44)[1-8]\\\\d{3,6}\", \"\\\\d{7,10}\",,, \"9001234567\"], [,, \"77(?:0\\\\d{3}(?:\\\\d{3})?|[1-7]\\\\d{6})\", \"\\\\d{6}(?:\\\\d{3})?\",,, \"771234567\"], [,, \"75[1-8]\\\\d{6}\", \"\\\\d{9}\",,, \"751234567\"], [,, \"NA\", \"NA\"], \"SE\", 46, \"00\", \"0\",,, \"0\",,,, [[, \"(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\"], [, \"([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90\"], \"0$1\"], [, \"([1-469]\\\\d)(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[136]|2[136]|3[356]|4[0246]|6[03]|90\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"], \"0$1\"], [, \"(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"7\"], \"0$1\"], [, \"(77)(\\\\d{2})(\\\\d{2})\", \"$1-$2$3\", [\"7\"], \"0$1\"], [, \"(20)(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\"], [, \"(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9[034]\"], \"0$1\"], [, \"(9[034]\\\\d)(\\\\d{4})\", \"$1-$2\", [\"9[034]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"25[245]|67[3-6]\"], \"0$1\"]], [[, \"(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90\"]], [, \"([1-469]\\\\d)(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"1[136]|2[136]|3[356]|4[0246]|6[03]|90\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"]], [, \"(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7\"]], [, \"(77)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"7\"]], [, \"(20)(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"20\"]], [, \"(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9[034]\"]], [, \"(9[034]\\\\d)(\\\\d{4})\", \"$1 $2\", [\"9[034]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"25[245]|67[3-6]\"]]], [,, \"74[02-9]\\\\d{6}\", \"\\\\d{9}\",,, \"740123456\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"(?:25[245]|67[3-6])\\\\d{9}\", \"\\\\d{12}\",,, \"254123456789\"]],\n    SG: [, [,, \"[36]\\\\d{7}|[17-9]\\\\d{7,10}\", \"\\\\d{8,11}\"], [,, \"6[1-9]\\\\d{6}\", \"\\\\d{8}\",,, \"61234567\"], [,, \"(?:8[1-8]|9[0-8])\\\\d{6}\", \"\\\\d{8}\",,, \"81234567\"], [,, \"1?800\\\\d{7}\", \"\\\\d{10,11}\",,, \"18001234567\"], [,, \"1900\\\\d{7}\", \"\\\\d{11}\",,, \"19001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"3[12]\\\\d{6}\", \"\\\\d{8}\",,, \"31234567\"], \"SG\", 65, \"0[0-3]\\\\d\",,,,,,,, [[, \"([3689]\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|8[1-9]\"]], [, \"(1[89]00)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1[89]\"]], [, \"(7000)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"]], [, \"(800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"7000\\\\d{7}\", \"\\\\d{11}\",,, \"70001234567\"],,, [,, \"NA\", \"NA\"]],\n    SH: [, [,, \"[256]\\\\d{4}\", \"\\\\d{4,5}\"], [,, \"2(?:[0-57-9]\\\\d|6[4-9])\\\\d{2}\", \"\\\\d{5}\",,, \"22158\"], [,, \"[56]\\\\d{4}\", \"\\\\d{5}\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"262\\\\d{2}\", \"\\\\d{5}\"], \"SH\", 290, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SI: [, [,, \"[1-7]\\\\d{6,7}|[89]\\\\d{4,7}\", \"\\\\d{5,8}\"], [,, \"(?:1\\\\d|[25][2-8]|3[24-8]|4[24-8]|7[3-8])\\\\d{6}\", \"\\\\d{7,8}\",,, \"11234567\"], [,, \"(?:[37][01]|4[0139]|51|6[48])\\\\d{6}\", \"\\\\d{8}\",,, \"31234567\"], [,, \"80\\\\d{4,6}\", \"\\\\d{6,8}\",,, \"80123456\"], [,, \"90\\\\d{4,6}|89[1-3]\\\\d{2,5}\", \"\\\\d{5,8}\",,, \"90123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"(?:59|8[1-3])\\\\d{6}\", \"\\\\d{8}\",,, \"59012345\"], \"SI\", 386, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[12]|3[24-8]|4[24-8]|5[2-8]|7[3-8]\"], \"(0$1)\"], [, \"([3-7]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [, \"([89][09])(\\\\d{3,6})\", \"$1 $2\", [\"[89][09]\"], \"0$1\"], [, \"([58]\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"59|8[1-3]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SJ: [, [,, \"0\\\\d{4}|[4789]\\\\d{7}\", \"\\\\d{5}(?:\\\\d{3})?\"], [,, \"79\\\\d{6}\", \"\\\\d{8}\",,, \"79123456\"], [,, \"(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}\", \"\\\\d{8}\",,, \"41234567\"], [,, \"80[01]\\\\d{5}\", \"\\\\d{8}\",,, \"80012345\"], [,, \"82[09]\\\\d{5}\", \"\\\\d{8}\",,, \"82012345\"], [,, \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\", \"\\\\d{8}\",,, \"81021234\"], [,, \"880\\\\d{5}\", \"\\\\d{8}\",,, \"88012345\"], [,, \"85[0-5]\\\\d{5}\", \"\\\\d{8}\",,, \"85012345\"], \"SJ\", 47, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\", \"\\\\d{5}(?:\\\\d{3})?\",,, \"01234\"], 1,, [,, \"81[23]\\\\d{5}\", \"\\\\d{8}\",,, \"81212345\"]],\n    SK: [, [,, \"(?:[2-68]\\\\d{5,8}|9\\\\d{6,8})\", \"\\\\d{6,9}\"], [,, \"2(?:16\\\\d{3,4}|\\\\d{8})|[3-5](?:[1-8]16\\\\d{2,3}|\\\\d{8})\", \"\\\\d{6,9}\",,, \"212345678\"], [,, \"9(?:0[1-8]|1[0-24-9]|4[0489]|50)\\\\d{6}\", \"\\\\d{9}\",,, \"912123456\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"9(?:[78]\\\\d{7}|00\\\\d{6})\", \"\\\\d{9}\",,, \"900123456\"], [,, \"8[5-9]\\\\d{7}\", \"\\\\d{9}\",,, \"850123456\"], [,, \"NA\", \"NA\"], [,, \"6(?:02|5[0-4]|9[0-6])\\\\d{6}\", \"\\\\d{9}\",,, \"690123456\"], \"SK\", 421, \"00\", \"0\",,, \"0\",,,, [[, \"(2)(16)(\\\\d{3,4})\", \"$1 $2 $3\", [\"216\"], \"0$1\"], [, \"([3-5]\\\\d)(16)(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5]\"], \"0$1\"], [, \"(2)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [, \"([3-5]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"], [, \"([689]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [, \"(9090)(\\\\d{3})\", \"$1 $2\", [\"9090\"], \"0$1\"]],, [,, \"9090\\\\d{3}\", \"\\\\d{7}\",,, \"9090123\"],,, [,, \"(?:602|8(?:00|[5-9]\\\\d)|9(?:00|[78]\\\\d))\\\\d{6}|9090\\\\d{3}\", \"\\\\d{7,9}\",,, \"800123456\"], [,, \"96\\\\d{7}\", \"\\\\d{9}\",,, \"961234567\"],,, [,, \"NA\", \"NA\"]],\n    SL: [, [,, \"[2-9]\\\\d{7}\", \"\\\\d{6,8}\"], [,, \"[235]2[2-4][2-9]\\\\d{4}\", \"\\\\d{6,8}\",,, \"22221234\"], [,, \"(?:2[15]|3[03-5]|4[04]|5[05]|66|7[6-9]|88|99)\\\\d{6}\", \"\\\\d{6,8}\",,, \"25123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"SL\", 232, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\",, \"(0$1)\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SM: [, [,, \"[05-7]\\\\d{7,9}\", \"\\\\d{6,10}\"], [,, \"0549(?:8[0157-9]|9\\\\d)\\\\d{4}\", \"\\\\d{6,10}\",,, \"0549886377\"], [,, \"6[16]\\\\d{6}\", \"\\\\d{8}\",,, \"66661212\"], [,, \"NA\", \"NA\"], [,, \"7[178]\\\\d{6}\", \"\\\\d{8}\",,, \"71123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"5[158]\\\\d{6}\", \"\\\\d{8}\",,, \"58001110\"], \"SM\", 378, \"00\",,,, \"(?:0549)?([89]\\\\d{5})\", \"0549$1\",,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(0549)(\\\\d{6})\", \"$1 $2\", [\"0\"]], [, \"(\\\\d{6})\", \"0549 $1\", [\"[89]\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(0549)(\\\\d{6})\", \"($1) $2\", [\"0\"]], [, \"(\\\\d{6})\", \"(0549) $1\", [\"[89]\"]]], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    SN: [, [,, \"[3789]\\\\d{8}\", \"\\\\d{9}\"], [,, \"3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611|90[1-5])\\\\d{5}\", \"\\\\d{9}\",,, \"301012345\"], [,, \"7(?:[067]\\\\d|21|8[0-26]|90)\\\\d{6}\", \"\\\\d{9}\",,, \"701234567\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"88[4689]\\\\d{6}\", \"\\\\d{9}\",,, \"884123456\"], [,, \"81[02468]\\\\d{6}\", \"\\\\d{9}\",,, \"810123456\"], [,, \"NA\", \"NA\"], [,, \"3392\\\\d{5}|93330\\\\d{4}\", \"\\\\d{9}\",,, \"933301234\"], \"SN\", 221, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SO: [, [,, \"[1-79]\\\\d{6,8}\", \"\\\\d{7,9}\"], [,, \"(?:1\\\\d|2[0-79]|3[0-46-8]|4[0-7]|59)\\\\d{5}\", \"\\\\d{7}\",,, \"4012345\"], [,, \"(?:15\\\\d|2(?:4\\\\d|8)|6[1-35-9]?\\\\d{2}|7(?:[1-8]\\\\d|99?\\\\d)|9(?:0[67]|[2-9])\\\\d)\\\\d{5}\", \"\\\\d{7,9}\",,, \"71123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"SO\", 252, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"2[0-79]|[13-5]\"]], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"24|[67]\"]], [, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"15|28|6[1-35-9]|799|9[2-9]\"]], [, \"(90\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"90\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SR: [, [,, \"[2-8]\\\\d{5,6}\", \"\\\\d{6,7}\"], [,, \"(?:2[1-3]|3[0-7]|4\\\\d|5[2-58]|68\\\\d)\\\\d{4}\", \"\\\\d{6,7}\",,, \"211234\"], [,, \"(?:7[124-7]|8[1-9])\\\\d{5}\", \"\\\\d{7}\",,, \"7412345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"5(?:6\\\\d{4}|90[0-4]\\\\d{3})\", \"\\\\d{6,7}\",,, \"561234\"], \"SR\", 597, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-4]|5[2-58]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"56\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"59|[6-8]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SS: [, [,, \"[19]\\\\d{8}\", \"\\\\d{9}\"], [,, \"18\\\\d{7}\", \"\\\\d{9}\",,, \"181234567\"], [,, \"(?:12|9[1257])\\\\d{7}\", \"\\\\d{9}\",,, \"977123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"SS\", 211, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\",, \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    ST: [, [,, \"[29]\\\\d{6}\", \"\\\\d{7}\"], [,, \"22\\\\d{5}\", \"\\\\d{7}\",,, \"2221234\"], [,, \"9(?:0(?:0[5-9]|[1-9]\\\\d)|[89]\\\\d{2})\\\\d{3}\", \"\\\\d{7}\",,, \"9812345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"ST\", 239, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SV: [, [,, \"[267]\\\\d{7}|[89]\\\\d{6}(?:\\\\d{4})?\", \"\\\\d{7,8}|\\\\d{11}\"], [,, \"2[1-6]\\\\d{6}\", \"\\\\d{8}\",,, \"21234567\"], [,, \"[67]\\\\d{7}\", \"\\\\d{8}\",,, \"70123456\"], [,, \"800\\\\d{4}(?:\\\\d{4})?\", \"\\\\d{7}(?:\\\\d{4})?\",,, \"8001234\"], [,, \"900\\\\d{4}(?:\\\\d{4})?\", \"\\\\d{7}(?:\\\\d{4})?\",,, \"9001234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"SV\", 503, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SX: [, [,, \"[5789]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"7215(?:4[2-8]|8[239]|9[056])\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"7215425678\"], [,, \"7215(?:1[02]|2\\\\d|5[034679]|8[014-8])\\\\d{4}\", \"\\\\d{10}\",,, \"7215205678\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002123456\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002123456\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"SX\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"721\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SY: [, [,, \"[1-59]\\\\d{7,8}\", \"\\\\d{6,9}\"], [,, \"(?:1(?:1\\\\d?|4\\\\d|[2356])|2(?:1\\\\d?|[235])|3(?:[13]\\\\d|4)|4[13]|5[1-3])\\\\d{6}\", \"\\\\d{6,9}\",,, \"112345678\"], [,, \"9(?:22|[35][0-8]|4\\\\d|6[024-9]|88|9[0-489])\\\\d{6}\", \"\\\\d{9}\",,, \"944567890\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"SY\", 963, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-5]\"], \"0$1\",, 1], [, \"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\",, 1]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    SZ: [, [,, \"[027]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2[2-5]\\\\d{6}\", \"\\\\d{8}\",,, \"22171234\"], [,, \"7[6-8]\\\\d{6}\", \"\\\\d{8}\",,, \"76123456\"], [,, \"0800\\\\d{4}\", \"\\\\d{8}\",,, \"08001234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"SZ\", 268, \"00\",,,,,,,, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[027]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"0800\\\\d{4}\", \"\\\\d{8}\",,, \"08001234\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    TA: [, [,, \"8\\\\d{3}\", \"\\\\d{4}\"], [,, \"8\\\\d{3}\", \"\\\\d{4}\",,, \"8999\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TA\", 290, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TC: [, [,, \"[5689]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"649(?:712|9(?:4\\\\d|50))\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"6497121234\"], [,, \"649(?:2(?:3[129]|4[1-7])|3(?:3[1-389]|4[1-7])|4[34][1-3])\\\\d{4}\", \"\\\\d{10}\",,, \"6492311234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002345678\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"64971[01]\\\\d{4}\", \"\\\\d{10}\",,, \"6497101234\"], \"TC\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"649\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TD: [, [,, \"[2679]\\\\d{7}\", \"\\\\d{8}\"], [,, \"22(?:[3789]0|5[0-5]|6[89])\\\\d{4}\", \"\\\\d{8}\",,, \"22501234\"], [,, \"(?:6[023568]\\\\d|77\\\\d|9\\\\d{2})\\\\d{5}\", \"\\\\d{8}\",,, \"63012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TD\", 235, \"00|16\",,,,,, \"00\",, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TG: [, [,, \"[29]\\\\d{7}\", \"\\\\d{8}\"], [,, \"2(?:2[2-7]|3[23]|44|55|66|77)\\\\d{5}\", \"\\\\d{8}\",,, \"22212345\"], [,, \"9[0-389]\\\\d{6}\", \"\\\\d{8}\",,, \"90112345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TG\", 228, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TH: [, [,, \"[2-9]\\\\d{7,8}|1\\\\d{3}(?:\\\\d{5,6})?\", \"\\\\d{4}|\\\\d{8,10}\"], [,, \"(?:2\\\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\\\d{6}\", \"\\\\d{8}\",,, \"21234567\"], [,, \"(?:14|6[1-3]|[89]\\\\d)\\\\d{7}\", \"\\\\d{9}\",,, \"812345678\"], [,, \"1800\\\\d{6}\", \"\\\\d{10}\",,, \"1800123456\"], [,, \"1900\\\\d{6}\", \"\\\\d{10}\",,, \"1900123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"6[08]\\\\d{7}\", \"\\\\d{9}\",,, \"601234567\"], \"TH\", 66, \"00\", \"0\",,, \"0\",,,, [[, \"(2)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"([13-9]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"14|[3-9]\"], \"0$1\"], [, \"(1[89]00)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"1\\\\d{3}\", \"\\\\d{4}\",,, \"1100\"], [,, \"1\\\\d{3}\", \"\\\\d{4}\",,, \"1100\"],,, [,, \"NA\", \"NA\"]],\n    TJ: [, [,, \"[3-589]\\\\d{8}\", \"\\\\d{3,9}\"], [,, \"(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\\\d{6}\", \"\\\\d{3,9}\",,, \"372123456\"], [,, \"(?:41[18]|50[125]|88\\\\d|9[0-35-9]\\\\d)\\\\d{6}\", \"\\\\d{9}\",,, \"917123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TJ\", 992, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"([349]\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[34]7|91[78]\"], \"(8) $1\",, 1], [, \"([4589]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[148]|[58]|9(?:1[59]|[0235-9])\"], \"(8) $1\",, 1], [, \"(331700)(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\", \"33170\", \"331700\"], \"(8) $1\",, 1], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3[1-5]\", \"3(?:[1245]|3(?:[02-9]|1[0-589]))\"], \"(8) $1\",, 1]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TK: [, [,, \"[2-47]\\\\d{3,6}\", \"\\\\d{4,7}\"], [,, \"(?:2[2-4]|[34]\\\\d)\\\\d{2,5}\", \"\\\\d{4,7}\",,, \"3101\"], [,, \"7[2-4]\\\\d{2,5}\", \"\\\\d{4,7}\",,, \"7290\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TK\", 690, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TL: [, [,, \"[2-489]\\\\d{6}|7\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"(?:2[1-5]|3[1-9]|4[1-4])\\\\d{5}\", \"\\\\d{7}\",,, \"2112345\"], [,, \"7[3-8]\\\\d{6}\", \"\\\\d{8}\",,, \"77212345\"], [,, \"80\\\\d{5}\", \"\\\\d{7}\",,, \"8012345\"], [,, \"90\\\\d{5}\", \"\\\\d{7}\",,, \"9012345\"], [,, \"NA\", \"NA\"], [,, \"70\\\\d{5}\", \"\\\\d{7}\",,, \"7012345\"], [,, \"NA\", \"NA\"], \"TL\", 670, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TM: [, [,, \"[1-6]\\\\d{7}\", \"\\\\d{8}\"], [,, \"(?:1(?:2\\\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\\\d{5}\", \"\\\\d{8}\",,, \"12345678\"], [,, \"6[1-9]\\\\d{6}\", \"\\\\d{8}\",,, \"66123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TM\", 993, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"6\"], \"8 $1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"13|[2-5]\"], \"(8 $1)\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TN: [, [,, \"[2-57-9]\\\\d{7}\", \"\\\\d{8}\"], [,, \"3(?:[012]\\\\d|6[0-4]|91)\\\\d{5}|7\\\\d{7}|81200\\\\d{3}\", \"\\\\d{8}\",,, \"71234567\"], [,, \"(?:[259]\\\\d|4[0-6])\\\\d{6}\", \"\\\\d{8}\",,, \"20123456\"], [,, \"8010\\\\d{4}\", \"\\\\d{8}\",,, \"80101234\"], [,, \"88\\\\d{6}\", \"\\\\d{8}\",,, \"88123456\"], [,, \"8[12]10\\\\d{4}\", \"\\\\d{8}\",,, \"81101234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TN\", 216, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TO: [, [,, \"[02-8]\\\\d{4,6}\", \"\\\\d{5,7}\"], [,, \"(?:2\\\\d|3[1-8]|4[1-4]|[56]0|7[0149]|8[05])\\\\d{3}\", \"\\\\d{5}\",,, \"20123\"], [,, \"(?:7[578]|8[47-9])\\\\d{5}\", \"\\\\d{7}\",,, \"7715123\"], [,, \"0800\\\\d{3}\", \"\\\\d{7}\",,, \"0800222\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TO\", 676, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[1-6]|7[0-4]|8[05]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"7[5-9]|8[47-9]\"]], [, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    TR: [, [,, \"[2-589]\\\\d{9}|444\\\\d{4}\", \"\\\\d{7,10}\"], [,, \"(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\\\d{7}\", \"\\\\d{10}\",,, \"2123456789\"], [,, \"5(?:0[1-7]|22|[34]\\\\d|5[1-59]|9[246])\\\\d{7}\", \"\\\\d{10}\",,, \"5012345678\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"900\\\\d{7}\", \"\\\\d{10}\",,, \"9001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TR\", 90, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]|4(?:[0-35-9]|4[0-35-9])\"], \"(0$1)\",, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[589]\"], \"0$1\",, 1], [, \"(444)(\\\\d{1})(\\\\d{3})\", \"$1 $2 $3\", [\"444\"]]],, [,, \"512\\\\d{7}\", \"\\\\d{10}\",,, \"5123456789\"],,, [,, \"444\\\\d{4}\", \"\\\\d{7}\",,, \"4441444\"], [,, \"444\\\\d{4}|850\\\\d{7}\", \"\\\\d{7,10}\",,, \"4441444\"],,, [,, \"NA\", \"NA\"]],\n    TT: [, [,, \"[589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"868(?:2(?:01|2[1-6]|3[1-5])|6(?:0[79]|1[02-8]|2[1-9]|[3-69]\\\\d|7[0-79])|82[124])\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"8682211234\"], [,, \"868(?:2(?:[789]\\\\d)|3(?:0[1-9]|1[02-9]|[2-9]\\\\d)|4[6-9]\\\\d|6(?:20|78|8\\\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\\\d))\\\\d{4}\", \"\\\\d{10}\",,, \"8682911234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002345678\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"TT\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"868\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"868619\\\\d{4}\", \"\\\\d{10}\"]],\n    TV: [, [,, \"[279]\\\\d{4,6}\", \"\\\\d{5,7}\"], [,, \"2[02-9]\\\\d{3}\", \"\\\\d{5}\",,, \"20123\"], [,, \"(?:70\\\\d|90)\\\\d{4}\", \"\\\\d{6,7}\",,, \"901234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"TV\", 688, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TW: [, [,, \"[2-689]\\\\d{7,8}|7\\\\d{7,9}\", \"\\\\d{8,10}\"], [,, \"[2-8]\\\\d{7,8}\", \"\\\\d{8,9}\",,, \"21234567\"], [,, \"9\\\\d{8}\", \"\\\\d{9}\",,, \"912345678\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"900\\\\d{6}\", \"\\\\d{9}\",,, \"900123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"70\\\\d{8}\", \"\\\\d{10}\",,, \"7012345678\"], \"TW\", 886, \"0(?:0[25679]|19)\", \"0\", \"#\",, \"0\",,,, [[, \"([2-8])(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-6]|[78][1-9]\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"80|9\"], \"0$1\"], [, \"(70)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"70\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    TZ: [, [,, \"\\\\d{9}\", \"\\\\d{7,9}\"], [,, \"2[2-8]\\\\d{7}\", \"\\\\d{7,9}\",,, \"222345678\"], [,, \"(?:6[25-8]|7[13-9])\\\\d{7}\", \"\\\\d{9}\",,, \"621234567\"], [,, \"80[08]\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"90\\\\d{7}\", \"\\\\d{9}\",,, \"900123456\"], [,, \"8(?:40|6[01])\\\\d{6}\", \"\\\\d{9}\",,, \"840123456\"], [,, \"NA\", \"NA\"], [,, \"41\\\\d{7}\", \"\\\\d{9}\",,, \"412345678\"], \"TZ\", 255, \"00[056]\", \"0\",,, \"0\",,,, [[, \"([24]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [, \"([67]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    UA: [, [,, \"[3-9]\\\\d{8}\", \"\\\\d{5,9}\"], [,, \"(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\\\d{7}\", \"\\\\d{5,9}\",,, \"311234567\"], [,, \"(?:39|50|6[36-8]|73|9[1-9])\\\\d{7}\", \"\\\\d{9}\",,, \"391234567\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"900\\\\d{6}\", \"\\\\d{9}\",,, \"900123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"89\\\\d{7}\", \"\\\\d{9}\",,, \"891234567\"], \"UA\", 380, \"00\", \"0\",,, \"0\",, \"0~0\",, [[, \"([3-9]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[38]9|4(?:[45][0-5]|87)|5(?:0|6[37]|7[37])|6[36-8]|73|9[1-9]\", \"[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|73|9[1-9]\"], \"0$1\"], [, \"([3-689]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3[1-8]2|4[13678]2|5(?:[12457]2|6[24])|6(?:[49]2|[12][29]|5[24])|8[0-8]|90\", \"3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[49]2|[12][29]|5[24])|8[0-8]|90\"], \"0$1\"], [, \"([3-6]\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"3(?:5[013-9]|[1-46-8])|4(?:[137][013-9]|6|[45][6-9]|8[4-6])|5(?:[1245][013-9]|6[0135-9]|3|7[4-6])|6(?:[49][013-9]|5[0135-9]|[12][13-8])\", \"3(?:5[013-9]|[1-46-8](?:22|[013-9]))|4(?:[137][013-9]|6(?:[013-9]|22)|[45][6-9]|8[4-6])|5(?:[1245][013-9]|6(?:3[02389]|[015689])|3|7[4-6])|6(?:[49][013-9]|5[0135-9]|[12][13-8])\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    UG: [, [,, \"\\\\d{9}\", \"\\\\d{5,9}\"], [,, \"20(?:[0147]\\\\d{2}|2(?:40|[5-9]\\\\d)|3[23]\\\\d|5[0-4]\\\\d|6[03]\\\\d|8[0-2]\\\\d)\\\\d{4}|[34]\\\\d{8}\", \"\\\\d{5,9}\",,, \"312345678\"], [,, \"2030\\\\d{5}|7(?:0[0-7]|[15789]\\\\d|2[03]|30|[46][0-4])\\\\d{6}\", \"\\\\d{9}\",,, \"712345678\"], [,, \"800[123]\\\\d{5}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"90[123]\\\\d{6}\", \"\\\\d{9}\",,, \"901123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"UG\", 256, \"00[057]\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[7-9]|20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"3|4(?:[1-5]|6[0-36-9])\"], \"0$1\"], [, \"(2024)(\\\\d{5})\", \"$1 $2\", [\"2024\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    US: [, [,, \"[2-9]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"(?:2(?:0[1-35-9]|1[02-9]|2[04589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[014679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|69|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-37]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[12])|7(?:0[1-46-8]|1[02-9]|2[0457]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-25]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[01678]|4[0179]|5[12469]|7[0-3589]|8[0459]))[2-9]\\\\d{6}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2015555555\"], [,, \"(?:2(?:0[1-35-9]|1[02-9]|2[04589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[014679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|69|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-37]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[12])|7(?:0[1-46-8]|1[02-9]|2[0457]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-25]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[01678]|4[0179]|5[12469]|7[0-3589]|8[0459]))[2-9]\\\\d{6}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2015555555\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002345678\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"US\", 1, \"011\", \"1\",,, \"1\",,, 1, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\",,,, 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\",,,, 1]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\"]], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    UY: [, [,, \"[2489]\\\\d{6,7}\", \"\\\\d{7,8}\"], [,, \"2\\\\d{7}|4[2-7]\\\\d{6}\", \"\\\\d{7,8}\",,, \"21231234\"], [,, \"9[1-9]\\\\d{6}\", \"\\\\d{8}\",,, \"94231234\"], [,, \"80[05]\\\\d{4}\", \"\\\\d{7}\",,, \"8001234\"], [,, \"90[0-8]\\\\d{4}\", \"\\\\d{7}\",,, \"9001234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"UY\", 598, \"0(?:1[3-9]\\\\d|0)\", \"0\", \" int. \",, \"0\",, \"00\",, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[24]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]0\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    UZ: [, [,, \"[679]\\\\d{8}\", \"\\\\d{7,9}\"], [,, \"(?:6(?:1(?:22|3[124]|4[1-4]|5[123578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\\\d{2}|7(?:[23]\\\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[12456]|9[135-8])|1[12]\\\\d|2(?:22|3[1345789]|4[123579]|5[14])|3(?:2\\\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\\\d{5}\", \"\\\\d{7,9}\",,, \"662345678\"], [,, \"6(?:1(?:2(?:98|2[01])|35[0-4]|50\\\\d|61[23]|7(?:[01][017]|4\\\\d|55|9[5-9]))|2(?:11\\\\d|2(?:[12]1|9[01379])|5(?:[126]\\\\d|3[0-4])|7\\\\d{2})|5(?:19[01]|2(?:27|9[26])|30\\\\d|59\\\\d|7\\\\d{2})|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|3[79]\\\\d|4(?:56|83)|7(?:[07]\\\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79])|9[0-3]\\\\d)|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\\\d|[39][07])|9(?:0\\\\d|7[079]))|9(?:2(?:1[1267]|5\\\\d|3[01]|7[0-4])|5[67]\\\\d|6(?:2[0-26]|8\\\\d)|7\\\\d{2}))\\\\d{4}|7(?:0\\\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\\\d|7(?:0\\\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|33\\\\d|5(?:0[0-4]|5[579]|9\\\\d)|7(?:[0-3579]\\\\d|4[0467]|6[67]|8[078])|9[4-6]\\\\d)|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\\\d|9[5-9])|7(?:0\\\\d|1[024589]|2[0127]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\\\d))|5(?:112|2(?:0\\\\d|2[29]|[49]4)|3[1568]\\\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\\\d|41[179]|5(?:[349]\\\\d|5[0-2])|7(?:0[017]|[13]\\\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\\\d)|57[05629]|7(?:2[05-9]|3[37]|4\\\\d|60|7[2579]|87|9[07])))\\\\d{4}|9[0-57-9]\\\\d{7}\", \"\\\\d{7,9}\",,, \"912345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"UZ\", 998, \"810\", \"8\",,, \"8\",, \"8~10\",, [[, \"([679]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\",, \"8 $1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    VA: [, [,, \"(?:0(?:878\\\\d{5}|6698\\\\d{5})|[1589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9}))\", \"\\\\d{6,11}\"], [,, \"06698\\\\d{5}\", \"\\\\d{10}\",,, \"0669812345\"], [,, \"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\", \"\\\\d{9,11}\",,, \"3123456789\"], [,, \"80(?:0\\\\d{6}|3\\\\d{3})\", \"\\\\d{6,9}\",,, \"800123456\"], [,, \"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\", \"\\\\d{6,10}\",,, \"899123456\"], [,, \"84(?:[08]\\\\d{6}|[17]\\\\d{3})\", \"\\\\d{6,9}\",,, \"848123456\"], [,, \"1(?:78\\\\d|99)\\\\d{6}\", \"\\\\d{9,10}\",,, \"1781234567\"], [,, \"55\\\\d{8}\", \"\\\\d{10}\",,, \"5512345678\"], \"VA\", 39, \"00\",,,,,,,,,, [,, \"NA\", \"NA\"],,, [,, \"848\\\\d{6}\", \"\\\\d{9}\",,, \"848123456\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    VC: [, [,, \"[5789]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"784(?:266|3(?:6[6-9]|7\\\\d|8[0-24-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"7842661234\"], [,, \"784(?:4(?:3[0-4]|5[45]|89|9[0-58])|5(?:2[6-9]|3[0-4]))\\\\d{4}\", \"\\\\d{10}\",,, \"7844301234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002345678\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"VC\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"784\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    VE: [, [,, \"[24589]\\\\d{9}\", \"\\\\d{7,10}\"], [,, \"(?:2(?:12|3[457-9]|[58][1-9]|[467]\\\\d|9[1-6])|50[01])\\\\d{7}\", \"\\\\d{7,10}\",,, \"2121234567\"], [,, \"4(?:1[24-8]|2[46])\\\\d{7}\", \"\\\\d{10}\",,, \"4121234567\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"900\\\\d{7}\", \"\\\\d{10}\",,, \"9001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"VE\", 58, \"00\", \"0\",,, \"0\",,,, [[, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\",, \"0$1\", \"$CC $1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    VG: [, [,, \"[2589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"284(?:(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\\\d{4}|496[0-5]\\\\d{3})\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"2842291234\"], [,, \"284(?:(?:3(?:0[0-3]|4[0-367]|94)|4(?:4[0-6]|68|99)|54[0-57])\\\\d{4}|496[6-9]\\\\d{3})\", \"\\\\d{10}\",,, \"2843001234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002345678\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"VG\", 1, \"011\", \"1\",,, \"1\",,,,,, [,, \"NA\", \"NA\"],, \"284\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    VI: [, [,, \"[3589]\\\\d{9}\", \"\\\\d{7}(?:\\\\d{3})?\"], [,, \"340(?:2(?:01|2[0678]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-589]|27|7\\\\d)|884|998)\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"3406421234\"], [,, \"340(?:2(?:01|2[0678]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-589]|27|7\\\\d)|884|998)\\\\d{4}\", \"\\\\d{7}(?:\\\\d{3})?\",,, \"3406421234\"], [,, \"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"8002345678\"], [,, \"900[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"9002345678\"], [,, \"NA\", \"NA\"], [,, \"5(?:00|33|44|66|77|88)[2-9]\\\\d{6}\", \"\\\\d{10}\",,, \"5002345678\"], [,, \"NA\", \"NA\"], \"VI\", 1, \"011\", \"1\",,, \"1\",,, 1,,, [,, \"NA\", \"NA\"],, \"340\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    VN: [, [,, \"[17]\\\\d{6,9}|[2-69]\\\\d{7,9}|8\\\\d{6,8}\", \"\\\\d{7,10}\"], [,, \"(?:2(?:[025-79]|1[0189]|[348][01])|3(?:[0136-9]|[25][01])|4\\\\d|5(?:[01][01]|[2-9])|6(?:[0-46-8]|5[01])|7(?:[02-79]|[18][01]))\\\\d{7}|8(?:[1-57]\\\\d|[689][0-79])\\\\d{6}\", \"\\\\d{9,10}\",,, \"2101234567\"], [,, \"(?:9\\\\d|1(?:2\\\\d|6[2-9]|8[68]|99))\\\\d{7}|8[689]8\\\\d{6}\", \"\\\\d{9,10}\",,, \"912345678\"], [,, \"1800\\\\d{4,6}\", \"\\\\d{8,10}\",,, \"1800123456\"], [,, \"1900\\\\d{4,6}\", \"\\\\d{8,10}\",,, \"1900123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"VN\", 84, \"00\", \"0\",,, \"0\",,,, [[, \"([17]99)(\\\\d{4})\", \"$1 $2\", [\"[17]99\"], \"0$1\",, 1], [, \"([48])(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"4|8(?:[1-57]|[689][0-79])\"], \"0$1\",, 1], [, \"([235-7]\\\\d)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2[025-79]|3[0136-9]|5[2-9]|6[0-46-8]|7[02-79]\"], \"0$1\",, 1], [, \"(80)(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\",, 1], [, \"(69\\\\d)(\\\\d{4,5})\", \"$1 $2\", [\"69\"], \"0$1\",, 1], [, \"([235-7]\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2[1348]|3[25]|5[01]|65|7[18]\"], \"0$1\",, 1], [, \"([89]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8[689]8|9\"], \"0$1\",, 1], [, \"(1[2689]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:[26]|8[68]|99)\"], \"0$1\",, 1], [, \"(1[89]00)(\\\\d{4,6})\", \"$1 $2\", [\"1[89]0\"], \"$1\",, 1]],, [,, \"NA\", \"NA\"],,, [,, \"[17]99\\\\d{4}|69\\\\d{5,6}\", \"\\\\d{7,8}\",,, \"1992000\"], [,, \"[17]99\\\\d{4}|69\\\\d{5,6}|80\\\\d{5}\", \"\\\\d{7,8}\",,, \"1992000\"],,, [,, \"NA\", \"NA\"]],\n    VU: [, [,, \"[2-57-9]\\\\d{4,6}\", \"\\\\d{5,7}\"], [,, \"(?:2[02-9]\\\\d|3(?:[5-7]\\\\d|8[0-8])|48[4-9]|88\\\\d)\\\\d{2}\", \"\\\\d{5}\",,, \"22123\"], [,, \"(?:5(?:7[2-5]|[0-689]\\\\d)|7[013-7]\\\\d)\\\\d{4}\", \"\\\\d{7}\",,, \"5912345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"VU\", 678, \"00\",,,,,,,, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[579]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"3[03]\\\\d{3}|900\\\\d{4}\", \"\\\\d{5,7}\",,, \"30123\"],,, [,, \"NA\", \"NA\"]],\n    WF: [, [,, \"[4-8]\\\\d{5}\", \"\\\\d{6}\"], [,, \"(?:50|68|72)\\\\d{4}\", \"\\\\d{6}\",,, \"501234\"], [,, \"(?:50|68|72|8[23])\\\\d{4}\", \"\\\\d{6}\",,, \"501234\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"WF\", 681, \"00\",,,,,,,, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"[48]0\\\\d{4}\", \"\\\\d{6}\",,, \"401234\"]],\n    WS: [, [,, \"[2-8]\\\\d{4,6}\", \"\\\\d{5,7}\"], [,, \"(?:[2-5]\\\\d|6[1-9]|84\\\\d{2})\\\\d{3}\", \"\\\\d{5,7}\",,, \"22123\"], [,, \"(?:60|7[25-7]\\\\d)\\\\d{4}\", \"\\\\d{6,7}\",,, \"601234\"], [,, \"800\\\\d{3}\", \"\\\\d{6}\",,, \"800123\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"WS\", 685, \"0\",,,,,,,, [[, \"(8\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8\"]], [, \"(7\\\\d)(\\\\d{5})\", \"$1 $2\", [\"7\"]], [, \"(\\\\d{5})\", \"$1\", [\"[2-6]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    YE: [, [,, \"[1-7]\\\\d{6,8}\", \"\\\\d{6,9}\"], [,, \"(?:1(?:7\\\\d|[2-68])|2[2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-68])\\\\d{5}\", \"\\\\d{6,8}\",,, \"1234567\"], [,, \"7[0137]\\\\d{7}\", \"\\\\d{9}\",,, \"712345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"YE\", 967, \"00\", \"0\",,, \"0\",,,, [[, \"([1-7])(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-6]|7[24-68]\"], \"0$1\"], [, \"(7\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7[0137]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    YT: [, [,, \"[268]\\\\d{8}\", \"\\\\d{9}\"], [,, \"269(?:6[0-4]|50)\\\\d{4}\", \"\\\\d{9}\",,, \"269601234\"], [,, \"639\\\\d{6}\", \"\\\\d{9}\",,, \"639123456\"], [,, \"80\\\\d{7}\", \"\\\\d{9}\",,, \"801234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"YT\", 262, \"00\", \"0\",,, \"0\",,,,,, [,, \"NA\", \"NA\"],, \"269|63\", [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    ZA: [, [,, \"[1-79]\\\\d{8}|8(?:[067]\\\\d{7}|[1-4]\\\\d{3,7})\", \"\\\\d{5,9}\"], [,, \"(?:1[0-8]|2[0-378]|3[1-69]|4\\\\d|5[1346-8])\\\\d{7}\", \"\\\\d{9}\",,, \"101234567\"], [,, \"(?:6[0-5]|7[0-46-9])\\\\d{7}|8[1-4]\\\\d{3,7}\", \"\\\\d{5,9}\",,, \"711234567\"], [,, \"80\\\\d{7}\", \"\\\\d{9}\",,, \"801234567\"], [,, \"86[2-9]\\\\d{6}|90\\\\d{7}\", \"\\\\d{9}\",,, \"862345678\"], [,, \"860\\\\d{6}\", \"\\\\d{9}\",,, \"860123456\"], [,, \"NA\", \"NA\"], [,, \"87\\\\d{7}\", \"\\\\d{9}\",,, \"871234567\"], \"ZA\", 27, \"00\", \"0\",,, \"0\",,,, [[, \"(860)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-79]|8(?:[0-47]|6[1-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"861\\\\d{6}\", \"\\\\d{9}\",,, \"861123456\"],,, [,, \"NA\", \"NA\"]],\n    ZM: [, [,, \"[289]\\\\d{8}\", \"\\\\d{9}\"], [,, \"21[1-8]\\\\d{6}\", \"\\\\d{9}\",,, \"211234567\"], [,, \"9(?:5[05]|6\\\\d|7[1-9])\\\\d{6}\", \"\\\\d{9}\",,, \"955123456\"], [,, \"800\\\\d{6}\", \"\\\\d{9}\",,, \"800123456\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"ZM\", 260, \"00\", \"0\",,, \"0\",,,, [[, \"([29]\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[29]\"], \"0$1\"], [, \"(800)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    ZW: [, [,, \"2(?:[012457-9]\\\\d{3,8}|6(?:[14]\\\\d{7}|\\\\d{4}))|[13-79]\\\\d{4,9}|8[06]\\\\d{8}\", \"\\\\d{3,10}\"], [,, \"(?:2(?:0(?:4\\\\d|5\\\\d{2})|2[278]\\\\d|48\\\\d|7(?:[1-7]\\\\d|[089]\\\\d{2})|8(?:[2-57-9]|[146]\\\\d{2})|98)|3(?:08|17|3[78]|7(?:[19]|[56]\\\\d)|8[37]|98)|5[15][78]|6(?:28\\\\d{2}|[36]7|75\\\\d|[69]8|8(?:7\\\\d|8)))\\\\d{3}|(?:2(?:1[39]|2[0157]|6[14]|7[35]|84)|329)\\\\d{7}|(?:1(?:3\\\\d{2}|9\\\\d|[4-8])|2(?:0\\\\d{2}|[569]\\\\d)|3(?:[26]|[013459]\\\\d)|5(?:0|5\\\\d{2}|[689]\\\\d)|6(?:[39]|[01246]\\\\d|[78]\\\\d{2}))\\\\d{3}|(?:29\\\\d|39|54)\\\\d{6}|(?:(?:25|54)83|2582\\\\d)\\\\d{3}|(?:4\\\\d{6,7}|9[2-9]\\\\d{4,5})\", \"\\\\d{3,10}\",,, \"1312345\"], [,, \"7[1378]\\\\d{7}\", \"\\\\d{9}\",,, \"711234567\"], [,, \"800\\\\d{7}\", \"\\\\d{10}\",,, \"8001234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"86(?:1[12]|30|44|55|77|8[367]|99)\\\\d{6}\", \"\\\\d{10}\",,, \"8686123456\"], \"ZW\", 263, \"00\", \"0\",,, \"0\",,,, [[, \"([49])(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"4|9[2-9]\"], \"0$1\"], [, \"(7\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(86\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"86[24]\"], \"0$1\"], [, \"([2356]\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8|[78])|3(?:08|17|3[78]|7[1569]|8[37]|98)|5[15][78]|6(?:[29]8|[38]7|6[78]|75|[89]8)\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|6[14]|7[35]|84)|329\"], \"0$1\"], [, \"([1-356]\\\\d)(\\\\d{3,5})\", \"$1 $2\", [\"1[3-9]|2[0569]|3[0-69]|5[05689]|6[0-46-9]\"], \"0$1\"], [, \"([235]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[23]9|54\"], \"0$1\"], [, \"([25]\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258[23]|5483\"], \"0$1\"], [, \"(8\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"86\"], \"0$1\"], [, \"(80\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    800: [, [,, \"\\\\d{8}\", \"\\\\d{8}\",,, \"12345678\"], [,, \"NA\", \"NA\",,, \"12345678\"], [,, \"NA\", \"NA\",,, \"12345678\"], [,, \"\\\\d{8}\", \"\\\\d{8}\",,, \"12345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"001\", 800,,,,,,,, 1, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    808: [, [,, \"\\\\d{8}\", \"\\\\d{8}\",,, \"12345678\"], [,, \"NA\", \"NA\",,, \"12345678\"], [,, \"NA\", \"NA\",,, \"12345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"\\\\d{8}\", \"\\\\d{8}\",,, \"12345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"001\", 808,,,,,,,, 1, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]],\n    870: [, [,, \"[35-7]\\\\d{8}\", \"\\\\d{9}\",,, \"301234567\"], [,, \"NA\", \"NA\",,, \"301234567\"], [,, \"(?:[356]\\\\d|7[6-8])\\\\d{7}\", \"\\\\d{9}\",,, \"301234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"001\", 870,,,,,,,,, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    878: [, [,, \"1\\\\d{11}\", \"\\\\d{12}\",,, \"101234567890\"], [,, \"NA\", \"NA\",,, \"101234567890\"], [,, \"NA\", \"NA\",,, \"101234567890\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"10\\\\d{10}\", \"\\\\d{12}\",,, \"101234567890\"], \"001\", 878,,,,,,,, 1, [[, \"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    881: [, [,, \"[67]\\\\d{8}\", \"\\\\d{9}\",,, \"612345678\"], [,, \"NA\", \"NA\",,, \"612345678\"], [,, \"[67]\\\\d{8}\", \"\\\\d{9}\",,, \"612345678\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"001\", 881,,,,,,,,, [[, \"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[67]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    882: [, [,, \"[13]\\\\d{6,11}\", \"\\\\d{7,12}\",,, \"3451234567\"], [,, \"NA\", \"NA\",,, \"3451234567\"], [,, \"3(?:2\\\\d{3}|37\\\\d{2}|4(?:2|7\\\\d{3}))\\\\d{4}\", \"\\\\d{7,10}\",,, \"3451234567\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15678]|9[0689])\\\\d{4}|6\\\\d{5,10})|345\\\\d{7}\", \"\\\\d{7,12}\",,, \"3451234567\"], \"001\", 882,,,,,,,,, [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34[57]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"348\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"16\"]], [, \"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"16\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"348[57]\\\\d{7}\", \"\\\\d{11}\",,, \"3451234567\"]],\n    883: [, [,, \"51\\\\d{7}(?:\\\\d{3})?\", \"\\\\d{9}(?:\\\\d{3})?\",,, \"510012345\"], [,, \"NA\", \"NA\",,, \"510012345\"], [,, \"NA\", \"NA\",,, \"510012345\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"51(?:00\\\\d{5}(?:\\\\d{3})?|[13]0\\\\d{8})\", \"\\\\d{9}(?:\\\\d{3})?\",,, \"510012345\"], \"001\", 883,,,,,,,, 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"510\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"51[13]\"]]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"]],\n    888: [, [,, \"\\\\d{11}\", \"\\\\d{11}\",,, \"12345678901\"], [,, \"NA\", \"NA\",,, \"12345678901\"], [,, \"NA\", \"NA\",,, \"12345678901\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"001\", 888,,,,,,,, 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"\\\\d{11}\", \"\\\\d{11}\",,, \"12345678901\"], 1,, [,, \"NA\", \"NA\"]],\n    979: [, [,, \"\\\\d{9}\", \"\\\\d{9}\",,, \"123456789\"], [,, \"NA\", \"NA\",,, \"123456789\"], [,, \"NA\", \"NA\",,, \"123456789\"], [,, \"NA\", \"NA\"], [,, \"\\\\d{9}\", \"\\\\d{9}\",,, \"123456789\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], \"001\", 979,,,,,,,, 1, [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\"]],, [,, \"NA\", \"NA\"],,, [,, \"NA\", \"NA\"], [,, \"NA\", \"NA\"], 1,, [,, \"NA\", \"NA\"]]\n  };\n\n  w.a = function () {\n    return w.b ? w.b : w.b = new w();\n  };\n\n  var zd = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    \"０\": \"0\",\n    \"１\": \"1\",\n    \"２\": \"2\",\n    \"３\": \"3\",\n    \"４\": \"4\",\n    \"５\": \"5\",\n    \"６\": \"6\",\n    \"７\": \"7\",\n    \"８\": \"8\",\n    \"９\": \"9\",\n    \"٠\": \"0\",\n    \"١\": \"1\",\n    \"٢\": \"2\",\n    \"٣\": \"3\",\n    \"٤\": \"4\",\n    \"٥\": \"5\",\n    \"٦\": \"6\",\n    \"٧\": \"7\",\n    \"٨\": \"8\",\n    \"٩\": \"9\",\n    \"۰\": \"0\",\n    \"۱\": \"1\",\n    \"۲\": \"2\",\n    \"۳\": \"3\",\n    \"۴\": \"4\",\n    \"۵\": \"5\",\n    \"۶\": \"6\",\n    \"۷\": \"7\",\n    \"۸\": \"8\",\n    \"۹\": \"9\"\n  },\n      qd = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    \"+\": \"+\",\n    \"*\": \"*\"\n  },\n      dA = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    \"０\": \"0\",\n    \"１\": \"1\",\n    \"２\": \"2\",\n    \"３\": \"3\",\n    \"４\": \"4\",\n    \"５\": \"5\",\n    \"６\": \"6\",\n    \"７\": \"7\",\n    \"８\": \"8\",\n    \"９\": \"9\",\n    \"٠\": \"0\",\n    \"١\": \"1\",\n    \"٢\": \"2\",\n    \"٣\": \"3\",\n    \"٤\": \"4\",\n    \"٥\": \"5\",\n    \"٦\": \"6\",\n    \"٧\": \"7\",\n    \"٨\": \"8\",\n    \"٩\": \"9\",\n    \"۰\": \"0\",\n    \"۱\": \"1\",\n    \"۲\": \"2\",\n    \"۳\": \"3\",\n    \"۴\": \"4\",\n    \"۵\": \"5\",\n    \"۶\": \"6\",\n    \"۷\": \"7\",\n    \"۸\": \"8\",\n    \"۹\": \"9\",\n    A: \"2\",\n    B: \"2\",\n    C: \"2\",\n    D: \"3\",\n    E: \"3\",\n    F: \"3\",\n    G: \"4\",\n    H: \"4\",\n    I: \"4\",\n    J: \"5\",\n    K: \"5\",\n    L: \"5\",\n    M: \"6\",\n    N: \"6\",\n    O: \"6\",\n    P: \"7\",\n    Q: \"7\",\n    R: \"7\",\n    S: \"7\",\n    T: \"8\",\n    U: \"8\",\n    V: \"8\",\n    W: \"9\",\n    X: \"9\",\n    Y: \"9\",\n    Z: \"9\"\n  },\n      AA = /[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?/,\n      NA = (RegExp(\"[+＋]+\"), RegExp(\"^[+＋]+\")),\n      $A = RegExp(\"([0-9０-９٠-٩۰-۹])\"),\n      eA = RegExp(\"[+＋0-9０-９٠-٩۰-۹]\"),\n      nA = /[\\\\\\/] *x/,\n      tA = RegExp(\"[^0-9０-９٠-٩۰-۹A-Za-z#]+$\"),\n      rA = /(?:.*?[A-Za-z]){3}.*/,\n      aA = RegExp(\"(?:;ext=([0-9０-９٠-٩۰-۹]{1,7})|[  \\\\t,]*(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|[,xｘ#＃~～]|int|anexo|ｉｎｔ)[:\\\\.．]?[  \\\\t,-]*([0-9０-９٠-٩۰-۹]{1,7})#?|[- ]+([0-9０-９٠-٩۰-۹]{1,5})#)$\", \"i\"),\n      iA = RegExp(\"^[0-9０-９٠-٩۰-۹]{2}$|^[+＋]*(?:[-x‐-―−ー－-／  ­​⁠　()（）［］.\\\\[\\\\]/~⁓∼～*]*[0-9０-９٠-٩۰-۹]){3,}[-x‐-―−ー－-／  ­​⁠　()（）［］.\\\\[\\\\]/~⁓∼～*A-Za-z0-9０-９٠-٩۰-۹]*(?:;ext=([0-9０-９٠-٩۰-۹]{1,7})|[  \\\\t,]*(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|[,xｘ#＃~～]|int|anexo|ｉｎｔ)[:\\\\.．]?[  \\\\t,-]*([0-9０-９٠-٩۰-۹]{1,7})#?|[- ]+([0-9０-９٠-٩۰-۹]{1,5})#)?$\", \"i\"),\n      oA = /(\\$\\d)/,\n      uA = /\\$NP/,\n      lA = /\\$FG/,\n      fA = /\\$CC/,\n      cA = new K();\n  T(cA, 11, \"NA\");\n  var sA = (RegExp(\"^[-x‐-―−ー－-／  ­​⁠　()（）［］.\\\\[\\\\]/~⁓∼～]*(\\\\$\\\\d[-x‐-―−ー－-／  ­​⁠　()（）［］.\\\\[\\\\]/~⁓∼～]*)+$\"), [\"phoneNumberParser\"]),\n      pA = Sd;\n  sA[0] in pA || !pA.execScript || pA.execScript(\"var \" + sA[0]);\n\n  for (var hA; sA.length && (hA = sA.shift());) {\n    var gA;\n    (gA = !sA.length) && (gA = void 0 !== Cd), gA ? pA[hA] = Cd : pA = pA[hA] ? pA[hA] : pA[hA] = {};\n  }\n}();\n$('.input-phone').intlInputPhone();\n\n//# sourceURL=webpack:///./intlInputPhone.js?");

/***/ }),

/***/ "./jquery.selectric.js":
/*!*****************************!*\
  !*** ./jquery.selectric.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (factory) {\n  /* global define */\n\n  /* istanbul ignore next */\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"../node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function ($) {\n  'use strict';\n\n  var $doc = $(document);\n  var $win = $(window);\n  var pluginName = 'selectric';\n  var classList = 'Input Items Open Disabled TempShow HideSelect Wrapper Focus Hover Responsive Above Below Scroll Group GroupLabel';\n  var eventNamespaceSuffix = '.sl';\n  var chars = ['a', 'e', 'i', 'o', 'u', 'n', 'c', 'y'];\n  var diacritics = [/[\\xE0-\\xE5]/g, // a\n  /[\\xE8-\\xEB]/g, // e\n  /[\\xEC-\\xEF]/g, // i\n  /[\\xF2-\\xF6]/g, // o\n  /[\\xF9-\\xFC]/g, // u\n  /[\\xF1]/g, // n\n  /[\\xE7]/g, // c\n  /[\\xFD-\\xFF]/g // y\n  ];\n  /**\n   * Create an instance of Selectric\n   *\n   * @constructor\n   * @param {Node} element - The &lt;select&gt; element\n   * @param {object}  opts - Options\n   */\n\n  var Selectric = function Selectric(element, opts) {\n    var _this = this;\n\n    _this.element = element;\n    _this.$element = $(element);\n    _this.state = {\n      multiple: !!_this.$element.attr('multiple'),\n      enabled: false,\n      opened: false,\n      currValue: -1,\n      selectedIdx: -1,\n      highlightedIdx: -1\n    };\n    _this.eventTriggers = {\n      open: _this.open,\n      close: _this.close,\n      destroy: _this.destroy,\n      refresh: _this.refresh,\n      init: _this.init\n    };\n\n    _this.init(opts);\n  };\n\n  Selectric.prototype = {\n    utils: {\n      /**\n       * Detect mobile browser\n       *\n       * @return {boolean}\n       */\n      isMobile: function isMobile() {\n        return /android|ip(hone|od|ad)/i.test(navigator.userAgent);\n      },\n\n      /**\n       * Escape especial characters in string (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n       *\n       * @param  {string} str - The string to be escaped\n       * @return {string}       The string with the special characters escaped\n       */\n      escapeRegExp: function escapeRegExp(str) {\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n      },\n\n      /**\n       * Replace diacritics\n       *\n       * @param  {string} str - The string to replace the diacritics\n       * @return {string}       The string with diacritics replaced with ascii characters\n       */\n      replaceDiacritics: function replaceDiacritics(str) {\n        var k = diacritics.length;\n\n        while (k--) {\n          str = str.toLowerCase().replace(diacritics[k], chars[k]);\n        }\n\n        return str;\n      },\n\n      /**\n       * Format string\n       * https://gist.github.com/atesgoral/984375\n       *\n       * @param  {string} f - String to be formated\n       * @return {string}     String formated\n       */\n      format: function format(f) {\n        var a = arguments; // store outer arguments\n\n        return ('' + f). // force format specifier to String\n        replace( // replace tokens in format specifier\n        /\\{(?:(\\d+)|(\\w+))\\}/g, // match {token} references\n        function (s, // the matched string (ignored)\n        i, // an argument index\n        p // a property name\n        ) {\n          return p && a[1] // if property name and first argument exist\n          ? a[1][p] // return property from first argument\n          : a[i]; // assume argument index and return i-th argument\n        });\n      },\n\n      /**\n       * Get the next enabled item in the options list.\n       *\n       * @param  {object} selectItems - The options object.\n       * @param  {number}    selected - Index of the currently selected option.\n       * @return {object}               The next enabled item.\n       */\n      nextEnabledItem: function nextEnabledItem(selectItems, selected) {\n        while (selectItems[selected = (selected + 1) % selectItems.length].disabled) {// empty\n        }\n\n        return selected;\n      },\n\n      /**\n       * Get the previous enabled item in the options list.\n       *\n       * @param  {object} selectItems - The options object.\n       * @param  {number}    selected - Index of the currently selected option.\n       * @return {object}               The previous enabled item.\n       */\n      previousEnabledItem: function previousEnabledItem(selectItems, selected) {\n        while (selectItems[selected = (selected > 0 ? selected : selectItems.length) - 1].disabled) {// empty\n        }\n\n        return selected;\n      },\n\n      /**\n       * Transform camelCase string to dash-case.\n       *\n       * @param  {string} str - The camelCased string.\n       * @return {string}       The string transformed to dash-case.\n       */\n      toDash: function toDash(str) {\n        return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n      },\n\n      /**\n       * Calls the events registered with function name.\n       *\n       * @param {string}    fn - The name of the function.\n       * @param {number} scope - Scope that should be set on the function.\n       */\n      triggerCallback: function triggerCallback(fn, scope) {\n        var elm = scope.element;\n        var func = scope.options['on' + fn];\n        var args = [elm].concat([].slice.call(arguments).slice(1));\n\n        if ($.isFunction(func)) {\n          func.apply(elm, args);\n        }\n\n        $(elm).trigger(pluginName + '-' + this.toDash(fn), args);\n      },\n\n      /**\n       * Transform array list to concatenated string and remove empty values\n       * @param  {array} arr - Class list\n       * @return {string}      Concatenated string\n       */\n      arrayToClassname: function arrayToClassname(arr) {\n        var newArr = $.grep(arr, function (item) {\n          return !!item;\n        });\n        return $.trim(newArr.join(' '));\n      }\n    },\n\n    /** Initializes */\n    init: function init(opts) {\n      var _this = this; // Set options\n\n\n      _this.options = $.extend(true, {}, $.fn[pluginName].defaults, _this.options, opts);\n\n      _this.utils.triggerCallback('BeforeInit', _this); // Preserve data\n\n\n      _this.destroy(true); // Disable on mobile browsers\n\n\n      if (_this.options.disableOnMobile && _this.utils.isMobile()) {\n        _this.disableOnMobile = true;\n        return;\n      } // Get classes\n\n\n      _this.classes = _this.getClassNames(); // Create elements\n\n      var input = $('<input/>', {\n        'class': _this.classes.input,\n        'readonly': _this.utils.isMobile()\n      });\n      var items = $('<div/>', {\n        'class': _this.classes.items,\n        'tabindex': -1\n      });\n      var itemsScroll = $('<div/>', {\n        'class': _this.classes.scroll\n      });\n      var wrapper = $('<div/>', {\n        'class': _this.classes.prefix,\n        'html': _this.options.arrowButtonMarkup\n      });\n      var label = $('<span/>', {\n        'class': 'label'\n      });\n\n      var outerWrapper = _this.$element.wrap('<div/>').parent().append(wrapper.prepend(label), items, input);\n\n      var hideSelectWrapper = $('<div/>', {\n        'class': _this.classes.hideselect\n      });\n      _this.elements = {\n        input: input,\n        items: items,\n        itemsScroll: itemsScroll,\n        wrapper: wrapper,\n        label: label,\n        outerWrapper: outerWrapper\n      };\n\n      if (_this.options.nativeOnMobile && _this.utils.isMobile()) {\n        _this.elements.input = undefined;\n        hideSelectWrapper.addClass(_this.classes.prefix + '-is-native');\n\n        _this.$element.on('change', function () {\n          _this.refresh();\n        });\n      }\n\n      _this.$element.on(_this.eventTriggers).wrap(hideSelectWrapper);\n\n      _this.originalTabindex = _this.$element.prop('tabindex');\n\n      _this.$element.prop('tabindex', -1);\n\n      _this.populate();\n\n      _this.activate();\n\n      _this.utils.triggerCallback('Init', _this);\n    },\n\n    /** Activates the plugin */\n    activate: function activate() {\n      var _this = this;\n\n      var hiddenChildren = _this.elements.items.closest(':visible').children(':hidden').addClass(_this.classes.tempshow);\n\n      var originalWidth = _this.$element.width();\n\n      hiddenChildren.removeClass(_this.classes.tempshow);\n\n      _this.utils.triggerCallback('BeforeActivate', _this);\n\n      _this.elements.outerWrapper.prop('class', _this.utils.arrayToClassname([_this.classes.wrapper, _this.$element.prop('class').replace(/\\S+/g, _this.classes.prefix + '-$&'), _this.options.responsive ? _this.classes.responsive : '']));\n\n      if (_this.options.inheritOriginalWidth && originalWidth > 0) {\n        _this.elements.outerWrapper.width(originalWidth);\n      }\n\n      _this.unbindEvents();\n\n      if (!_this.$element.prop('disabled')) {\n        _this.state.enabled = true; // Not disabled, so... Removing disabled class\n\n        _this.elements.outerWrapper.removeClass(_this.classes.disabled); // Remove styles from items box\n        // Fix incorrect height when refreshed is triggered with fewer options\n\n\n        _this.$li = _this.elements.items.removeAttr('style').find('li');\n\n        _this.bindEvents();\n      } else {\n        _this.elements.outerWrapper.addClass(_this.classes.disabled);\n\n        if (_this.elements.input) {\n          _this.elements.input.prop('disabled', true);\n        }\n      }\n\n      _this.utils.triggerCallback('Activate', _this);\n    },\n\n    /**\n     * Generate classNames for elements\n     *\n     * @return {object} Classes object\n     */\n    getClassNames: function getClassNames() {\n      var _this = this;\n\n      var customClass = _this.options.customClass;\n      var classesObj = {};\n      $.each(classList.split(' '), function (i, currClass) {\n        var c = customClass.prefix + currClass;\n        classesObj[currClass.toLowerCase()] = customClass.camelCase ? c : _this.utils.toDash(c);\n      });\n      classesObj.prefix = customClass.prefix;\n      return classesObj;\n    },\n\n    /** Set the label text */\n    setLabel: function setLabel() {\n      var _this = this;\n\n      var labelBuilder = _this.options.labelBuilder;\n\n      if (_this.state.multiple) {\n        // Make sure currentValues is an array\n        var currentValues = $.isArray(_this.state.currValue) ? _this.state.currValue : [_this.state.currValue]; // I'm not happy with this, but currentValues can be an empty\n        // array and we need to fallback to the default option.\n\n        currentValues = currentValues.length === 0 ? [0] : currentValues;\n        var labelMarkup = $.map(currentValues, function (value) {\n          return $.grep(_this.lookupItems, function (item) {\n            return item.index === value;\n          })[0]; // we don't want nested arrays here\n        });\n        labelMarkup = $.grep(labelMarkup, function (item) {\n          // Hide default (please choose) if more then one element were selected.\n          // If no option value were given value is set to option text by default\n          if (labelMarkup.length > 1 || labelMarkup.length === 0) {\n            return $.trim(item.value) !== '';\n          }\n\n          return item;\n        });\n        labelMarkup = $.map(labelMarkup, function (item) {\n          return $.isFunction(labelBuilder) ? labelBuilder(item) : _this.utils.format(labelBuilder, item);\n        }); // Limit the amount of selected values shown in label\n\n        if (_this.options.multiple.maxLabelEntries) {\n          if (labelMarkup.length >= _this.options.multiple.maxLabelEntries + 1) {\n            labelMarkup = labelMarkup.slice(0, _this.options.multiple.maxLabelEntries);\n            labelMarkup.push($.isFunction(labelBuilder) ? labelBuilder({\n              text: '...'\n            }) : _this.utils.format(labelBuilder, {\n              text: '...'\n            }));\n          } else {\n            labelMarkup.slice(labelMarkup.length - 1);\n          }\n        }\n\n        _this.elements.label.html(labelMarkup.join(_this.options.multiple.separator));\n      } else {\n        var currItem = _this.lookupItems[_this.state.currValue];\n\n        _this.elements.label.html($.isFunction(labelBuilder) ? labelBuilder(currItem) : _this.utils.format(labelBuilder, currItem));\n      }\n    },\n\n    /** Get and save the available options */\n    populate: function populate() {\n      var _this = this;\n\n      var $options = _this.$element.children();\n\n      var $justOptions = _this.$element.find('option');\n\n      var $selected = $justOptions.filter(':selected');\n      var selectedIndex = $justOptions.index($selected);\n      var currIndex = 0;\n      var emptyValue = _this.state.multiple ? [] : 0;\n\n      if ($selected.length > 1 && _this.state.multiple) {\n        selectedIndex = [];\n        $selected.each(function () {\n          selectedIndex.push($(this).index());\n        });\n      }\n\n      _this.state.currValue = ~selectedIndex ? selectedIndex : emptyValue;\n      _this.state.selectedIdx = _this.state.currValue;\n      _this.state.highlightedIdx = _this.state.currValue;\n      _this.items = [];\n      _this.lookupItems = [];\n\n      if ($options.length) {\n        // Build options markup\n        $options.each(function (i) {\n          var $elm = $(this);\n\n          if ($elm.is('optgroup')) {\n            var optionsGroup = {\n              element: $elm,\n              label: $elm.prop('label'),\n              groupDisabled: $elm.prop('disabled'),\n              items: []\n            };\n            $elm.children().each(function (i) {\n              var $elm = $(this);\n              optionsGroup.items[i] = _this.getItemData(currIndex, $elm, optionsGroup.groupDisabled || $elm.prop('disabled'));\n              _this.lookupItems[currIndex] = optionsGroup.items[i];\n              currIndex++;\n            });\n            _this.items[i] = optionsGroup;\n          } else {\n            _this.items[i] = _this.getItemData(currIndex, $elm, $elm.prop('disabled'));\n            _this.lookupItems[currIndex] = _this.items[i];\n            currIndex++;\n          }\n        });\n\n        _this.setLabel();\n\n        _this.elements.items.append(_this.elements.itemsScroll.html(_this.getItemsMarkup(_this.items)));\n      }\n    },\n\n    /**\n     * Generate items object data\n     * @param  {integer} index      - Current item index\n     * @param  {node}    $elm       - Current element node\n     * @param  {boolean} isDisabled - Current element disabled state\n     * @return {object}               Item object\n     */\n    getItemData: function getItemData(index, $elm, isDisabled) {\n      var _this = this;\n\n      return {\n        index: index,\n        element: $elm,\n        value: $elm.val(),\n        className: $elm.prop('class'),\n        text: $elm.html(),\n        slug: $.trim(_this.utils.replaceDiacritics($elm.html())),\n        alt: $elm.attr('data-alt'),\n        selected: $elm.prop('selected'),\n        disabled: isDisabled\n      };\n    },\n\n    /**\n     * Generate options markup\n     *\n     * @param  {object} items - Object containing all available options\n     * @return {string}         HTML for the options box\n     */\n    getItemsMarkup: function getItemsMarkup(items) {\n      var _this = this;\n\n      var markup = '<ul>';\n\n      if ($.isFunction(_this.options.listBuilder) && _this.options.listBuilder) {\n        items = _this.options.listBuilder(items);\n      }\n\n      $.each(items, function (i, elm) {\n        if (elm.label !== undefined) {\n          markup += _this.utils.format('<ul class=\"{1}\"><li class=\"{2}\">{3}</li>', _this.utils.arrayToClassname([_this.classes.group, elm.groupDisabled ? 'disabled' : '', elm.element.prop('class')]), _this.classes.grouplabel, elm.element.prop('label'));\n          $.each(elm.items, function (i, elm) {\n            markup += _this.getItemMarkup(elm.index, elm);\n          });\n          markup += '</ul>';\n        } else {\n          markup += _this.getItemMarkup(elm.index, elm);\n        }\n      });\n      return markup + '</ul>';\n    },\n\n    /**\n     * Generate every option markup\n     *\n     * @param  {number} index    - Index of current item\n     * @param  {object} itemData - Current item\n     * @return {string}            HTML for the option\n     */\n    getItemMarkup: function getItemMarkup(index, itemData) {\n      var _this = this;\n\n      var itemBuilder = _this.options.optionsItemBuilder; // limit access to item data to provide a simple interface\n      // to most relevant options.\n\n      var filteredItemData = {\n        value: itemData.value,\n        text: itemData.text,\n        slug: itemData.slug,\n        index: itemData.index\n      };\n      return _this.utils.format('<li data-index=\"{1}\" class=\"{2}\">{3}</li>', index, _this.utils.arrayToClassname([itemData.className, index === _this.items.length - 1 ? 'last' : '', itemData.disabled ? 'disabled' : '', itemData.selected ? 'selected' : '']), $.isFunction(itemBuilder) ? _this.utils.format(itemBuilder(itemData, this.$element, index), itemData) : _this.utils.format(itemBuilder, filteredItemData));\n    },\n\n    /** Remove events on the elements */\n    unbindEvents: function unbindEvents() {\n      var _this = this;\n\n      _this.elements.wrapper.add(_this.$element).add(_this.elements.outerWrapper).add(_this.elements.input).off(eventNamespaceSuffix);\n    },\n\n    /** Bind events on the elements */\n    bindEvents: function bindEvents() {\n      var _this = this;\n\n      _this.elements.outerWrapper.on('mouseenter' + eventNamespaceSuffix + ' mouseleave' + eventNamespaceSuffix, function (e) {\n        $(this).toggleClass(_this.classes.hover, e.type === 'mouseenter'); // Delay close effect when openOnHover is true\n\n        if (_this.options.openOnHover) {\n          clearTimeout(_this.closeTimer);\n\n          if (e.type === 'mouseleave') {\n            _this.closeTimer = setTimeout($.proxy(_this.close, _this), _this.options.hoverIntentTimeout);\n          } else {\n            _this.open();\n          }\n        }\n      }); // Toggle open/close\n\n\n      _this.elements.wrapper.on('click' + eventNamespaceSuffix, function (e) {\n        _this.state.opened ? _this.close() : _this.open(e);\n      }); // Translate original element focus event to dummy input.\n      // Disabled on mobile devices because the default option list isn't\n      // shown due the fact that hidden input gets focused\n\n\n      if (!(_this.options.nativeOnMobile && _this.utils.isMobile())) {\n        _this.$element.on('focus' + eventNamespaceSuffix, function () {\n          _this.elements.input.focus();\n        });\n\n        _this.elements.input.prop({\n          tabindex: _this.originalTabindex,\n          disabled: false\n        }).on('keydown' + eventNamespaceSuffix, $.proxy(_this.handleKeys, _this)).on('focusin' + eventNamespaceSuffix, function (e) {\n          _this.elements.outerWrapper.addClass(_this.classes.focus); // Prevent the flicker when focusing out and back again in the browser window\n\n\n          _this.elements.input.one('blur', function () {\n            _this.elements.input.blur();\n          });\n\n          if (_this.options.openOnFocus && !_this.state.opened) {\n            _this.open(e);\n          }\n        }).on('focusout' + eventNamespaceSuffix, function () {\n          _this.elements.outerWrapper.removeClass(_this.classes.focus);\n        }).on('input propertychange', function () {\n          var val = _this.elements.input.val();\n\n          var searchRegExp = new RegExp('^' + _this.utils.escapeRegExp(val), 'i'); // Clear search\n\n          clearTimeout(_this.resetStr);\n          _this.resetStr = setTimeout(function () {\n            _this.elements.input.val('');\n          }, _this.options.keySearchTimeout);\n\n          if (val.length) {\n            // Search in select options\n            $.each(_this.items, function (i, elm) {\n              if (elm.disabled) {\n                return;\n              }\n\n              if (searchRegExp.test(elm.text) || searchRegExp.test(elm.slug)) {\n                _this.highlight(i);\n\n                return false;\n              }\n\n              if (!elm.alt) {\n                return;\n              }\n\n              var altItems = elm.alt.split('|');\n\n              for (var ai = 0; ai < altItems.length; ai++) {\n                if (!altItems[ai]) {\n                  break;\n                }\n\n                if (searchRegExp.test(altItems[ai].trim())) {\n                  _this.highlight(i);\n\n                  return false;\n                }\n              }\n            });\n          }\n        });\n      }\n\n      _this.$li.on({\n        // Prevent <input> blur on Chrome\n        mousedown: function mousedown(e) {\n          e.preventDefault();\n          e.stopPropagation();\n        },\n        click: function click() {\n          _this.select($(this).data('index')); // Chrome doesn't close options box if select is wrapped with a label\n          // We need to 'return false' to avoid that\n\n\n          return false;\n        }\n      });\n    },\n\n    /**\n     * Behavior when keyboard keys is pressed\n     *\n     * @param {object} e - Event object\n     */\n    handleKeys: function handleKeys(e) {\n      var _this = this;\n\n      var key = e.which;\n      var keys = _this.options.keys;\n      var isPrevKey = $.inArray(key, keys.previous) > -1;\n      var isNextKey = $.inArray(key, keys.next) > -1;\n      var isSelectKey = $.inArray(key, keys.select) > -1;\n      var isOpenKey = $.inArray(key, keys.open) > -1;\n      var idx = _this.state.highlightedIdx;\n      var isFirstOrLastItem = isPrevKey && idx === 0 || isNextKey && idx + 1 === _this.items.length;\n      var goToItem = 0; // Enter / Space\n\n      if (key === 13 || key === 32) {\n        e.preventDefault();\n      } // If it's a directional key\n\n\n      if (isPrevKey || isNextKey) {\n        if (!_this.options.allowWrap && isFirstOrLastItem) {\n          return;\n        }\n\n        if (isPrevKey) {\n          goToItem = _this.utils.previousEnabledItem(_this.lookupItems, idx);\n        }\n\n        if (isNextKey) {\n          goToItem = _this.utils.nextEnabledItem(_this.lookupItems, idx);\n        }\n\n        _this.highlight(goToItem);\n      } // Tab / Enter / ESC\n\n\n      if (isSelectKey && _this.state.opened) {\n        _this.select(idx);\n\n        if (!_this.state.multiple || !_this.options.multiple.keepMenuOpen) {\n          _this.close();\n        }\n\n        return;\n      } // Space / Enter / Left / Up / Right / Down\n\n\n      if (isOpenKey && !_this.state.opened) {\n        _this.open();\n      }\n    },\n\n    /** Update the items object */\n    refresh: function refresh() {\n      var _this = this;\n\n      _this.populate();\n\n      _this.activate();\n\n      _this.utils.triggerCallback('Refresh', _this);\n    },\n\n    /** Set options box width/height */\n    setOptionsDimensions: function setOptionsDimensions() {\n      var _this = this; // Calculate options box height\n      // Set a temporary class on the hidden parent of the element\n\n\n      var hiddenChildren = _this.elements.items.closest(':visible').children(':hidden').addClass(_this.classes.tempshow);\n\n      var maxHeight = _this.options.maxHeight;\n\n      var itemsWidth = _this.elements.items.outerWidth();\n\n      var wrapperWidth = _this.elements.wrapper.outerWidth() - (itemsWidth - _this.elements.items.width()); // Set the dimensions, minimum is wrapper width, expand for long items if option is true\n\n\n      if (!_this.options.expandToItemText || wrapperWidth > itemsWidth) {\n        _this.finalWidth = wrapperWidth;\n      } else {\n        // Make sure the scrollbar width is included\n        _this.elements.items.css('overflow', 'scroll'); // Set a really long width for _this.elements.outerWrapper\n\n\n        _this.elements.outerWrapper.width(9e4);\n\n        _this.finalWidth = _this.elements.items.width(); // Set scroll bar to auto\n\n        _this.elements.items.css('overflow', '');\n\n        _this.elements.outerWrapper.width('');\n      }\n\n      _this.elements.items.width(_this.finalWidth).height() > maxHeight && _this.elements.items.height(maxHeight); // Remove the temporary class\n\n      hiddenChildren.removeClass(_this.classes.tempshow);\n    },\n\n    /** Detect if the options box is inside the window */\n    isInViewport: function isInViewport() {\n      var _this = this;\n\n      if (_this.options.forceRenderAbove === true) {\n        _this.elements.outerWrapper.addClass(_this.classes.above);\n      } else if (_this.options.forceRenderBelow === true) {\n        _this.elements.outerWrapper.addClass(_this.classes.below);\n      } else {\n        var scrollTop = $win.scrollTop();\n        var winHeight = $win.height();\n\n        var uiPosX = _this.elements.outerWrapper.offset().top;\n\n        var uiHeight = _this.elements.outerWrapper.outerHeight();\n\n        var fitsDown = uiPosX + uiHeight + _this.itemsHeight <= scrollTop + winHeight;\n        var fitsAbove = uiPosX - _this.itemsHeight > scrollTop; // If it does not fit below, only render it\n        // above it fit's there.\n        // It's acceptable that the user needs to\n        // scroll the viewport to see the cut off UI\n\n        var renderAbove = !fitsDown && fitsAbove;\n        var renderBelow = !renderAbove;\n\n        _this.elements.outerWrapper.toggleClass(_this.classes.above, renderAbove);\n\n        _this.elements.outerWrapper.toggleClass(_this.classes.below, renderBelow);\n      }\n    },\n\n    /**\n     * Detect if currently selected option is visible and scroll the options box to show it\n     *\n     * @param {Number|Array} index - Index of the selected items\n     */\n    detectItemVisibility: function detectItemVisibility(index) {\n      var _this = this;\n\n      var $filteredLi = _this.$li.filter('[data-index]');\n\n      if (_this.state.multiple) {\n        // If index is an array, we can assume a multiple select and we\n        // want to scroll to the uppermost selected item!\n        // Math.min.apply(Math, index) returns the lowest entry in an Array.\n        index = $.isArray(index) && index.length === 0 ? 0 : index;\n        index = $.isArray(index) ? Math.min.apply(Math, index) : index;\n      }\n\n      var liHeight = $filteredLi.eq(index).outerHeight();\n      var liTop = $filteredLi[index].offsetTop;\n\n      var itemsScrollTop = _this.elements.itemsScroll.scrollTop();\n\n      var scrollT = liTop + liHeight * 2;\n\n      _this.elements.itemsScroll.scrollTop(scrollT > itemsScrollTop + _this.itemsHeight ? scrollT - _this.itemsHeight : liTop - liHeight < itemsScrollTop ? liTop - liHeight : itemsScrollTop);\n    },\n\n    /**\n     * Open the select options box\n     *\n     * @param {Event} e - Event\n     */\n    open: function open(e) {\n      var _this = this;\n\n      if (_this.options.nativeOnMobile && _this.utils.isMobile()) {\n        return false;\n      }\n\n      _this.utils.triggerCallback('BeforeOpen', _this);\n\n      if (e) {\n        e.preventDefault();\n\n        if (_this.options.stopPropagation) {\n          e.stopPropagation();\n        }\n      }\n\n      if (_this.state.enabled) {\n        _this.setOptionsDimensions(); // Find any other opened instances of select and close it\n\n\n        $('.' + _this.classes.hideselect, '.' + _this.classes.open).children()[pluginName]('close');\n        _this.state.opened = true;\n        _this.itemsHeight = _this.elements.items.outerHeight();\n        _this.itemsInnerHeight = _this.elements.items.height(); // Toggle options box visibility\n\n        _this.elements.outerWrapper.addClass(_this.classes.open); // Give dummy input focus\n\n\n        _this.elements.input.val('');\n\n        if (e && e.type !== 'focusin') {\n          _this.elements.input.focus();\n        } // Delayed binds events on Document to make label clicks work\n\n\n        setTimeout(function () {\n          $doc.on('click' + eventNamespaceSuffix, $.proxy(_this.close, _this)).on('scroll' + eventNamespaceSuffix, $.proxy(_this.isInViewport, _this));\n        }, 1);\n\n        _this.isInViewport(); // Prevent window scroll when using mouse wheel inside items box\n\n\n        if (_this.options.preventWindowScroll) {\n          /* istanbul ignore next */\n          $doc.on('mousewheel' + eventNamespaceSuffix + ' DOMMouseScroll' + eventNamespaceSuffix, '.' + _this.classes.scroll, function (e) {\n            var orgEvent = e.originalEvent;\n            var scrollTop = $(this).scrollTop();\n            var deltaY = 0;\n\n            if ('detail' in orgEvent) {\n              deltaY = orgEvent.detail * -1;\n            }\n\n            if ('wheelDelta' in orgEvent) {\n              deltaY = orgEvent.wheelDelta;\n            }\n\n            if ('wheelDeltaY' in orgEvent) {\n              deltaY = orgEvent.wheelDeltaY;\n            }\n\n            if ('deltaY' in orgEvent) {\n              deltaY = orgEvent.deltaY * -1;\n            }\n\n            if (scrollTop === this.scrollHeight - _this.itemsInnerHeight && deltaY < 0 || scrollTop === 0 && deltaY > 0) {\n              e.preventDefault();\n            }\n          });\n        }\n\n        _this.detectItemVisibility(_this.state.selectedIdx);\n\n        _this.highlight(_this.state.multiple ? -1 : _this.state.selectedIdx);\n\n        _this.utils.triggerCallback('Open', _this);\n      }\n    },\n\n    /** Close the select options box */\n    close: function close() {\n      var _this = this;\n\n      _this.utils.triggerCallback('BeforeClose', _this); // Remove custom events on document\n\n\n      $doc.off(eventNamespaceSuffix); // Remove visible class to hide options box\n\n      _this.elements.outerWrapper.removeClass(_this.classes.open);\n\n      _this.state.opened = false;\n\n      _this.utils.triggerCallback('Close', _this);\n    },\n\n    /** Select current option and change the label */\n    change: function change() {\n      var _this = this;\n\n      _this.utils.triggerCallback('BeforeChange', _this);\n\n      if (_this.state.multiple) {\n        // Reset old selected\n        $.each(_this.lookupItems, function (idx) {\n          _this.lookupItems[idx].selected = false;\n\n          _this.$element.find('option').prop('selected', false);\n        }); // Set new selected\n\n        $.each(_this.state.selectedIdx, function (idx, value) {\n          _this.lookupItems[value].selected = true;\n\n          _this.$element.find('option').eq(value).prop('selected', true);\n        });\n        _this.state.currValue = _this.state.selectedIdx;\n\n        _this.setLabel();\n\n        _this.utils.triggerCallback('Change', _this);\n      } else if (_this.state.currValue !== _this.state.selectedIdx) {\n        // Apply changed value to original select\n        _this.$element.prop('selectedIndex', _this.state.currValue = _this.state.selectedIdx).data('value', _this.lookupItems[_this.state.selectedIdx].text); // Change label text\n\n\n        _this.setLabel();\n\n        _this.utils.triggerCallback('Change', _this);\n      }\n    },\n\n    /**\n     * Highlight option\n     * @param {number} index - Index of the options that will be highlighted\n     */\n    highlight: function highlight(index) {\n      var _this = this;\n\n      var $filteredLi = _this.$li.filter('[data-index]').removeClass('highlighted');\n\n      _this.utils.triggerCallback('BeforeHighlight', _this); // Parameter index is required and should not be a disabled item\n\n\n      if (index === undefined || index === -1 || _this.lookupItems[index].disabled) {\n        return;\n      }\n\n      $filteredLi.eq(_this.state.highlightedIdx = index).addClass('highlighted');\n\n      _this.detectItemVisibility(index);\n\n      _this.utils.triggerCallback('Highlight', _this);\n    },\n\n    /**\n     * Select option\n     *\n     * @param {number} index - Index of the option that will be selected\n     */\n    select: function select(index) {\n      var _this = this;\n\n      var $filteredLi = _this.$li.filter('[data-index]');\n\n      _this.utils.triggerCallback('BeforeSelect', _this, index); // Parameter index is required and should not be a disabled item\n\n\n      if (index === undefined || index === -1 || _this.lookupItems[index].disabled) {\n        return;\n      }\n\n      if (_this.state.multiple) {\n        // Make sure selectedIdx is an array\n        _this.state.selectedIdx = $.isArray(_this.state.selectedIdx) ? _this.state.selectedIdx : [_this.state.selectedIdx];\n        var hasSelectedIndex = $.inArray(index, _this.state.selectedIdx);\n\n        if (hasSelectedIndex !== -1) {\n          _this.state.selectedIdx.splice(hasSelectedIndex, 1);\n        } else {\n          _this.state.selectedIdx.push(index);\n        }\n\n        $filteredLi.removeClass('selected').filter(function (index) {\n          return $.inArray(index, _this.state.selectedIdx) !== -1;\n        }).addClass('selected');\n      } else {\n        $filteredLi.removeClass('selected').eq(_this.state.selectedIdx = index).addClass('selected');\n      }\n\n      if (!_this.state.multiple || !_this.options.multiple.keepMenuOpen) {\n        _this.close();\n      }\n\n      _this.change();\n\n      _this.utils.triggerCallback('Select', _this, index);\n    },\n\n    /**\n     * Unbind and remove\n     *\n     * @param {boolean} preserveData - Check if the data on the element should be removed too\n     */\n    destroy: function destroy(preserveData) {\n      var _this = this;\n\n      if (_this.state && _this.state.enabled) {\n        _this.elements.items.add(_this.elements.wrapper).add(_this.elements.input).remove();\n\n        if (!preserveData) {\n          _this.$element.removeData(pluginName).removeData('value');\n        }\n\n        _this.$element.prop('tabindex', _this.originalTabindex).off(eventNamespaceSuffix).off(_this.eventTriggers).unwrap().unwrap();\n\n        _this.state.enabled = false;\n      }\n    }\n  }; // A really lightweight plugin wrapper around the constructor,\n  // preventing against multiple instantiations\n\n  $.fn[pluginName] = function (args) {\n    return this.each(function () {\n      var data = $.data(this, pluginName);\n\n      if (data && !data.disableOnMobile) {\n        typeof args === 'string' && data[args] ? data[args]() : data.init(args);\n      } else {\n        $.data(this, pluginName, new Selectric(this, args));\n      }\n    });\n  };\n  /**\n   * Default plugin options\n   *\n   * @type {object}\n   */\n\n\n  $.fn[pluginName].defaults = {\n    onChange: function onChange(elm) {\n      $(elm).change();\n    },\n    maxHeight: 300,\n    keySearchTimeout: 500,\n    arrowButtonMarkup: '<b class=\"icon-map-o button\"></b>',\n    disableOnMobile: false,\n    nativeOnMobile: true,\n    openOnFocus: true,\n    openOnHover: false,\n    hoverIntentTimeout: 500,\n    expandToItemText: false,\n    responsive: false,\n    preventWindowScroll: true,\n    inheritOriginalWidth: false,\n    allowWrap: true,\n    forceRenderAbove: false,\n    forceRenderBelow: false,\n    stopPropagation: true,\n    optionsItemBuilder: '{text}',\n    // function(itemData, element, index)\n    labelBuilder: '{text}',\n    // function(currItem)\n    listBuilder: false,\n    // function(items)\n    keys: {\n      previous: [37, 38],\n      // Left / Up\n      next: [39, 40],\n      // Right / Down\n      select: [9, 13, 27],\n      // Tab / Enter / Escape\n      open: [13, 32, 37, 38, 39, 40],\n      // Enter / Space / Left / Up / Right / Down\n      close: [9, 27] // Tab / Escape\n\n    },\n    customClass: {\n      prefix: pluginName,\n      camelCase: false\n    },\n    multiple: {\n      separator: ', ',\n      keepMenuOpen: true,\n      maxLabelEntries: false\n    }\n  };\n});\n\n//# sourceURL=webpack:///./jquery.selectric.js?");

/***/ }),

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"../node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/style.css */ \"./styles/style.css\");\n/* harmony import */ var _styles_style_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_style_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_styles_profile_sass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styles/styles_profile.sass */ \"./styles/styles_profile.sass\");\n/* harmony import */ var _styles_styles_profile_sass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_styles_profile_sass__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _styles_selectric_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./styles/selectric.scss */ \"./styles/selectric.scss\");\n/* harmony import */ var _styles_selectric_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_selectric_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _styles_intlInputPhone_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styles/intlInputPhone.css */ \"./styles/intlInputPhone.css\");\n/* harmony import */ var _styles_intlInputPhone_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_intlInputPhone_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _img_logo_jpg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./img/logo.jpg */ \"./img/logo.jpg\");\n/* harmony import */ var _jquery_selectric_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./jquery.selectric.js */ \"./jquery.selectric.js\");\n/* harmony import */ var _jquery_selectric_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_jquery_selectric_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _intlInputPhone_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./intlInputPhone.js */ \"./intlInputPhone.js\");\n/* harmony import */ var _intlInputPhone_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_intlInputPhone_js__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('select').selectric();\n  var input = document.querySelector('#phoneNumber');\n  input.placeholder = 'Телефон';\n  input.style.width = '285px';\n});\n\n//# sourceURL=webpack:///./main.js?");

/***/ }),

/***/ "./styles/intlInputPhone.css":
/*!***********************************!*\
  !*** ./styles/intlInputPhone.css ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./styles/intlInputPhone.css?");

/***/ }),

/***/ "./styles/selectric.scss":
/*!*******************************!*\
  !*** ./styles/selectric.scss ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./styles/selectric.scss?");

/***/ }),

/***/ "./styles/style.css":
/*!**************************!*\
  !*** ./styles/style.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./styles/style.css?");

/***/ }),

/***/ "./styles/styles_profile.sass":
/*!************************************!*\
  !*** ./styles/styles_profile.sass ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./styles/styles_profile.sass?");

/***/ })

/******/ });